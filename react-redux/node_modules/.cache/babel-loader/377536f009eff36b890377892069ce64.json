{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"BackdropProps\"],\n      _excluded2 = [\"anchor\", \"disableBackdropTransition\", \"disableDiscovery\", \"disableSwipeToOpen\", \"hideBackdrop\", \"hysteresis\", \"allowSwipeInChildren\", \"minFlingVelocity\", \"ModalProps\", \"onClose\", \"onOpen\", \"open\", \"PaperProps\", \"SwipeAreaProps\", \"swipeAreaWidth\", \"transitionDuration\", \"variant\"];\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport { elementTypeAcceptingRef } from '@mui/utils';\nimport { useThemeProps } from '@mui/system';\nimport { NoSsr } from '@mui/base';\nimport Drawer, { getAnchor, isHorizontal } from '../Drawer/Drawer';\nimport useForkRef from '../utils/useForkRef';\nimport ownerDocument from '../utils/ownerDocument';\nimport ownerWindow from '../utils/ownerWindow';\nimport useEventCallback from '../utils/useEventCallback';\nimport useEnhancedEffect from '../utils/useEnhancedEffect';\nimport useTheme from '../styles/useTheme';\nimport { getTransitionProps } from '../transitions/utils';\nimport SwipeArea from './SwipeArea'; // This value is closed to what browsers are using internally to\n// trigger a native scroll.\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst UNCERTAINTY_THRESHOLD = 3; // px\n// This is the part of the drawer displayed on touch start.\n\nconst DRAG_STARTED_SIGNAL = 20; // px\n// We can only have one instance at the time claiming ownership for handling the swipe.\n// Otherwise, the UX would be confusing.\n// That's why we use a singleton here.\n\nlet claimedSwipeInstance = null; // Exported for test purposes.\n\nexport function reset() {\n  claimedSwipeInstance = null;\n}\n\nfunction calculateCurrentX(anchor, touches, doc) {\n  return anchor === 'right' ? doc.body.offsetWidth - touches[0].pageX : touches[0].pageX;\n}\n\nfunction calculateCurrentY(anchor, touches, containerWindow) {\n  return anchor === 'bottom' ? containerWindow.innerHeight - touches[0].clientY : touches[0].clientY;\n}\n\nfunction getMaxTranslate(horizontalSwipe, paperInstance) {\n  return horizontalSwipe ? paperInstance.clientWidth : paperInstance.clientHeight;\n}\n\nfunction getTranslate(currentTranslate, startLocation, open, maxTranslate) {\n  return Math.min(Math.max(open ? startLocation - currentTranslate : maxTranslate + startLocation - currentTranslate, 0), maxTranslate);\n}\n/**\r\n * @param {Element | null} element\r\n * @param {Element} rootNode\r\n */\n\n\nfunction getDomTreeShapes(element, rootNode) {\n  // Adapted from https://github.com/oliviertassinari/react-swipeable-views/blob/7666de1dba253b896911adf2790ce51467670856/packages/react-swipeable-views/src/SwipeableViews.js#L129\n  const domTreeShapes = [];\n\n  while (element && element !== rootNode.parentElement) {\n    const style = ownerWindow(rootNode).getComputedStyle(element);\n\n    if ( // Ignore the scroll children if the element is absolute positioned.\n    style.getPropertyValue('position') === 'absolute' || // Ignore the scroll children if the element has an overflowX hidden\n    style.getPropertyValue('overflow-x') === 'hidden') {// noop\n    } else if (element.clientWidth > 0 && element.scrollWidth > element.clientWidth || element.clientHeight > 0 && element.scrollHeight > element.clientHeight) {\n      // Ignore the nodes that have no width.\n      // Keep elements with a scroll\n      domTreeShapes.push(element);\n    }\n\n    element = element.parentElement;\n  }\n\n  return domTreeShapes;\n}\n/**\r\n * @param {object} param0\r\n * @param {ReturnType<getDomTreeShapes>} param0.domTreeShapes\r\n */\n\n\nfunction computeHasNativeHandler(_ref) {\n  let {\n    domTreeShapes,\n    start,\n    current,\n    anchor\n  } = _ref;\n  // Adapted from https://github.com/oliviertassinari/react-swipeable-views/blob/7666de1dba253b896911adf2790ce51467670856/packages/react-swipeable-views/src/SwipeableViews.js#L175\n  const axisProperties = {\n    scrollPosition: {\n      x: 'scrollLeft',\n      y: 'scrollTop'\n    },\n    scrollLength: {\n      x: 'scrollWidth',\n      y: 'scrollHeight'\n    },\n    clientLength: {\n      x: 'clientWidth',\n      y: 'clientHeight'\n    }\n  };\n  return domTreeShapes.some(shape => {\n    // Determine if we are going backward or forward.\n    let goingForward = current >= start;\n\n    if (anchor === 'top' || anchor === 'left') {\n      goingForward = !goingForward;\n    }\n\n    const axis = anchor === 'left' || anchor === 'right' ? 'x' : 'y';\n    const scrollPosition = Math.round(shape[axisProperties.scrollPosition[axis]]);\n    const areNotAtStart = scrollPosition > 0;\n    const areNotAtEnd = scrollPosition + shape[axisProperties.clientLength[axis]] < shape[axisProperties.scrollLength[axis]];\n\n    if (goingForward && areNotAtEnd || !goingForward && areNotAtStart) {\n      return true;\n    }\n\n    return false;\n  });\n}\n\nconst iOS = typeof navigator !== 'undefined' && /iPad|iPhone|iPod/.test(navigator.userAgent);\nconst SwipeableDrawer = /*#__PURE__*/React.forwardRef(function SwipeableDrawer(inProps, ref) {\n  const props = useThemeProps({\n    name: 'MuiSwipeableDrawer',\n    props: inProps\n  });\n  const theme = useTheme();\n  const transitionDurationDefault = {\n    enter: theme.transitions.duration.enteringScreen,\n    exit: theme.transitions.duration.leavingScreen\n  };\n\n  const {\n    anchor = 'left',\n    disableBackdropTransition = false,\n    disableDiscovery = false,\n    disableSwipeToOpen = iOS,\n    hideBackdrop,\n    hysteresis = 0.52,\n    allowSwipeInChildren = false,\n    minFlingVelocity = 450,\n    ModalProps: {\n      BackdropProps\n    } = {},\n    onClose,\n    onOpen,\n    open = false,\n    PaperProps = {},\n    SwipeAreaProps,\n    swipeAreaWidth = 20,\n    transitionDuration = transitionDurationDefault,\n    variant = 'temporary' // Mobile first.\n\n  } = props,\n        ModalPropsProp = _objectWithoutPropertiesLoose(props.ModalProps, _excluded),\n        other = _objectWithoutPropertiesLoose(props, _excluded2);\n\n  const [maybeSwiping, setMaybeSwiping] = React.useState(false);\n  const swipeInstance = React.useRef({\n    isSwiping: null\n  });\n  const swipeAreaRef = React.useRef();\n  const backdropRef = React.useRef();\n  const paperRef = React.useRef();\n  const handleRef = useForkRef(PaperProps.ref, paperRef);\n  const touchDetected = React.useRef(false); // Ref for transition duration based on / to match swipe speed\n\n  const calculatedDurationRef = React.useRef(); // Use a ref so the open value used is always up to date inside useCallback.\n\n  useEnhancedEffect(() => {\n    calculatedDurationRef.current = null;\n  }, [open]);\n  const setPosition = React.useCallback(function (translate) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    const {\n      mode = null,\n      changeTransition = true\n    } = options;\n    const anchorRtl = getAnchor(theme, anchor);\n    const rtlTranslateMultiplier = ['right', 'bottom'].indexOf(anchorRtl) !== -1 ? 1 : -1;\n    const horizontalSwipe = isHorizontal(anchor);\n    const transform = horizontalSwipe ? `translate(${rtlTranslateMultiplier * translate}px, 0)` : `translate(0, ${rtlTranslateMultiplier * translate}px)`;\n    const drawerStyle = paperRef.current.style;\n    drawerStyle.webkitTransform = transform;\n    drawerStyle.transform = transform;\n    let transition = '';\n\n    if (mode) {\n      transition = theme.transitions.create('all', getTransitionProps({\n        easing: undefined,\n        style: undefined,\n        timeout: transitionDuration\n      }, {\n        mode\n      }));\n    }\n\n    if (changeTransition) {\n      drawerStyle.webkitTransition = transition;\n      drawerStyle.transition = transition;\n    }\n\n    if (!disableBackdropTransition && !hideBackdrop) {\n      const backdropStyle = backdropRef.current.style;\n      backdropStyle.opacity = 1 - translate / getMaxTranslate(horizontalSwipe, paperRef.current);\n\n      if (changeTransition) {\n        backdropStyle.webkitTransition = transition;\n        backdropStyle.transition = transition;\n      }\n    }\n  }, [anchor, disableBackdropTransition, hideBackdrop, theme, transitionDuration]);\n  const handleBodyTouchEnd = useEventCallback(nativeEvent => {\n    if (!touchDetected.current) {\n      return;\n    }\n\n    claimedSwipeInstance = null;\n    touchDetected.current = false;\n    ReactDOM.flushSync(() => {\n      setMaybeSwiping(false);\n    }); // The swipe wasn't started.\n\n    if (!swipeInstance.current.isSwiping) {\n      swipeInstance.current.isSwiping = null;\n      return;\n    }\n\n    swipeInstance.current.isSwiping = null;\n    const anchorRtl = getAnchor(theme, anchor);\n    const horizontal = isHorizontal(anchor);\n    let current;\n\n    if (horizontal) {\n      current = calculateCurrentX(anchorRtl, nativeEvent.changedTouches, ownerDocument(nativeEvent.currentTarget));\n    } else {\n      current = calculateCurrentY(anchorRtl, nativeEvent.changedTouches, ownerWindow(nativeEvent.currentTarget));\n    }\n\n    const startLocation = horizontal ? swipeInstance.current.startX : swipeInstance.current.startY;\n    const maxTranslate = getMaxTranslate(horizontal, paperRef.current);\n    const currentTranslate = getTranslate(current, startLocation, open, maxTranslate);\n    const translateRatio = currentTranslate / maxTranslate;\n\n    if (Math.abs(swipeInstance.current.velocity) > minFlingVelocity) {\n      // Calculate transition duration to match swipe speed\n      calculatedDurationRef.current = Math.abs((maxTranslate - currentTranslate) / swipeInstance.current.velocity) * 1000;\n    }\n\n    if (open) {\n      if (swipeInstance.current.velocity > minFlingVelocity || translateRatio > hysteresis) {\n        onClose();\n      } else {\n        // Reset the position, the swipe was aborted.\n        setPosition(0, {\n          mode: 'exit'\n        });\n      }\n\n      return;\n    }\n\n    if (swipeInstance.current.velocity < -minFlingVelocity || 1 - translateRatio > hysteresis) {\n      onOpen();\n    } else {\n      // Reset the position, the swipe was aborted.\n      setPosition(getMaxTranslate(horizontal, paperRef.current), {\n        mode: 'enter'\n      });\n    }\n  });\n\n  const startMaybeSwiping = function () {\n    let force = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n    if (!maybeSwiping) {\n      // on Safari Mobile, if you want to be able to have the 'click' event fired on child elements, nothing in the DOM can be changed.\n      // this is because Safari Mobile will not fire any mouse events (still fires touch though) if the DOM changes during mousemove.\n      // so do this change on first touchmove instead of touchstart\n      if (force || !(disableDiscovery && allowSwipeInChildren)) {\n        ReactDOM.flushSync(() => {\n          setMaybeSwiping(true);\n        });\n      }\n\n      const horizontalSwipe = isHorizontal(anchor);\n\n      if (!open && paperRef.current) {\n        // The ref may be null when a parent component updates while swiping.\n        setPosition(getMaxTranslate(horizontalSwipe, paperRef.current) + (disableDiscovery ? 15 : -DRAG_STARTED_SIGNAL), {\n          changeTransition: false\n        });\n      }\n\n      swipeInstance.current.velocity = 0;\n      swipeInstance.current.lastTime = null;\n      swipeInstance.current.lastTranslate = null;\n      swipeInstance.current.paperHit = false;\n      touchDetected.current = true;\n    }\n  };\n\n  const handleBodyTouchMove = useEventCallback(nativeEvent => {\n    // the ref may be null when a parent component updates while swiping\n    if (!paperRef.current || !touchDetected.current) {\n      return;\n    } // We are not supposed to handle this touch move because the swipe was started in a scrollable container in the drawer\n\n\n    if (claimedSwipeInstance !== null && claimedSwipeInstance !== swipeInstance.current) {\n      return;\n    }\n\n    startMaybeSwiping(true);\n    const anchorRtl = getAnchor(theme, anchor);\n    const horizontalSwipe = isHorizontal(anchor);\n    const currentX = calculateCurrentX(anchorRtl, nativeEvent.touches, ownerDocument(nativeEvent.currentTarget));\n    const currentY = calculateCurrentY(anchorRtl, nativeEvent.touches, ownerWindow(nativeEvent.currentTarget));\n\n    if (open && paperRef.current.contains(nativeEvent.target) && claimedSwipeInstance === null) {\n      const domTreeShapes = getDomTreeShapes(nativeEvent.target, paperRef.current);\n      const hasNativeHandler = computeHasNativeHandler({\n        domTreeShapes,\n        start: horizontalSwipe ? swipeInstance.current.startX : swipeInstance.current.startY,\n        current: horizontalSwipe ? currentX : currentY,\n        anchor\n      });\n\n      if (hasNativeHandler) {\n        claimedSwipeInstance = true;\n        return;\n      }\n\n      claimedSwipeInstance = swipeInstance.current;\n    } // We don't know yet.\n\n\n    if (swipeInstance.current.isSwiping == null) {\n      const dx = Math.abs(currentX - swipeInstance.current.startX);\n      const dy = Math.abs(currentY - swipeInstance.current.startY);\n      const definitelySwiping = horizontalSwipe ? dx > dy && dx > UNCERTAINTY_THRESHOLD : dy > dx && dy > UNCERTAINTY_THRESHOLD;\n\n      if (definitelySwiping && nativeEvent.cancelable) {\n        nativeEvent.preventDefault();\n      }\n\n      if (definitelySwiping === true || (horizontalSwipe ? dy > UNCERTAINTY_THRESHOLD : dx > UNCERTAINTY_THRESHOLD)) {\n        swipeInstance.current.isSwiping = definitelySwiping;\n\n        if (!definitelySwiping) {\n          handleBodyTouchEnd(nativeEvent);\n          return;\n        } // Shift the starting point.\n\n\n        swipeInstance.current.startX = currentX;\n        swipeInstance.current.startY = currentY; // Compensate for the part of the drawer displayed on touch start.\n\n        if (!disableDiscovery && !open) {\n          if (horizontalSwipe) {\n            swipeInstance.current.startX -= DRAG_STARTED_SIGNAL;\n          } else {\n            swipeInstance.current.startY -= DRAG_STARTED_SIGNAL;\n          }\n        }\n      }\n    }\n\n    if (!swipeInstance.current.isSwiping) {\n      return;\n    }\n\n    const maxTranslate = getMaxTranslate(horizontalSwipe, paperRef.current);\n    let startLocation = horizontalSwipe ? swipeInstance.current.startX : swipeInstance.current.startY;\n\n    if (open && !swipeInstance.current.paperHit) {\n      startLocation = Math.min(startLocation, maxTranslate);\n    }\n\n    const translate = getTranslate(horizontalSwipe ? currentX : currentY, startLocation, open, maxTranslate);\n\n    if (open) {\n      if (!swipeInstance.current.paperHit) {\n        const paperHit = horizontalSwipe ? currentX < maxTranslate : currentY < maxTranslate;\n\n        if (paperHit) {\n          swipeInstance.current.paperHit = true;\n          swipeInstance.current.startX = currentX;\n          swipeInstance.current.startY = currentY;\n        } else {\n          return;\n        }\n      } else if (translate === 0) {\n        swipeInstance.current.startX = currentX;\n        swipeInstance.current.startY = currentY;\n      }\n    }\n\n    if (swipeInstance.current.lastTranslate === null) {\n      swipeInstance.current.lastTranslate = translate;\n      swipeInstance.current.lastTime = performance.now() + 1;\n    }\n\n    const velocity = (translate - swipeInstance.current.lastTranslate) / (performance.now() - swipeInstance.current.lastTime) * 1e3; // Low Pass filter.\n\n    swipeInstance.current.velocity = swipeInstance.current.velocity * 0.4 + velocity * 0.6;\n    swipeInstance.current.lastTranslate = translate;\n    swipeInstance.current.lastTime = performance.now(); // We are swiping, let's prevent the scroll event on iOS.\n\n    if (nativeEvent.cancelable) {\n      nativeEvent.preventDefault();\n    }\n\n    setPosition(translate);\n  });\n  const handleBodyTouchStart = useEventCallback(nativeEvent => {\n    // We are not supposed to handle this touch move.\n    // Example of use case: ignore the event if there is a Slider.\n    if (nativeEvent.defaultPrevented) {\n      return;\n    } // We can only have one node at the time claiming ownership for handling the swipe.\n\n\n    if (nativeEvent.defaultMuiPrevented) {\n      return;\n    } // At least one element clogs the drawer interaction zone.\n\n\n    if (open && (hideBackdrop || !backdropRef.current.contains(nativeEvent.target)) && !paperRef.current.contains(nativeEvent.target)) {\n      return;\n    }\n\n    const anchorRtl = getAnchor(theme, anchor);\n    const horizontalSwipe = isHorizontal(anchor);\n    const currentX = calculateCurrentX(anchorRtl, nativeEvent.touches, ownerDocument(nativeEvent.currentTarget));\n    const currentY = calculateCurrentY(anchorRtl, nativeEvent.touches, ownerWindow(nativeEvent.currentTarget));\n\n    if (!open) {\n      var _paperRef$current; // logic for if swipe should be ignored:\n      // if disableSwipeToOpen\n      // if target != swipeArea, and target is not a child of paper ref\n      // if is a child of paper ref, and `allowSwipeInChildren` does not allow it\n\n\n      if (disableSwipeToOpen || !(nativeEvent.target === swipeAreaRef.current || (_paperRef$current = paperRef.current) != null && _paperRef$current.contains(nativeEvent.target) && (typeof allowSwipeInChildren === 'function' ? allowSwipeInChildren(nativeEvent, swipeAreaRef.current, paperRef.current) : allowSwipeInChildren))) {\n        return;\n      }\n\n      if (horizontalSwipe) {\n        if (currentX > swipeAreaWidth) {\n          return;\n        }\n      } else if (currentY > swipeAreaWidth) {\n        return;\n      }\n    }\n\n    nativeEvent.defaultMuiPrevented = true;\n    claimedSwipeInstance = null;\n    swipeInstance.current.startX = currentX;\n    swipeInstance.current.startY = currentY;\n    startMaybeSwiping();\n  });\n  React.useEffect(() => {\n    if (variant === 'temporary') {\n      const doc = ownerDocument(paperRef.current);\n      doc.addEventListener('touchstart', handleBodyTouchStart); // A blocking listener prevents Firefox's navbar to auto-hide on scroll.\n      // It only needs to prevent scrolling on the drawer's content when open.\n      // When closed, the overlay prevents scrolling.\n\n      doc.addEventListener('touchmove', handleBodyTouchMove, {\n        passive: !open\n      });\n      doc.addEventListener('touchend', handleBodyTouchEnd);\n      return () => {\n        doc.removeEventListener('touchstart', handleBodyTouchStart);\n        doc.removeEventListener('touchmove', handleBodyTouchMove, {\n          passive: !open\n        });\n        doc.removeEventListener('touchend', handleBodyTouchEnd);\n      };\n    }\n\n    return undefined;\n  }, [variant, open, handleBodyTouchStart, handleBodyTouchMove, handleBodyTouchEnd]);\n  React.useEffect(() => () => {\n    // We need to release the lock.\n    if (claimedSwipeInstance === swipeInstance.current) {\n      claimedSwipeInstance = null;\n    }\n  }, []);\n  React.useEffect(() => {\n    if (!open) {\n      setMaybeSwiping(false);\n    }\n  }, [open]);\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(Drawer, _extends({\n      open: variant === 'temporary' && maybeSwiping ? true : open,\n      variant: variant,\n      ModalProps: _extends({\n        BackdropProps: _extends({}, BackdropProps, {\n          ref: backdropRef\n        })\n      }, variant === 'temporary' && {\n        keepMounted: true\n      }, ModalPropsProp),\n      hideBackdrop: hideBackdrop,\n      PaperProps: _extends({}, PaperProps, {\n        style: _extends({\n          pointerEvents: variant === 'temporary' && !open && !allowSwipeInChildren ? 'none' : ''\n        }, PaperProps.style),\n        ref: handleRef\n      }),\n      anchor: anchor,\n      transitionDuration: calculatedDurationRef.current || transitionDuration,\n      onClose: onClose,\n      ref: ref\n    }, other)), !disableSwipeToOpen && variant === 'temporary' && /*#__PURE__*/_jsx(NoSsr, {\n      children: /*#__PURE__*/_jsx(SwipeArea, _extends({\n        anchor: anchor,\n        ref: swipeAreaRef,\n        width: swipeAreaWidth\n      }, SwipeAreaProps))\n    })]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? SwipeableDrawer.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\r\n   * If set to true, the swipe event will open the drawer even if the user begins the swipe on one of the drawer's children.\r\n   * This can be useful in scenarios where the drawer is partially visible.\r\n   * You can customize it further with a callback that determines which children the user can drag over to open the drawer\r\n   * (for example, to ignore other elements that handle touch move events, like sliders).\r\n   *\r\n   * @param {TouchEvent} event The 'touchstart' event\r\n   * @param {HTMLDivElement} swipeArea The swipe area element\r\n   * @param {HTMLDivElement} paper The drawer's paper element\r\n   *\r\n   * @default false\r\n   */\n  allowSwipeInChildren: PropTypes.oneOfType([PropTypes.bool, PropTypes.func]),\n\n  /**\r\n   * @ignore\r\n   */\n  anchor: PropTypes.oneOf(['bottom', 'left', 'right', 'top']),\n\n  /**\r\n   * The content of the component.\r\n   */\n  children: PropTypes.node,\n\n  /**\r\n   * Disable the backdrop transition.\r\n   * This can improve the FPS on low-end devices.\r\n   * @default false\r\n   */\n  disableBackdropTransition: PropTypes.bool,\n\n  /**\r\n   * If `true`, touching the screen near the edge of the drawer will not slide in the drawer a bit\r\n   * to promote accidental discovery of the swipe gesture.\r\n   * @default false\r\n   */\n  disableDiscovery: PropTypes.bool,\n\n  /**\r\n   * If `true`, swipe to open is disabled. This is useful in browsers where swiping triggers\r\n   * navigation actions. Swipe to open is disabled on iOS browsers by default.\r\n   * @default typeof navigator !== 'undefined' && /iPad|iPhone|iPod/.test(navigator.userAgent)\r\n   */\n  disableSwipeToOpen: PropTypes.bool,\n\n  /**\r\n   * @ignore\r\n   */\n  hideBackdrop: PropTypes.bool,\n\n  /**\r\n   * Affects how far the drawer must be opened/closed to change its state.\r\n   * Specified as percent (0-1) of the width of the drawer\r\n   * @default 0.52\r\n   */\n  hysteresis: PropTypes.number,\n\n  /**\r\n   * Defines, from which (average) velocity on, the swipe is\r\n   * defined as complete although hysteresis isn't reached.\r\n   * Good threshold is between 250 - 1000 px/s\r\n   * @default 450\r\n   */\n  minFlingVelocity: PropTypes.number,\n\n  /**\r\n   * @ignore\r\n   */\n  ModalProps: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .shape({\n    BackdropProps: PropTypes.shape({\n      component: elementTypeAcceptingRef\n    })\n  }),\n\n  /**\r\n   * Callback fired when the component requests to be closed.\r\n   *\r\n   * @param {object} event The event source of the callback.\r\n   */\n  onClose: PropTypes.func.isRequired,\n\n  /**\r\n   * Callback fired when the component requests to be opened.\r\n   *\r\n   * @param {object} event The event source of the callback.\r\n   */\n  onOpen: PropTypes.func.isRequired,\n\n  /**\r\n   * If `true`, the component is shown.\r\n   * @default false\r\n   */\n  open: PropTypes.bool.isRequired,\n\n  /**\r\n   * @ignore\r\n   */\n  PaperProps: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .shape({\n    component: elementTypeAcceptingRef,\n    style: PropTypes.object\n  }),\n\n  /**\r\n   * The element is used to intercept the touch events on the edge.\r\n   */\n  SwipeAreaProps: PropTypes.object,\n\n  /**\r\n   * The width of the left most (or right most) area in `px` that\r\n   * the drawer can be swiped open from.\r\n   * @default 20\r\n   */\n  swipeAreaWidth: PropTypes.number,\n\n  /**\r\n   * The duration for the transition, in milliseconds.\r\n   * You may specify a single timeout for all transitions, or individually with an object.\r\n   * @default {\r\n   *   enter: theme.transitions.duration.enteringScreen,\r\n   *   exit: theme.transitions.duration.leavingScreen,\r\n   * }\r\n   */\n  transitionDuration: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    appear: PropTypes.number,\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  })]),\n\n  /**\r\n   * @ignore\r\n   */\n  variant: PropTypes.oneOf(['permanent', 'persistent', 'temporary'])\n} : void 0;\nexport default SwipeableDrawer;","map":{"version":3,"names":["_extends","_objectWithoutPropertiesLoose","_excluded","_excluded2","React","ReactDOM","PropTypes","elementTypeAcceptingRef","useThemeProps","NoSsr","Drawer","getAnchor","isHorizontal","useForkRef","ownerDocument","ownerWindow","useEventCallback","useEnhancedEffect","useTheme","getTransitionProps","SwipeArea","jsx","_jsx","jsxs","_jsxs","UNCERTAINTY_THRESHOLD","DRAG_STARTED_SIGNAL","claimedSwipeInstance","reset","calculateCurrentX","anchor","touches","doc","body","offsetWidth","pageX","calculateCurrentY","containerWindow","innerHeight","clientY","getMaxTranslate","horizontalSwipe","paperInstance","clientWidth","clientHeight","getTranslate","currentTranslate","startLocation","open","maxTranslate","Math","min","max","getDomTreeShapes","element","rootNode","domTreeShapes","parentElement","style","getComputedStyle","getPropertyValue","scrollWidth","scrollHeight","push","computeHasNativeHandler","start","current","axisProperties","scrollPosition","x","y","scrollLength","clientLength","some","shape","goingForward","axis","round","areNotAtStart","areNotAtEnd","iOS","navigator","test","userAgent","SwipeableDrawer","forwardRef","inProps","ref","props","name","theme","transitionDurationDefault","enter","transitions","duration","enteringScreen","exit","leavingScreen","disableBackdropTransition","disableDiscovery","disableSwipeToOpen","hideBackdrop","hysteresis","allowSwipeInChildren","minFlingVelocity","ModalProps","BackdropProps","onClose","onOpen","PaperProps","SwipeAreaProps","swipeAreaWidth","transitionDuration","variant","ModalPropsProp","other","maybeSwiping","setMaybeSwiping","useState","swipeInstance","useRef","isSwiping","swipeAreaRef","backdropRef","paperRef","handleRef","touchDetected","calculatedDurationRef","setPosition","useCallback","translate","options","mode","changeTransition","anchorRtl","rtlTranslateMultiplier","indexOf","transform","drawerStyle","webkitTransform","transition","create","easing","undefined","timeout","webkitTransition","backdropStyle","opacity","handleBodyTouchEnd","nativeEvent","flushSync","horizontal","changedTouches","currentTarget","startX","startY","translateRatio","abs","velocity","startMaybeSwiping","force","lastTime","lastTranslate","paperHit","handleBodyTouchMove","currentX","currentY","contains","target","hasNativeHandler","dx","dy","definitelySwiping","cancelable","preventDefault","performance","now","handleBodyTouchStart","defaultPrevented","defaultMuiPrevented","_paperRef$current","useEffect","addEventListener","passive","removeEventListener","Fragment","children","keepMounted","pointerEvents","width","process","env","NODE_ENV","propTypes","oneOfType","bool","func","oneOf","node","number","component","isRequired","object","appear"],"sources":["C:/Users/Admin/Desktop/react_complete_information/react-redux/node_modules/@mui/material/SwipeableDrawer/SwipeableDrawer.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nconst _excluded = [\"BackdropProps\"],\r\n  _excluded2 = [\"anchor\", \"disableBackdropTransition\", \"disableDiscovery\", \"disableSwipeToOpen\", \"hideBackdrop\", \"hysteresis\", \"allowSwipeInChildren\", \"minFlingVelocity\", \"ModalProps\", \"onClose\", \"onOpen\", \"open\", \"PaperProps\", \"SwipeAreaProps\", \"swipeAreaWidth\", \"transitionDuration\", \"variant\"];\r\nimport * as React from 'react';\r\nimport * as ReactDOM from 'react-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { elementTypeAcceptingRef } from '@mui/utils';\r\nimport { useThemeProps } from '@mui/system';\r\nimport { NoSsr } from '@mui/base';\r\nimport Drawer, { getAnchor, isHorizontal } from '../Drawer/Drawer';\r\nimport useForkRef from '../utils/useForkRef';\r\nimport ownerDocument from '../utils/ownerDocument';\r\nimport ownerWindow from '../utils/ownerWindow';\r\nimport useEventCallback from '../utils/useEventCallback';\r\nimport useEnhancedEffect from '../utils/useEnhancedEffect';\r\nimport useTheme from '../styles/useTheme';\r\nimport { getTransitionProps } from '../transitions/utils';\r\nimport SwipeArea from './SwipeArea';\r\n\r\n// This value is closed to what browsers are using internally to\r\n// trigger a native scroll.\r\nimport { jsx as _jsx } from \"react/jsx-runtime\";\r\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\r\nconst UNCERTAINTY_THRESHOLD = 3; // px\r\n\r\n// This is the part of the drawer displayed on touch start.\r\nconst DRAG_STARTED_SIGNAL = 20; // px\r\n\r\n// We can only have one instance at the time claiming ownership for handling the swipe.\r\n// Otherwise, the UX would be confusing.\r\n// That's why we use a singleton here.\r\nlet claimedSwipeInstance = null;\r\n\r\n// Exported for test purposes.\r\nexport function reset() {\r\n  claimedSwipeInstance = null;\r\n}\r\nfunction calculateCurrentX(anchor, touches, doc) {\r\n  return anchor === 'right' ? doc.body.offsetWidth - touches[0].pageX : touches[0].pageX;\r\n}\r\nfunction calculateCurrentY(anchor, touches, containerWindow) {\r\n  return anchor === 'bottom' ? containerWindow.innerHeight - touches[0].clientY : touches[0].clientY;\r\n}\r\nfunction getMaxTranslate(horizontalSwipe, paperInstance) {\r\n  return horizontalSwipe ? paperInstance.clientWidth : paperInstance.clientHeight;\r\n}\r\nfunction getTranslate(currentTranslate, startLocation, open, maxTranslate) {\r\n  return Math.min(Math.max(open ? startLocation - currentTranslate : maxTranslate + startLocation - currentTranslate, 0), maxTranslate);\r\n}\r\n\r\n/**\r\n * @param {Element | null} element\r\n * @param {Element} rootNode\r\n */\r\nfunction getDomTreeShapes(element, rootNode) {\r\n  // Adapted from https://github.com/oliviertassinari/react-swipeable-views/blob/7666de1dba253b896911adf2790ce51467670856/packages/react-swipeable-views/src/SwipeableViews.js#L129\r\n  const domTreeShapes = [];\r\n  while (element && element !== rootNode.parentElement) {\r\n    const style = ownerWindow(rootNode).getComputedStyle(element);\r\n    if (\r\n    // Ignore the scroll children if the element is absolute positioned.\r\n    style.getPropertyValue('position') === 'absolute' ||\r\n    // Ignore the scroll children if the element has an overflowX hidden\r\n    style.getPropertyValue('overflow-x') === 'hidden') {\r\n      // noop\r\n    } else if (element.clientWidth > 0 && element.scrollWidth > element.clientWidth || element.clientHeight > 0 && element.scrollHeight > element.clientHeight) {\r\n      // Ignore the nodes that have no width.\r\n      // Keep elements with a scroll\r\n      domTreeShapes.push(element);\r\n    }\r\n    element = element.parentElement;\r\n  }\r\n  return domTreeShapes;\r\n}\r\n\r\n/**\r\n * @param {object} param0\r\n * @param {ReturnType<getDomTreeShapes>} param0.domTreeShapes\r\n */\r\nfunction computeHasNativeHandler({\r\n  domTreeShapes,\r\n  start,\r\n  current,\r\n  anchor\r\n}) {\r\n  // Adapted from https://github.com/oliviertassinari/react-swipeable-views/blob/7666de1dba253b896911adf2790ce51467670856/packages/react-swipeable-views/src/SwipeableViews.js#L175\r\n  const axisProperties = {\r\n    scrollPosition: {\r\n      x: 'scrollLeft',\r\n      y: 'scrollTop'\r\n    },\r\n    scrollLength: {\r\n      x: 'scrollWidth',\r\n      y: 'scrollHeight'\r\n    },\r\n    clientLength: {\r\n      x: 'clientWidth',\r\n      y: 'clientHeight'\r\n    }\r\n  };\r\n  return domTreeShapes.some(shape => {\r\n    // Determine if we are going backward or forward.\r\n    let goingForward = current >= start;\r\n    if (anchor === 'top' || anchor === 'left') {\r\n      goingForward = !goingForward;\r\n    }\r\n    const axis = anchor === 'left' || anchor === 'right' ? 'x' : 'y';\r\n    const scrollPosition = Math.round(shape[axisProperties.scrollPosition[axis]]);\r\n    const areNotAtStart = scrollPosition > 0;\r\n    const areNotAtEnd = scrollPosition + shape[axisProperties.clientLength[axis]] < shape[axisProperties.scrollLength[axis]];\r\n    if (goingForward && areNotAtEnd || !goingForward && areNotAtStart) {\r\n      return true;\r\n    }\r\n    return false;\r\n  });\r\n}\r\nconst iOS = typeof navigator !== 'undefined' && /iPad|iPhone|iPod/.test(navigator.userAgent);\r\nconst SwipeableDrawer = /*#__PURE__*/React.forwardRef(function SwipeableDrawer(inProps, ref) {\r\n  const props = useThemeProps({\r\n    name: 'MuiSwipeableDrawer',\r\n    props: inProps\r\n  });\r\n  const theme = useTheme();\r\n  const transitionDurationDefault = {\r\n    enter: theme.transitions.duration.enteringScreen,\r\n    exit: theme.transitions.duration.leavingScreen\r\n  };\r\n  const {\r\n      anchor = 'left',\r\n      disableBackdropTransition = false,\r\n      disableDiscovery = false,\r\n      disableSwipeToOpen = iOS,\r\n      hideBackdrop,\r\n      hysteresis = 0.52,\r\n      allowSwipeInChildren = false,\r\n      minFlingVelocity = 450,\r\n      ModalProps: {\r\n        BackdropProps\r\n      } = {},\r\n      onClose,\r\n      onOpen,\r\n      open = false,\r\n      PaperProps = {},\r\n      SwipeAreaProps,\r\n      swipeAreaWidth = 20,\r\n      transitionDuration = transitionDurationDefault,\r\n      variant = 'temporary' // Mobile first.\r\n    } = props,\r\n    ModalPropsProp = _objectWithoutPropertiesLoose(props.ModalProps, _excluded),\r\n    other = _objectWithoutPropertiesLoose(props, _excluded2);\r\n  const [maybeSwiping, setMaybeSwiping] = React.useState(false);\r\n  const swipeInstance = React.useRef({\r\n    isSwiping: null\r\n  });\r\n  const swipeAreaRef = React.useRef();\r\n  const backdropRef = React.useRef();\r\n  const paperRef = React.useRef();\r\n  const handleRef = useForkRef(PaperProps.ref, paperRef);\r\n  const touchDetected = React.useRef(false);\r\n\r\n  // Ref for transition duration based on / to match swipe speed\r\n  const calculatedDurationRef = React.useRef();\r\n\r\n  // Use a ref so the open value used is always up to date inside useCallback.\r\n  useEnhancedEffect(() => {\r\n    calculatedDurationRef.current = null;\r\n  }, [open]);\r\n  const setPosition = React.useCallback((translate, options = {}) => {\r\n    const {\r\n      mode = null,\r\n      changeTransition = true\r\n    } = options;\r\n    const anchorRtl = getAnchor(theme, anchor);\r\n    const rtlTranslateMultiplier = ['right', 'bottom'].indexOf(anchorRtl) !== -1 ? 1 : -1;\r\n    const horizontalSwipe = isHorizontal(anchor);\r\n    const transform = horizontalSwipe ? `translate(${rtlTranslateMultiplier * translate}px, 0)` : `translate(0, ${rtlTranslateMultiplier * translate}px)`;\r\n    const drawerStyle = paperRef.current.style;\r\n    drawerStyle.webkitTransform = transform;\r\n    drawerStyle.transform = transform;\r\n    let transition = '';\r\n    if (mode) {\r\n      transition = theme.transitions.create('all', getTransitionProps({\r\n        easing: undefined,\r\n        style: undefined,\r\n        timeout: transitionDuration\r\n      }, {\r\n        mode\r\n      }));\r\n    }\r\n    if (changeTransition) {\r\n      drawerStyle.webkitTransition = transition;\r\n      drawerStyle.transition = transition;\r\n    }\r\n    if (!disableBackdropTransition && !hideBackdrop) {\r\n      const backdropStyle = backdropRef.current.style;\r\n      backdropStyle.opacity = 1 - translate / getMaxTranslate(horizontalSwipe, paperRef.current);\r\n      if (changeTransition) {\r\n        backdropStyle.webkitTransition = transition;\r\n        backdropStyle.transition = transition;\r\n      }\r\n    }\r\n  }, [anchor, disableBackdropTransition, hideBackdrop, theme, transitionDuration]);\r\n  const handleBodyTouchEnd = useEventCallback(nativeEvent => {\r\n    if (!touchDetected.current) {\r\n      return;\r\n    }\r\n    claimedSwipeInstance = null;\r\n    touchDetected.current = false;\r\n    ReactDOM.flushSync(() => {\r\n      setMaybeSwiping(false);\r\n    });\r\n\r\n    // The swipe wasn't started.\r\n    if (!swipeInstance.current.isSwiping) {\r\n      swipeInstance.current.isSwiping = null;\r\n      return;\r\n    }\r\n    swipeInstance.current.isSwiping = null;\r\n    const anchorRtl = getAnchor(theme, anchor);\r\n    const horizontal = isHorizontal(anchor);\r\n    let current;\r\n    if (horizontal) {\r\n      current = calculateCurrentX(anchorRtl, nativeEvent.changedTouches, ownerDocument(nativeEvent.currentTarget));\r\n    } else {\r\n      current = calculateCurrentY(anchorRtl, nativeEvent.changedTouches, ownerWindow(nativeEvent.currentTarget));\r\n    }\r\n    const startLocation = horizontal ? swipeInstance.current.startX : swipeInstance.current.startY;\r\n    const maxTranslate = getMaxTranslate(horizontal, paperRef.current);\r\n    const currentTranslate = getTranslate(current, startLocation, open, maxTranslate);\r\n    const translateRatio = currentTranslate / maxTranslate;\r\n    if (Math.abs(swipeInstance.current.velocity) > minFlingVelocity) {\r\n      // Calculate transition duration to match swipe speed\r\n      calculatedDurationRef.current = Math.abs((maxTranslate - currentTranslate) / swipeInstance.current.velocity) * 1000;\r\n    }\r\n    if (open) {\r\n      if (swipeInstance.current.velocity > minFlingVelocity || translateRatio > hysteresis) {\r\n        onClose();\r\n      } else {\r\n        // Reset the position, the swipe was aborted.\r\n        setPosition(0, {\r\n          mode: 'exit'\r\n        });\r\n      }\r\n      return;\r\n    }\r\n    if (swipeInstance.current.velocity < -minFlingVelocity || 1 - translateRatio > hysteresis) {\r\n      onOpen();\r\n    } else {\r\n      // Reset the position, the swipe was aborted.\r\n      setPosition(getMaxTranslate(horizontal, paperRef.current), {\r\n        mode: 'enter'\r\n      });\r\n    }\r\n  });\r\n  const startMaybeSwiping = (force = false) => {\r\n    if (!maybeSwiping) {\r\n      // on Safari Mobile, if you want to be able to have the 'click' event fired on child elements, nothing in the DOM can be changed.\r\n      // this is because Safari Mobile will not fire any mouse events (still fires touch though) if the DOM changes during mousemove.\r\n      // so do this change on first touchmove instead of touchstart\r\n      if (force || !(disableDiscovery && allowSwipeInChildren)) {\r\n        ReactDOM.flushSync(() => {\r\n          setMaybeSwiping(true);\r\n        });\r\n      }\r\n      const horizontalSwipe = isHorizontal(anchor);\r\n      if (!open && paperRef.current) {\r\n        // The ref may be null when a parent component updates while swiping.\r\n        setPosition(getMaxTranslate(horizontalSwipe, paperRef.current) + (disableDiscovery ? 15 : -DRAG_STARTED_SIGNAL), {\r\n          changeTransition: false\r\n        });\r\n      }\r\n      swipeInstance.current.velocity = 0;\r\n      swipeInstance.current.lastTime = null;\r\n      swipeInstance.current.lastTranslate = null;\r\n      swipeInstance.current.paperHit = false;\r\n      touchDetected.current = true;\r\n    }\r\n  };\r\n  const handleBodyTouchMove = useEventCallback(nativeEvent => {\r\n    // the ref may be null when a parent component updates while swiping\r\n    if (!paperRef.current || !touchDetected.current) {\r\n      return;\r\n    }\r\n\r\n    // We are not supposed to handle this touch move because the swipe was started in a scrollable container in the drawer\r\n    if (claimedSwipeInstance !== null && claimedSwipeInstance !== swipeInstance.current) {\r\n      return;\r\n    }\r\n    startMaybeSwiping(true);\r\n    const anchorRtl = getAnchor(theme, anchor);\r\n    const horizontalSwipe = isHorizontal(anchor);\r\n    const currentX = calculateCurrentX(anchorRtl, nativeEvent.touches, ownerDocument(nativeEvent.currentTarget));\r\n    const currentY = calculateCurrentY(anchorRtl, nativeEvent.touches, ownerWindow(nativeEvent.currentTarget));\r\n    if (open && paperRef.current.contains(nativeEvent.target) && claimedSwipeInstance === null) {\r\n      const domTreeShapes = getDomTreeShapes(nativeEvent.target, paperRef.current);\r\n      const hasNativeHandler = computeHasNativeHandler({\r\n        domTreeShapes,\r\n        start: horizontalSwipe ? swipeInstance.current.startX : swipeInstance.current.startY,\r\n        current: horizontalSwipe ? currentX : currentY,\r\n        anchor\r\n      });\r\n      if (hasNativeHandler) {\r\n        claimedSwipeInstance = true;\r\n        return;\r\n      }\r\n      claimedSwipeInstance = swipeInstance.current;\r\n    }\r\n\r\n    // We don't know yet.\r\n    if (swipeInstance.current.isSwiping == null) {\r\n      const dx = Math.abs(currentX - swipeInstance.current.startX);\r\n      const dy = Math.abs(currentY - swipeInstance.current.startY);\r\n      const definitelySwiping = horizontalSwipe ? dx > dy && dx > UNCERTAINTY_THRESHOLD : dy > dx && dy > UNCERTAINTY_THRESHOLD;\r\n      if (definitelySwiping && nativeEvent.cancelable) {\r\n        nativeEvent.preventDefault();\r\n      }\r\n      if (definitelySwiping === true || (horizontalSwipe ? dy > UNCERTAINTY_THRESHOLD : dx > UNCERTAINTY_THRESHOLD)) {\r\n        swipeInstance.current.isSwiping = definitelySwiping;\r\n        if (!definitelySwiping) {\r\n          handleBodyTouchEnd(nativeEvent);\r\n          return;\r\n        }\r\n\r\n        // Shift the starting point.\r\n        swipeInstance.current.startX = currentX;\r\n        swipeInstance.current.startY = currentY;\r\n\r\n        // Compensate for the part of the drawer displayed on touch start.\r\n        if (!disableDiscovery && !open) {\r\n          if (horizontalSwipe) {\r\n            swipeInstance.current.startX -= DRAG_STARTED_SIGNAL;\r\n          } else {\r\n            swipeInstance.current.startY -= DRAG_STARTED_SIGNAL;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    if (!swipeInstance.current.isSwiping) {\r\n      return;\r\n    }\r\n    const maxTranslate = getMaxTranslate(horizontalSwipe, paperRef.current);\r\n    let startLocation = horizontalSwipe ? swipeInstance.current.startX : swipeInstance.current.startY;\r\n    if (open && !swipeInstance.current.paperHit) {\r\n      startLocation = Math.min(startLocation, maxTranslate);\r\n    }\r\n    const translate = getTranslate(horizontalSwipe ? currentX : currentY, startLocation, open, maxTranslate);\r\n    if (open) {\r\n      if (!swipeInstance.current.paperHit) {\r\n        const paperHit = horizontalSwipe ? currentX < maxTranslate : currentY < maxTranslate;\r\n        if (paperHit) {\r\n          swipeInstance.current.paperHit = true;\r\n          swipeInstance.current.startX = currentX;\r\n          swipeInstance.current.startY = currentY;\r\n        } else {\r\n          return;\r\n        }\r\n      } else if (translate === 0) {\r\n        swipeInstance.current.startX = currentX;\r\n        swipeInstance.current.startY = currentY;\r\n      }\r\n    }\r\n    if (swipeInstance.current.lastTranslate === null) {\r\n      swipeInstance.current.lastTranslate = translate;\r\n      swipeInstance.current.lastTime = performance.now() + 1;\r\n    }\r\n    const velocity = (translate - swipeInstance.current.lastTranslate) / (performance.now() - swipeInstance.current.lastTime) * 1e3;\r\n\r\n    // Low Pass filter.\r\n    swipeInstance.current.velocity = swipeInstance.current.velocity * 0.4 + velocity * 0.6;\r\n    swipeInstance.current.lastTranslate = translate;\r\n    swipeInstance.current.lastTime = performance.now();\r\n\r\n    // We are swiping, let's prevent the scroll event on iOS.\r\n    if (nativeEvent.cancelable) {\r\n      nativeEvent.preventDefault();\r\n    }\r\n    setPosition(translate);\r\n  });\r\n  const handleBodyTouchStart = useEventCallback(nativeEvent => {\r\n    // We are not supposed to handle this touch move.\r\n    // Example of use case: ignore the event if there is a Slider.\r\n    if (nativeEvent.defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    // We can only have one node at the time claiming ownership for handling the swipe.\r\n    if (nativeEvent.defaultMuiPrevented) {\r\n      return;\r\n    }\r\n\r\n    // At least one element clogs the drawer interaction zone.\r\n    if (open && (hideBackdrop || !backdropRef.current.contains(nativeEvent.target)) && !paperRef.current.contains(nativeEvent.target)) {\r\n      return;\r\n    }\r\n    const anchorRtl = getAnchor(theme, anchor);\r\n    const horizontalSwipe = isHorizontal(anchor);\r\n    const currentX = calculateCurrentX(anchorRtl, nativeEvent.touches, ownerDocument(nativeEvent.currentTarget));\r\n    const currentY = calculateCurrentY(anchorRtl, nativeEvent.touches, ownerWindow(nativeEvent.currentTarget));\r\n    if (!open) {\r\n      var _paperRef$current;\r\n      // logic for if swipe should be ignored:\r\n      // if disableSwipeToOpen\r\n      // if target != swipeArea, and target is not a child of paper ref\r\n      // if is a child of paper ref, and `allowSwipeInChildren` does not allow it\r\n      if (disableSwipeToOpen || !(nativeEvent.target === swipeAreaRef.current || (_paperRef$current = paperRef.current) != null && _paperRef$current.contains(nativeEvent.target) && (typeof allowSwipeInChildren === 'function' ? allowSwipeInChildren(nativeEvent, swipeAreaRef.current, paperRef.current) : allowSwipeInChildren))) {\r\n        return;\r\n      }\r\n      if (horizontalSwipe) {\r\n        if (currentX > swipeAreaWidth) {\r\n          return;\r\n        }\r\n      } else if (currentY > swipeAreaWidth) {\r\n        return;\r\n      }\r\n    }\r\n    nativeEvent.defaultMuiPrevented = true;\r\n    claimedSwipeInstance = null;\r\n    swipeInstance.current.startX = currentX;\r\n    swipeInstance.current.startY = currentY;\r\n    startMaybeSwiping();\r\n  });\r\n  React.useEffect(() => {\r\n    if (variant === 'temporary') {\r\n      const doc = ownerDocument(paperRef.current);\r\n      doc.addEventListener('touchstart', handleBodyTouchStart);\r\n      // A blocking listener prevents Firefox's navbar to auto-hide on scroll.\r\n      // It only needs to prevent scrolling on the drawer's content when open.\r\n      // When closed, the overlay prevents scrolling.\r\n      doc.addEventListener('touchmove', handleBodyTouchMove, {\r\n        passive: !open\r\n      });\r\n      doc.addEventListener('touchend', handleBodyTouchEnd);\r\n      return () => {\r\n        doc.removeEventListener('touchstart', handleBodyTouchStart);\r\n        doc.removeEventListener('touchmove', handleBodyTouchMove, {\r\n          passive: !open\r\n        });\r\n        doc.removeEventListener('touchend', handleBodyTouchEnd);\r\n      };\r\n    }\r\n    return undefined;\r\n  }, [variant, open, handleBodyTouchStart, handleBodyTouchMove, handleBodyTouchEnd]);\r\n  React.useEffect(() => () => {\r\n    // We need to release the lock.\r\n    if (claimedSwipeInstance === swipeInstance.current) {\r\n      claimedSwipeInstance = null;\r\n    }\r\n  }, []);\r\n  React.useEffect(() => {\r\n    if (!open) {\r\n      setMaybeSwiping(false);\r\n    }\r\n  }, [open]);\r\n  return /*#__PURE__*/_jsxs(React.Fragment, {\r\n    children: [/*#__PURE__*/_jsx(Drawer, _extends({\r\n      open: variant === 'temporary' && maybeSwiping ? true : open,\r\n      variant: variant,\r\n      ModalProps: _extends({\r\n        BackdropProps: _extends({}, BackdropProps, {\r\n          ref: backdropRef\r\n        })\r\n      }, variant === 'temporary' && {\r\n        keepMounted: true\r\n      }, ModalPropsProp),\r\n      hideBackdrop: hideBackdrop,\r\n      PaperProps: _extends({}, PaperProps, {\r\n        style: _extends({\r\n          pointerEvents: variant === 'temporary' && !open && !allowSwipeInChildren ? 'none' : ''\r\n        }, PaperProps.style),\r\n        ref: handleRef\r\n      }),\r\n      anchor: anchor,\r\n      transitionDuration: calculatedDurationRef.current || transitionDuration,\r\n      onClose: onClose,\r\n      ref: ref\r\n    }, other)), !disableSwipeToOpen && variant === 'temporary' && /*#__PURE__*/_jsx(NoSsr, {\r\n      children: /*#__PURE__*/_jsx(SwipeArea, _extends({\r\n        anchor: anchor,\r\n        ref: swipeAreaRef,\r\n        width: swipeAreaWidth\r\n      }, SwipeAreaProps))\r\n    })]\r\n  });\r\n});\r\nprocess.env.NODE_ENV !== \"production\" ? SwipeableDrawer.propTypes /* remove-proptypes */ = {\r\n  // ----------------------------- Warning --------------------------------\r\n  // | These PropTypes are generated from the TypeScript type definitions |\r\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\r\n  // ----------------------------------------------------------------------\r\n  /**\r\n   * If set to true, the swipe event will open the drawer even if the user begins the swipe on one of the drawer's children.\r\n   * This can be useful in scenarios where the drawer is partially visible.\r\n   * You can customize it further with a callback that determines which children the user can drag over to open the drawer\r\n   * (for example, to ignore other elements that handle touch move events, like sliders).\r\n   *\r\n   * @param {TouchEvent} event The 'touchstart' event\r\n   * @param {HTMLDivElement} swipeArea The swipe area element\r\n   * @param {HTMLDivElement} paper The drawer's paper element\r\n   *\r\n   * @default false\r\n   */\r\n  allowSwipeInChildren: PropTypes.oneOfType([PropTypes.bool, PropTypes.func]),\r\n  /**\r\n   * @ignore\r\n   */\r\n  anchor: PropTypes.oneOf(['bottom', 'left', 'right', 'top']),\r\n  /**\r\n   * The content of the component.\r\n   */\r\n  children: PropTypes.node,\r\n  /**\r\n   * Disable the backdrop transition.\r\n   * This can improve the FPS on low-end devices.\r\n   * @default false\r\n   */\r\n  disableBackdropTransition: PropTypes.bool,\r\n  /**\r\n   * If `true`, touching the screen near the edge of the drawer will not slide in the drawer a bit\r\n   * to promote accidental discovery of the swipe gesture.\r\n   * @default false\r\n   */\r\n  disableDiscovery: PropTypes.bool,\r\n  /**\r\n   * If `true`, swipe to open is disabled. This is useful in browsers where swiping triggers\r\n   * navigation actions. Swipe to open is disabled on iOS browsers by default.\r\n   * @default typeof navigator !== 'undefined' && /iPad|iPhone|iPod/.test(navigator.userAgent)\r\n   */\r\n  disableSwipeToOpen: PropTypes.bool,\r\n  /**\r\n   * @ignore\r\n   */\r\n  hideBackdrop: PropTypes.bool,\r\n  /**\r\n   * Affects how far the drawer must be opened/closed to change its state.\r\n   * Specified as percent (0-1) of the width of the drawer\r\n   * @default 0.52\r\n   */\r\n  hysteresis: PropTypes.number,\r\n  /**\r\n   * Defines, from which (average) velocity on, the swipe is\r\n   * defined as complete although hysteresis isn't reached.\r\n   * Good threshold is between 250 - 1000 px/s\r\n   * @default 450\r\n   */\r\n  minFlingVelocity: PropTypes.number,\r\n  /**\r\n   * @ignore\r\n   */\r\n  ModalProps: PropTypes /* @typescript-to-proptypes-ignore */.shape({\r\n    BackdropProps: PropTypes.shape({\r\n      component: elementTypeAcceptingRef\r\n    })\r\n  }),\r\n  /**\r\n   * Callback fired when the component requests to be closed.\r\n   *\r\n   * @param {object} event The event source of the callback.\r\n   */\r\n  onClose: PropTypes.func.isRequired,\r\n  /**\r\n   * Callback fired when the component requests to be opened.\r\n   *\r\n   * @param {object} event The event source of the callback.\r\n   */\r\n  onOpen: PropTypes.func.isRequired,\r\n  /**\r\n   * If `true`, the component is shown.\r\n   * @default false\r\n   */\r\n  open: PropTypes.bool.isRequired,\r\n  /**\r\n   * @ignore\r\n   */\r\n  PaperProps: PropTypes /* @typescript-to-proptypes-ignore */.shape({\r\n    component: elementTypeAcceptingRef,\r\n    style: PropTypes.object\r\n  }),\r\n  /**\r\n   * The element is used to intercept the touch events on the edge.\r\n   */\r\n  SwipeAreaProps: PropTypes.object,\r\n  /**\r\n   * The width of the left most (or right most) area in `px` that\r\n   * the drawer can be swiped open from.\r\n   * @default 20\r\n   */\r\n  swipeAreaWidth: PropTypes.number,\r\n  /**\r\n   * The duration for the transition, in milliseconds.\r\n   * You may specify a single timeout for all transitions, or individually with an object.\r\n   * @default {\r\n   *   enter: theme.transitions.duration.enteringScreen,\r\n   *   exit: theme.transitions.duration.leavingScreen,\r\n   * }\r\n   */\r\n  transitionDuration: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\r\n    appear: PropTypes.number,\r\n    enter: PropTypes.number,\r\n    exit: PropTypes.number\r\n  })]),\r\n  /**\r\n   * @ignore\r\n   */\r\n  variant: PropTypes.oneOf(['permanent', 'persistent', 'temporary'])\r\n} : void 0;\r\nexport default SwipeableDrawer;"],"mappings":"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"},"metadata":{},"sourceType":"module"}