{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91836\\\\OneDrive\\\\Desktop\\\\react_complete_information\\\\react-redux\\\\src\\\\Hooks\\\\Hooks.jsx\",\n    _s = $RefreshSig$();\n\n//CREATE CONTEXT AND USE CONTEXT HOOKS EXAMPLE TO PASS DATA GLOBALLY IN ANY COMPONENT\n// import {\n//   createContext,\n//   useContext\n// } from 'react';\n// const Sender = createContext();\n// const Header = ()=>{\n//   const userData = useContext(Sender);\n//   const design = (\n//     <h1>{userData.roll}</h1>\n//   );\n//   return design;\n// }\n// const Footer = ()=>{\n//   const fData = useContext(Sender);\n//   console.log(fData);\n//   const design = (\n//     <h1></h1>\n//   );\n//   return design;\n// }\n// const Hooks = ()=>{\n//   const data = {\n//     name: 'aftab',\n//     roll: 3\n//   }\n//   const design = (\n//     <>\n//       <Sender.Provider value={data}>\n//         <Header/>\n//         <Footer/>\n//       </Sender.Provider>\n//     </>\n//   );\n//   return design;\n// }\n// export default Hooks;\n//Toggle Functionality using useStae Hooks Same task done using useReducer Hooks check below\n// import {\n//   useState\n// } from 'react';\n// const Hooks = ()=>{\n//   const[type,setType] = useState(\"text\");\n//   const demo = ()=>{\n//     type == \"text\" ? setType(\"password\") : setType(\"text\");\n//   }\n//   const design = (\n//     <>\n//       <input type={type} />\n//       <button onClick={demo}>Toggle</button>\n//     </>\n//   );\n//   return design;\n// }\n// export default Hooks;\n// Toggle Functionality using useReducer Hooks\n// import {\n//   useReducer\n// } from \"react\";\n//\n// const Hooks = ()=>{\n//\n//   const controlReducer = (currentState,action)=>{\n//      if(action == \"text\"){\n//         return \"password\";\n//       }\n//      return \"text\";\n//   }\n//   const[type,setType] = useReducer(controlReducer,\"password\");\n//   const design = (\n//     <>\n//       <input type={type}/>\n//       <button onClick={()=>setType(type)}>Toggle</button>\n//     </>\n//   );\n//   return design;\n// }\n// export default Hooks;\n//useRef hooks to select any element\n// import {\n//   useRef\n// } from \"react\";\n//\n// const Hooks = ()=>{\n//   const title = useRef();\n//   const demo = ()=>{\n//     console.log(title.current.innerHTML);\n//   }\n//   const design = (\n//     <>\n//       <h1 ref={title}>Welcome to hooks</h1>\n//       <button onClick={demo}>Click</button>\n//     </>\n//   );\n//   return design;\n// }\n// export default Hooks;\n//useCallback hooks mainly used when we have to insert json data or element in array because if we inser\n// data using useState hooks then page render each time so,to stop that we use useCallback technique\nimport { useState, useCallback } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Hooks = () => {\n  _s();\n\n  const [data, setData] = useState([{\n    name: 'aftab',\n    roll: 1\n  }]);\n  const addMore = useCallback(() => {\n    return setData(oldData => {\n      return [...oldData, {\n        name: 'Hello',\n        roll: 2\n      }];\n    });\n  }, [data]);\n\n  const design = /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container py-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table\",\n        children: data.map(item => {\n          const NewTr = /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: newItem.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: newItem.roll\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 18\n            }, this)\n          }, void 0, false);\n\n          return NewTr;\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addMore,\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n\n  return design;\n};\n\n_s(Hooks, \"cv73A9P6WU/HXLymlFLrEG4sc38=\");\n\n_c = Hooks;\nexport default Hooks;\n\nvar _c;\n\n$RefreshReg$(_c, \"Hooks\");","map":{"version":3,"names":["useState","useCallback","Hooks","data","setData","name","roll","addMore","oldData","design","map","item","NewTr","newItem"],"sources":["C:/Users/91836/OneDrive/Desktop/react_complete_information/react-redux/src/Hooks/Hooks.jsx"],"sourcesContent":["//CREATE CONTEXT AND USE CONTEXT HOOKS EXAMPLE TO PASS DATA GLOBALLY IN ANY COMPONENT\r\n\r\n// import {\r\n//   createContext,\r\n//   useContext\r\n// } from 'react';\r\n// const Sender = createContext();\r\n// const Header = ()=>{\r\n//   const userData = useContext(Sender);\r\n//   const design = (\r\n//     <h1>{userData.roll}</h1>\r\n//   );\r\n//   return design;\r\n// }\r\n// const Footer = ()=>{\r\n//   const fData = useContext(Sender);\r\n//   console.log(fData);\r\n//   const design = (\r\n//     <h1></h1>\r\n//   );\r\n//   return design;\r\n// }\r\n// const Hooks = ()=>{\r\n//   const data = {\r\n//     name: 'aftab',\r\n//     roll: 3\r\n//   }\r\n//   const design = (\r\n//     <>\r\n//       <Sender.Provider value={data}>\r\n//         <Header/>\r\n//         <Footer/>\r\n//       </Sender.Provider>\r\n//     </>\r\n//   );\r\n//   return design;\r\n// }\r\n// export default Hooks;\r\n\r\n//Toggle Functionality using useStae Hooks Same task done using useReducer Hooks check below\r\n\r\n// import {\r\n//   useState\r\n// } from 'react';\r\n// const Hooks = ()=>{\r\n//   const[type,setType] = useState(\"text\");\r\n//   const demo = ()=>{\r\n//     type == \"text\" ? setType(\"password\") : setType(\"text\");\r\n//   }\r\n//   const design = (\r\n//     <>\r\n//       <input type={type} />\r\n//       <button onClick={demo}>Toggle</button>\r\n//     </>\r\n//   );\r\n//   return design;\r\n// }\r\n// export default Hooks;\r\n\r\n// Toggle Functionality using useReducer Hooks\r\n\r\n// import {\r\n//   useReducer\r\n// } from \"react\";\r\n//\r\n// const Hooks = ()=>{\r\n//\r\n//   const controlReducer = (currentState,action)=>{\r\n//      if(action == \"text\"){\r\n//         return \"password\";\r\n//       }\r\n//      return \"text\";\r\n//   }\r\n//   const[type,setType] = useReducer(controlReducer,\"password\");\r\n//   const design = (\r\n//     <>\r\n//       <input type={type}/>\r\n//       <button onClick={()=>setType(type)}>Toggle</button>\r\n//     </>\r\n//   );\r\n//   return design;\r\n// }\r\n// export default Hooks;\r\n\r\n//useRef hooks to select any element\r\n\r\n// import {\r\n//   useRef\r\n// } from \"react\";\r\n//\r\n// const Hooks = ()=>{\r\n//   const title = useRef();\r\n//   const demo = ()=>{\r\n//     console.log(title.current.innerHTML);\r\n//   }\r\n//   const design = (\r\n//     <>\r\n//       <h1 ref={title}>Welcome to hooks</h1>\r\n//       <button onClick={demo}>Click</button>\r\n//     </>\r\n//   );\r\n//   return design;\r\n// }\r\n// export default Hooks;\r\n\r\n//useCallback hooks mainly used when we have to insert json data or element in array because if we inser\r\n// data using useState hooks then page render each time so,to stop that we use useCallback technique\r\nimport {\r\n  useState,\r\n  useCallback\r\n} from 'react';\r\n\r\nconst Hooks = ()=>{\r\n  const[data,setData] = useState([{\r\n    name: 'aftab',\r\n    roll: 1\r\n  }])\r\n\r\n\r\n  const addMore = useCallback(()=>{\r\n    return setData((oldData)=>{\r\n      return [\r\n        ... oldData,\r\n        {\r\n          name: 'Hello',\r\n          roll: 2\r\n        }\r\n      ]\r\n    })\r\n  },[data]);\r\n\r\n  const design = (\r\n    <>\r\n      <div className=\"container py-4\">\r\n        <table className=\"table\">\r\n          {\r\n            data.map((item)=>{\r\n              const NewTr = (\r\n                <>\r\n                 <tr>\r\n                  <td>{newItem.name}</td>\r\n                  <td>{newItem.roll}</td>\r\n                </tr>\r\n                </>\r\n              );\r\n              return NewTr;\r\n            })\r\n          }\r\n        </table>\r\n        <button onClick={addMore}>Add</button>\r\n      </div>\r\n    </>\r\n  );\r\n  return design;\r\n}\r\nexport default Hooks;\r\n"],"mappingshB,MAAK,CAACC,IAAD,EAAMC,OAAN,IAAiBJ,QAAQ,CAAC,CAAC;IAC9BK,IAAI,EAAE,OADwB;IAE9BC,IAAI,EAAE;EAFwB,CAAD,CAAD,CAA9B;EAMA,MAAMC,OAAO,GAAGN,WAAW,CAAC,MAAI;IAC9B,OAAOG,OAAO,CAAEI,OAAD,IAAW;MACxB,OAAO,CACL,GAAIA,OADC,EAEL;QACEH,IAAI,EAAE,OADR;QAEEC,IAAI,EAAE;MAFR,CAFK,CAAP;IAOD,CARa,CAAd;EASD,CAV0B,EAUzB,CAACH,IAAD,CAVyB,CAA3B;;EAYA,MAAMM,MAAM,gBACV;IAAA,uBACE;MAAK,SAAS,EAAC,gBAAf;MAAA,wBACE;QAAO,SAAS,EAAC,OAAjB;QAAA,UAEIN,IAAI,CAACO,GAAL,CAAUC,IAAD,IAAQ;UACf,MAAMC,KAAK,gBACT;YAAA,uBACC;cAAA,wBACC;gBAAA,UAAKC,OAAO,CAACR;cAAb;gBAAA;gBAAA;gBAAA;cAAA,QADD,eAEC;gBAAA,UAAKQ,OAAO,CAACP;cAAb;gBAAA;gBAAA;gBAAA;cAAA,QAFD;YAAA;cAAA;cAAA;cAAA;YAAA;UADD,iBADF;;UAQA,OAAOM,KAAP;QACD,CAVD;MAFJ;QAAA;QAAA;QAAA;MAAA,QADF,eAgBE;QAAQ,OAAO,EAAEL,OAAjB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAhBF;IAAA;MAAA;MAAA;MAAA;IAAA;EADF,iBADF;;EAsBA,OAAOE,MAAP;AACD,CA1CD;;GAAMP,K;;KAAAA,K;AA2CN,eAAeA,KAAf"},"metadata":{},"sourceType":"module"}