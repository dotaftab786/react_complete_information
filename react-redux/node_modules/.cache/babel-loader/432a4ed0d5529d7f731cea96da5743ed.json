{"ast":null,"code":"import { injectStyles, createFormatter, BaseComponent, StandardEvent, buildSegTimeText, EventContainer, getSegAnchorAttrs, memoize, MoreLinkContainer, getSegMeta, DateComponent, getUniqueDomId, setRef, DayCellContainer, WeekNumberContainer, buildNavLinkAttrs, hasCustomDayCellContent, addMs, intersectRanges, addDays, SegHierarchy, buildEntryKey, intersectSpans, RefMap, sortEventSegs, isPropsEqual, buildEventRangeKey, BgEvent, renderFill, PositionCache, NowTimer, formatIsoMonthStr, formatDayString, Slicer, DateProfileGenerator, addWeeks, diffWeeks, getStickyHeaderDates, ViewContainer, SimpleScrollGrid, getStickyFooterScrollbar, renderScrollShim, DayHeader, DaySeriesModel, DayTableModel } from '@fullcalendar/core/internal.js';\nimport { createElement, Fragment, createRef } from '@fullcalendar/core/preact.js';\nvar css_248z = \":root{--fc-daygrid-event-dot-width:8px}.fc-daygrid-day-events:after,.fc-daygrid-day-events:before,.fc-daygrid-day-frame:after,.fc-daygrid-day-frame:before,.fc-daygrid-event-harness:after,.fc-daygrid-event-harness:before{clear:both;content:\\\"\\\";display:table}.fc .fc-daygrid-body{position:relative;z-index:1}.fc .fc-daygrid-day.fc-day-today{background-color:var(--fc-today-bg-color)}.fc .fc-daygrid-day-frame{min-height:100%;position:relative}.fc .fc-daygrid-day-top{display:flex;flex-direction:row-reverse}.fc .fc-day-other .fc-daygrid-day-top{opacity:.3}.fc .fc-daygrid-day-number{padding:4px;position:relative;z-index:4}.fc .fc-daygrid-month-start{font-size:1.1em;font-weight:700}.fc .fc-daygrid-day-events{margin-top:1px}.fc .fc-daygrid-body-balanced .fc-daygrid-day-events{left:0;position:absolute;right:0}.fc .fc-daygrid-body-unbalanced .fc-daygrid-day-events{min-height:2em;position:relative}.fc .fc-daygrid-body-natural .fc-daygrid-day-events{margin-bottom:1em}.fc .fc-daygrid-event-harness{position:relative}.fc .fc-daygrid-event-harness-abs{left:0;position:absolute;right:0;top:0}.fc .fc-daygrid-bg-harness{bottom:0;position:absolute;top:0}.fc .fc-daygrid-day-bg .fc-non-business{z-index:1}.fc .fc-daygrid-day-bg .fc-bg-event{z-index:2}.fc .fc-daygrid-day-bg .fc-highlight{z-index:3}.fc .fc-daygrid-event{margin-top:1px;z-index:6}.fc .fc-daygrid-event.fc-event-mirror{z-index:7}.fc .fc-daygrid-day-bottom{font-size:.85em;margin:0 2px}.fc .fc-daygrid-day-bottom:after,.fc .fc-daygrid-day-bottom:before{clear:both;content:\\\"\\\";display:table}.fc .fc-daygrid-more-link{border-radius:3px;cursor:pointer;line-height:1;margin-top:1px;max-width:100%;overflow:hidden;padding:2px;position:relative;white-space:nowrap;z-index:4}.fc .fc-daygrid-more-link:hover{background-color:rgba(0,0,0,.1)}.fc .fc-daygrid-week-number{background-color:var(--fc-neutral-bg-color);color:var(--fc-neutral-text-color);min-width:1.5em;padding:2px;position:absolute;text-align:center;top:0;z-index:5}.fc .fc-more-popover .fc-popover-body{min-width:220px;padding:10px}.fc-direction-ltr .fc-daygrid-event.fc-event-start,.fc-direction-rtl .fc-daygrid-event.fc-event-end{margin-left:2px}.fc-direction-ltr .fc-daygrid-event.fc-event-end,.fc-direction-rtl .fc-daygrid-event.fc-event-start{margin-right:2px}.fc-direction-ltr .fc-daygrid-more-link{float:left}.fc-direction-ltr .fc-daygrid-week-number{border-radius:0 0 3px 0;left:0}.fc-direction-rtl .fc-daygrid-more-link{float:right}.fc-direction-rtl .fc-daygrid-week-number{border-radius:0 0 0 3px;right:0}.fc-liquid-hack .fc-daygrid-day-frame{position:static}.fc-daygrid-event{border-radius:3px;font-size:var(--fc-small-font-size);position:relative;white-space:nowrap}.fc-daygrid-block-event .fc-event-time{font-weight:700}.fc-daygrid-block-event .fc-event-time,.fc-daygrid-block-event .fc-event-title{padding:1px}.fc-daygrid-dot-event{align-items:center;display:flex;padding:2px 0}.fc-daygrid-dot-event .fc-event-title{flex-grow:1;flex-shrink:1;font-weight:700;min-width:0;overflow:hidden}.fc-daygrid-dot-event.fc-event-mirror,.fc-daygrid-dot-event:hover{background:rgba(0,0,0,.1)}.fc-daygrid-dot-event.fc-event-selected:before{bottom:-10px;top:-10px}.fc-daygrid-event-dot{border:calc(var(--fc-daygrid-event-dot-width)/2) solid var(--fc-event-border-color);border-radius:calc(var(--fc-daygrid-event-dot-width)/2);box-sizing:content-box;height:0;margin:0 4px;width:0}.fc-direction-ltr .fc-daygrid-event .fc-event-time{margin-right:3px}.fc-direction-rtl .fc-daygrid-event .fc-event-time{margin-left:3px}\";\ninjectStyles(css_248z);\n\nfunction splitSegsByRow(segs, rowCnt) {\n  let byRow = [];\n\n  for (let i = 0; i < rowCnt; i += 1) {\n    byRow[i] = [];\n  }\n\n  for (let seg of segs) {\n    byRow[seg.row].push(seg);\n  }\n\n  return byRow;\n}\n\nfunction splitSegsByFirstCol(segs, colCnt) {\n  let byCol = [];\n\n  for (let i = 0; i < colCnt; i += 1) {\n    byCol[i] = [];\n  }\n\n  for (let seg of segs) {\n    byCol[seg.firstCol].push(seg);\n  }\n\n  return byCol;\n}\n\nfunction splitInteractionByRow(ui, rowCnt) {\n  let byRow = [];\n\n  if (!ui) {\n    for (let i = 0; i < rowCnt; i += 1) {\n      byRow[i] = null;\n    }\n  } else {\n    for (let i = 0; i < rowCnt; i += 1) {\n      byRow[i] = {\n        affectedInstances: ui.affectedInstances,\n        isEvent: ui.isEvent,\n        segs: []\n      };\n    }\n\n    for (let seg of ui.segs) {\n      byRow[seg.row].segs.push(seg);\n    }\n  }\n\n  return byRow;\n}\n\nconst DEFAULT_TABLE_EVENT_TIME_FORMAT = createFormatter({\n  hour: 'numeric',\n  minute: '2-digit',\n  omitZeroMinute: true,\n  meridiem: 'narrow'\n});\n\nfunction hasListItemDisplay(seg) {\n  let {\n    display\n  } = seg.eventRange.ui;\n  return display === 'list-item' || display === 'auto' && !seg.eventRange.def.allDay && seg.firstCol === seg.lastCol && // can't be multi-day\n  seg.isStart && // \"\n  seg.isEnd // \"\n  ;\n}\n\nclass TableBlockEvent extends BaseComponent {\n  render() {\n    let {\n      props\n    } = this;\n    return createElement(StandardEvent, Object.assign({}, props, {\n      elClasses: ['fc-daygrid-event', 'fc-daygrid-block-event', 'fc-h-event'],\n      defaultTimeFormat: DEFAULT_TABLE_EVENT_TIME_FORMAT,\n      defaultDisplayEventEnd: props.defaultDisplayEventEnd,\n      disableResizing: !props.seg.eventRange.def.allDay\n    }));\n  }\n\n}\n\nclass TableListItemEvent extends BaseComponent {\n  render() {\n    let {\n      props,\n      context\n    } = this;\n    let {\n      options\n    } = context;\n    let {\n      seg\n    } = props;\n    let timeFormat = options.eventTimeFormat || DEFAULT_TABLE_EVENT_TIME_FORMAT;\n    let timeText = buildSegTimeText(seg, timeFormat, context, true, props.defaultDisplayEventEnd);\n    return createElement(EventContainer, Object.assign({}, props, {\n      elTag: \"a\",\n      elClasses: ['fc-daygrid-event', 'fc-daygrid-dot-event'],\n      elAttrs: getSegAnchorAttrs(props.seg, context),\n      defaultGenerator: renderInnerContent,\n      timeText: timeText,\n      isResizing: false,\n      isDateSelecting: false\n    }));\n  }\n\n}\n\nfunction renderInnerContent(renderProps) {\n  return createElement(Fragment, null, createElement(\"div\", {\n    className: \"fc-daygrid-event-dot\",\n    style: {\n      borderColor: renderProps.borderColor || renderProps.backgroundColor\n    }\n  }), renderProps.timeText && createElement(\"div\", {\n    className: \"fc-event-time\"\n  }, renderProps.timeText), createElement(\"div\", {\n    className: \"fc-event-title\"\n  }, renderProps.event.title || createElement(Fragment, null, \"\\u00A0\")));\n}\n\nclass TableCellMoreLink extends BaseComponent {\n  constructor() {\n    super(...arguments);\n    this.compileSegs = memoize(compileSegs);\n  }\n\n  render() {\n    let {\n      props\n    } = this;\n    let {\n      allSegs,\n      invisibleSegs\n    } = this.compileSegs(props.singlePlacements);\n    return createElement(MoreLinkContainer, {\n      elClasses: ['fc-daygrid-more-link'],\n      dateProfile: props.dateProfile,\n      todayRange: props.todayRange,\n      allDayDate: props.allDayDate,\n      moreCnt: props.moreCnt,\n      allSegs: allSegs,\n      hiddenSegs: invisibleSegs,\n      alignmentElRef: props.alignmentElRef,\n      alignGridTop: props.alignGridTop,\n      extraDateSpan: props.extraDateSpan,\n      popoverContent: () => {\n        let isForcedInvisible = (props.eventDrag ? props.eventDrag.affectedInstances : null) || (props.eventResize ? props.eventResize.affectedInstances : null) || {};\n        return createElement(Fragment, null, allSegs.map(seg => {\n          let instanceId = seg.eventRange.instance.instanceId;\n          return createElement(\"div\", {\n            className: \"fc-daygrid-event-harness\",\n            key: instanceId,\n            style: {\n              visibility: isForcedInvisible[instanceId] ? 'hidden' : ''\n            }\n          }, hasListItemDisplay(seg) ? createElement(TableListItemEvent, Object.assign({\n            seg: seg,\n            isDragging: false,\n            isSelected: instanceId === props.eventSelection,\n            defaultDisplayEventEnd: false\n          }, getSegMeta(seg, props.todayRange))) : createElement(TableBlockEvent, Object.assign({\n            seg: seg,\n            isDragging: false,\n            isResizing: false,\n            isDateSelecting: false,\n            isSelected: instanceId === props.eventSelection,\n            defaultDisplayEventEnd: false\n          }, getSegMeta(seg, props.todayRange))));\n        }));\n      }\n    });\n  }\n\n}\n\nfunction compileSegs(singlePlacements) {\n  let allSegs = [];\n  let invisibleSegs = [];\n\n  for (let placement of singlePlacements) {\n    allSegs.push(placement.seg);\n\n    if (!placement.isVisible) {\n      invisibleSegs.push(placement.seg);\n    }\n  }\n\n  return {\n    allSegs,\n    invisibleSegs\n  };\n}\n\nconst DEFAULT_WEEK_NUM_FORMAT = createFormatter({\n  week: 'narrow'\n});\n\nclass TableCell extends DateComponent {\n  constructor() {\n    super(...arguments);\n    this.rootElRef = createRef();\n    this.state = {\n      dayNumberId: getUniqueDomId()\n    };\n\n    this.handleRootEl = el => {\n      setRef(this.rootElRef, el);\n      setRef(this.props.elRef, el);\n    };\n  }\n\n  render() {\n    let {\n      context,\n      props,\n      state,\n      rootElRef\n    } = this;\n    let {\n      options,\n      dateEnv\n    } = context;\n    let {\n      date,\n      dateProfile\n    } = props; // TODO: memoize this?\n\n    const isMonthStart = props.showDayNumber && shouldDisplayMonthStart(date, dateProfile.currentRange, dateEnv);\n    return createElement(DayCellContainer, {\n      elTag: \"td\",\n      elRef: this.handleRootEl,\n      elClasses: ['fc-daygrid-day', ...(props.extraClassNames || [])],\n      elAttrs: Object.assign(Object.assign(Object.assign({}, props.extraDataAttrs), props.showDayNumber ? {\n        'aria-labelledby': state.dayNumberId\n      } : {}), {\n        role: 'gridcell'\n      }),\n      defaultGenerator: renderTopInner,\n      date: date,\n      dateProfile: dateProfile,\n      todayRange: props.todayRange,\n      showDayNumber: props.showDayNumber,\n      isMonthStart: isMonthStart,\n      extraRenderProps: props.extraRenderProps\n    }, (InnerContent, renderProps) => createElement(\"div\", {\n      ref: props.innerElRef,\n      className: \"fc-daygrid-day-frame fc-scrollgrid-sync-inner\",\n      style: {\n        minHeight: props.minHeight\n      }\n    }, props.showWeekNumber && createElement(WeekNumberContainer, {\n      elTag: \"a\",\n      elClasses: ['fc-daygrid-week-number'],\n      elAttrs: buildNavLinkAttrs(context, date, 'week'),\n      date: date,\n      defaultFormat: DEFAULT_WEEK_NUM_FORMAT\n    }), !renderProps.isDisabled && (props.showDayNumber || hasCustomDayCellContent(options) || props.forceDayTop) ? createElement(\"div\", {\n      className: \"fc-daygrid-day-top\"\n    }, createElement(InnerContent, {\n      elTag: \"a\",\n      elClasses: ['fc-daygrid-day-number', isMonthStart && 'fc-daygrid-month-start'],\n      elAttrs: Object.assign(Object.assign({}, buildNavLinkAttrs(context, date)), {\n        id: state.dayNumberId\n      })\n    })) : props.showDayNumber ? // for creating correct amount of space (see issue #7162)\n    createElement(\"div\", {\n      className: \"fc-daygrid-day-top\",\n      style: {\n        visibility: 'hidden'\n      }\n    }, createElement(\"a\", {\n      className: \"fc-daygrid-day-number\"\n    }, \"\\u00A0\")) : undefined, createElement(\"div\", {\n      className: \"fc-daygrid-day-events\",\n      ref: props.fgContentElRef\n    }, props.fgContent, createElement(\"div\", {\n      className: \"fc-daygrid-day-bottom\",\n      style: {\n        marginTop: props.moreMarginTop\n      }\n    }, createElement(TableCellMoreLink, {\n      allDayDate: date,\n      singlePlacements: props.singlePlacements,\n      moreCnt: props.moreCnt,\n      alignmentElRef: rootElRef,\n      alignGridTop: !props.showDayNumber,\n      extraDateSpan: props.extraDateSpan,\n      dateProfile: props.dateProfile,\n      eventSelection: props.eventSelection,\n      eventDrag: props.eventDrag,\n      eventResize: props.eventResize,\n      todayRange: props.todayRange\n    }))), createElement(\"div\", {\n      className: \"fc-daygrid-day-bg\"\n    }, props.bgContent)));\n  }\n\n}\n\nfunction renderTopInner(props) {\n  return props.dayNumberText || createElement(Fragment, null, \"\\u00A0\");\n}\n\nfunction shouldDisplayMonthStart(date, currentRange, dateEnv) {\n  const {\n    start: currentStart,\n    end: currentEnd\n  } = currentRange;\n  const currentEndIncl = addMs(currentEnd, -1);\n  const currentFirstYear = dateEnv.getYear(currentStart);\n  const currentFirstMonth = dateEnv.getMonth(currentStart);\n  const currentLastYear = dateEnv.getYear(currentEndIncl);\n  const currentLastMonth = dateEnv.getMonth(currentEndIncl); // spans more than one month?\n\n  return !(currentFirstYear === currentLastYear && currentFirstMonth === currentLastMonth) && Boolean( // first date in current view?\n  date.valueOf() === currentStart.valueOf() || // a month-start that's within the current range?\n  dateEnv.getDay(date) === 1 && date.valueOf() < currentEnd.valueOf());\n}\n\nfunction generateSegKey(seg) {\n  return seg.eventRange.instance.instanceId + ':' + seg.firstCol;\n}\n\nfunction generateSegUid(seg) {\n  return generateSegKey(seg) + ':' + seg.lastCol;\n}\n\nfunction computeFgSegPlacement(segs, // assumed already sorted\ndayMaxEvents, dayMaxEventRows, strictOrder, segHeights, maxContentHeight, cells) {\n  let hierarchy = new DayGridSegHierarchy(segEntry => {\n    // TODO: more DRY with generateSegUid\n    let segUid = segs[segEntry.index].eventRange.instance.instanceId + ':' + segEntry.span.start + ':' + (segEntry.span.end - 1);\n    return segHeights[segUid];\n  });\n  hierarchy.allowReslicing = true;\n  hierarchy.strictOrder = strictOrder;\n\n  if (dayMaxEvents === true || dayMaxEventRows === true) {\n    hierarchy.maxCoord = maxContentHeight;\n    hierarchy.hiddenConsumes = true;\n  } else if (typeof dayMaxEvents === 'number') {\n    hierarchy.maxStackCnt = dayMaxEvents;\n  } else if (typeof dayMaxEventRows === 'number') {\n    hierarchy.maxStackCnt = dayMaxEventRows;\n    hierarchy.hiddenConsumes = true;\n  } // create segInputs only for segs with known heights\n\n\n  let segInputs = [];\n  let unknownHeightSegs = [];\n\n  for (let i = 0; i < segs.length; i += 1) {\n    let seg = segs[i];\n    let segUid = generateSegUid(seg);\n    let eventHeight = segHeights[segUid];\n\n    if (eventHeight != null) {\n      segInputs.push({\n        index: i,\n        span: {\n          start: seg.firstCol,\n          end: seg.lastCol + 1\n        }\n      });\n    } else {\n      unknownHeightSegs.push(seg);\n    }\n  }\n\n  let hiddenEntries = hierarchy.addSegs(segInputs);\n  let segRects = hierarchy.toRects();\n  let {\n    singleColPlacements,\n    multiColPlacements,\n    leftoverMargins\n  } = placeRects(segRects, segs, cells);\n  let moreCnts = [];\n  let moreMarginTops = []; // add segs with unknown heights\n\n  for (let seg of unknownHeightSegs) {\n    multiColPlacements[seg.firstCol].push({\n      seg,\n      isVisible: false,\n      isAbsolute: true,\n      absoluteTop: 0,\n      marginTop: 0\n    });\n\n    for (let col = seg.firstCol; col <= seg.lastCol; col += 1) {\n      singleColPlacements[col].push({\n        seg: resliceSeg(seg, col, col + 1, cells),\n        isVisible: false,\n        isAbsolute: false,\n        absoluteTop: 0,\n        marginTop: 0\n      });\n    }\n  } // add the hidden entries\n\n\n  for (let col = 0; col < cells.length; col += 1) {\n    moreCnts.push(0);\n  }\n\n  for (let hiddenEntry of hiddenEntries) {\n    let seg = segs[hiddenEntry.index];\n    let hiddenSpan = hiddenEntry.span;\n    multiColPlacements[hiddenSpan.start].push({\n      seg: resliceSeg(seg, hiddenSpan.start, hiddenSpan.end, cells),\n      isVisible: false,\n      isAbsolute: true,\n      absoluteTop: 0,\n      marginTop: 0\n    });\n\n    for (let col = hiddenSpan.start; col < hiddenSpan.end; col += 1) {\n      moreCnts[col] += 1;\n      singleColPlacements[col].push({\n        seg: resliceSeg(seg, col, col + 1, cells),\n        isVisible: false,\n        isAbsolute: false,\n        absoluteTop: 0,\n        marginTop: 0\n      });\n    }\n  } // deal with leftover margins\n\n\n  for (let col = 0; col < cells.length; col += 1) {\n    moreMarginTops.push(leftoverMargins[col]);\n  }\n\n  return {\n    singleColPlacements,\n    multiColPlacements,\n    moreCnts,\n    moreMarginTops\n  };\n} // rects ordered by top coord, then left\n\n\nfunction placeRects(allRects, segs, cells) {\n  let rectsByEachCol = groupRectsByEachCol(allRects, cells.length);\n  let singleColPlacements = [];\n  let multiColPlacements = [];\n  let leftoverMargins = [];\n\n  for (let col = 0; col < cells.length; col += 1) {\n    let rects = rectsByEachCol[col]; // compute all static segs in singlePlacements\n\n    let singlePlacements = [];\n    let currentHeight = 0;\n    let currentMarginTop = 0;\n\n    for (let rect of rects) {\n      let seg = segs[rect.index];\n      singlePlacements.push({\n        seg: resliceSeg(seg, col, col + 1, cells),\n        isVisible: true,\n        isAbsolute: false,\n        absoluteTop: rect.levelCoord,\n        marginTop: rect.levelCoord - currentHeight\n      });\n      currentHeight = rect.levelCoord + rect.thickness;\n    } // compute mixed static/absolute segs in multiPlacements\n\n\n    let multiPlacements = [];\n    currentHeight = 0;\n    currentMarginTop = 0;\n\n    for (let rect of rects) {\n      let seg = segs[rect.index];\n      let isAbsolute = rect.span.end - rect.span.start > 1; // multi-column?\n\n      let isFirstCol = rect.span.start === col;\n      currentMarginTop += rect.levelCoord - currentHeight; // amount of space since bottom of previous seg\n\n      currentHeight = rect.levelCoord + rect.thickness; // height will now be bottom of current seg\n\n      if (isAbsolute) {\n        currentMarginTop += rect.thickness;\n\n        if (isFirstCol) {\n          multiPlacements.push({\n            seg: resliceSeg(seg, rect.span.start, rect.span.end, cells),\n            isVisible: true,\n            isAbsolute: true,\n            absoluteTop: rect.levelCoord,\n            marginTop: 0\n          });\n        }\n      } else if (isFirstCol) {\n        multiPlacements.push({\n          seg: resliceSeg(seg, rect.span.start, rect.span.end, cells),\n          isVisible: true,\n          isAbsolute: false,\n          absoluteTop: rect.levelCoord,\n          marginTop: currentMarginTop // claim the margin\n\n        });\n        currentMarginTop = 0;\n      }\n    }\n\n    singleColPlacements.push(singlePlacements);\n    multiColPlacements.push(multiPlacements);\n    leftoverMargins.push(currentMarginTop);\n  }\n\n  return {\n    singleColPlacements,\n    multiColPlacements,\n    leftoverMargins\n  };\n}\n\nfunction groupRectsByEachCol(rects, colCnt) {\n  let rectsByEachCol = [];\n\n  for (let col = 0; col < colCnt; col += 1) {\n    rectsByEachCol.push([]);\n  }\n\n  for (let rect of rects) {\n    for (let col = rect.span.start; col < rect.span.end; col += 1) {\n      rectsByEachCol[col].push(rect);\n    }\n  }\n\n  return rectsByEachCol;\n}\n\nfunction resliceSeg(seg, spanStart, spanEnd, cells) {\n  if (seg.firstCol === spanStart && seg.lastCol === spanEnd - 1) {\n    return seg;\n  }\n\n  let eventRange = seg.eventRange;\n  let origRange = eventRange.range;\n  let slicedRange = intersectRanges(origRange, {\n    start: cells[spanStart].date,\n    end: addDays(cells[spanEnd - 1].date, 1)\n  });\n  return Object.assign(Object.assign({}, seg), {\n    firstCol: spanStart,\n    lastCol: spanEnd - 1,\n    eventRange: {\n      def: eventRange.def,\n      ui: Object.assign(Object.assign({}, eventRange.ui), {\n        durationEditable: false\n      }),\n      instance: eventRange.instance,\n      range: slicedRange\n    },\n    isStart: seg.isStart && slicedRange.start.valueOf() === origRange.start.valueOf(),\n    isEnd: seg.isEnd && slicedRange.end.valueOf() === origRange.end.valueOf()\n  });\n}\n\nclass DayGridSegHierarchy extends SegHierarchy {\n  constructor() {\n    super(...arguments); // config\n\n    this.hiddenConsumes = false; // allows us to keep hidden entries in the hierarchy so they take up space\n\n    this.forceHidden = {};\n  }\n\n  addSegs(segInputs) {\n    const hiddenSegs = super.addSegs(segInputs);\n    const {\n      entriesByLevel\n    } = this;\n\n    const excludeHidden = entry => !this.forceHidden[buildEntryKey(entry)]; // remove the forced-hidden segs\n\n\n    for (let level = 0; level < entriesByLevel.length; level += 1) {\n      entriesByLevel[level] = entriesByLevel[level].filter(excludeHidden);\n    }\n\n    return hiddenSegs;\n  }\n\n  handleInvalidInsertion(insertion, entry, hiddenEntries) {\n    const {\n      entriesByLevel,\n      forceHidden\n    } = this;\n    const {\n      touchingEntry,\n      touchingLevel,\n      touchingLateral\n    } = insertion;\n\n    if (this.hiddenConsumes && touchingEntry) {\n      const touchingEntryId = buildEntryKey(touchingEntry); // if not already hidden\n\n      if (!forceHidden[touchingEntryId]) {\n        if (this.allowReslicing) {\n          const placeholderEntry = Object.assign(Object.assign({}, touchingEntry), {\n            span: intersectSpans(touchingEntry.span, entry.span)\n          });\n          const placeholderEntryId = buildEntryKey(placeholderEntry);\n          forceHidden[placeholderEntryId] = true;\n          entriesByLevel[touchingLevel][touchingLateral] = placeholderEntry; // replace touchingEntry with our placeholder\n\n          this.splitEntry(touchingEntry, entry, hiddenEntries); // split up the touchingEntry, reinsert it\n        } else {\n          forceHidden[touchingEntryId] = true;\n          hiddenEntries.push(touchingEntry);\n        }\n      }\n    }\n\n    return super.handleInvalidInsertion(insertion, entry, hiddenEntries);\n  }\n\n}\n\nclass TableRow extends DateComponent {\n  constructor() {\n    super(...arguments);\n    this.cellElRefs = new RefMap(); // the <td>\n\n    this.frameElRefs = new RefMap(); // the fc-daygrid-day-frame\n\n    this.fgElRefs = new RefMap(); // the fc-daygrid-day-events\n\n    this.segHarnessRefs = new RefMap(); // indexed by \"instanceId:firstCol\"\n\n    this.rootElRef = createRef();\n    this.state = {\n      framePositions: null,\n      maxContentHeight: null,\n      segHeights: {}\n    };\n\n    this.handleResize = isForced => {\n      if (isForced) {\n        this.updateSizing(true); // isExternal=true\n      }\n    };\n  }\n\n  render() {\n    let {\n      props,\n      state,\n      context\n    } = this;\n    let {\n      options\n    } = context;\n    let colCnt = props.cells.length;\n    let businessHoursByCol = splitSegsByFirstCol(props.businessHourSegs, colCnt);\n    let bgEventSegsByCol = splitSegsByFirstCol(props.bgEventSegs, colCnt);\n    let highlightSegsByCol = splitSegsByFirstCol(this.getHighlightSegs(), colCnt);\n    let mirrorSegsByCol = splitSegsByFirstCol(this.getMirrorSegs(), colCnt);\n    let {\n      singleColPlacements,\n      multiColPlacements,\n      moreCnts,\n      moreMarginTops\n    } = computeFgSegPlacement(sortEventSegs(props.fgEventSegs, options.eventOrder), props.dayMaxEvents, props.dayMaxEventRows, options.eventOrderStrict, state.segHeights, state.maxContentHeight, props.cells);\n    let isForcedInvisible = // TODO: messy way to compute this\n    props.eventDrag && props.eventDrag.affectedInstances || props.eventResize && props.eventResize.affectedInstances || {};\n    return createElement(\"tr\", {\n      ref: this.rootElRef,\n      role: \"row\"\n    }, props.renderIntro && props.renderIntro(), props.cells.map((cell, col) => {\n      let normalFgNodes = this.renderFgSegs(col, props.forPrint ? singleColPlacements[col] : multiColPlacements[col], props.todayRange, isForcedInvisible);\n      let mirrorFgNodes = this.renderFgSegs(col, buildMirrorPlacements(mirrorSegsByCol[col], multiColPlacements), props.todayRange, {}, Boolean(props.eventDrag), Boolean(props.eventResize), false);\n      return createElement(TableCell, {\n        key: cell.key,\n        elRef: this.cellElRefs.createRef(cell.key),\n        innerElRef: this.frameElRefs.createRef(cell.key)\n        /* FF <td> problem, but okay to use for left/right. TODO: rename prop */\n        ,\n        dateProfile: props.dateProfile,\n        date: cell.date,\n        showDayNumber: props.showDayNumbers,\n        showWeekNumber: props.showWeekNumbers && col === 0,\n        forceDayTop: props.showWeekNumbers\n        /* even displaying weeknum for row, not necessarily day */\n        ,\n        todayRange: props.todayRange,\n        eventSelection: props.eventSelection,\n        eventDrag: props.eventDrag,\n        eventResize: props.eventResize,\n        extraRenderProps: cell.extraRenderProps,\n        extraDataAttrs: cell.extraDataAttrs,\n        extraClassNames: cell.extraClassNames,\n        extraDateSpan: cell.extraDateSpan,\n        moreCnt: moreCnts[col],\n        moreMarginTop: moreMarginTops[col],\n        singlePlacements: singleColPlacements[col],\n        fgContentElRef: this.fgElRefs.createRef(cell.key),\n        fgContent: // Fragment scopes the keys\n        createElement(Fragment, null, createElement(Fragment, null, normalFgNodes), createElement(Fragment, null, mirrorFgNodes)),\n        bgContent: // Fragment scopes the keys\n        createElement(Fragment, null, this.renderFillSegs(highlightSegsByCol[col], 'highlight'), this.renderFillSegs(businessHoursByCol[col], 'non-business'), this.renderFillSegs(bgEventSegsByCol[col], 'bg-event')),\n        minHeight: props.cellMinHeight\n      });\n    }));\n  }\n\n  componentDidMount() {\n    this.updateSizing(true);\n    this.context.addResizeHandler(this.handleResize);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    let currentProps = this.props;\n    this.updateSizing(!isPropsEqual(prevProps, currentProps));\n  }\n\n  componentWillUnmount() {\n    this.context.removeResizeHandler(this.handleResize);\n  }\n\n  getHighlightSegs() {\n    let {\n      props\n    } = this;\n\n    if (props.eventDrag && props.eventDrag.segs.length) {\n      // messy check\n      return props.eventDrag.segs;\n    }\n\n    if (props.eventResize && props.eventResize.segs.length) {\n      // messy check\n      return props.eventResize.segs;\n    }\n\n    return props.dateSelectionSegs;\n  }\n\n  getMirrorSegs() {\n    let {\n      props\n    } = this;\n\n    if (props.eventResize && props.eventResize.segs.length) {\n      // messy check\n      return props.eventResize.segs;\n    }\n\n    return [];\n  }\n\n  renderFgSegs(col, segPlacements, todayRange, isForcedInvisible, isDragging, isResizing, isDateSelecting) {\n    let {\n      context\n    } = this;\n    let {\n      eventSelection\n    } = this.props;\n    let {\n      framePositions\n    } = this.state;\n    let defaultDisplayEventEnd = this.props.cells.length === 1; // colCnt === 1\n\n    let isMirror = isDragging || isResizing || isDateSelecting;\n    let nodes = [];\n\n    if (framePositions) {\n      for (let placement of segPlacements) {\n        let {\n          seg\n        } = placement;\n        let {\n          instanceId\n        } = seg.eventRange.instance;\n        let isVisible = placement.isVisible && !isForcedInvisible[instanceId];\n        let isAbsolute = placement.isAbsolute;\n        let left = '';\n        let right = '';\n\n        if (isAbsolute) {\n          if (context.isRtl) {\n            right = 0;\n            left = framePositions.lefts[seg.lastCol] - framePositions.lefts[seg.firstCol];\n          } else {\n            left = 0;\n            right = framePositions.rights[seg.firstCol] - framePositions.rights[seg.lastCol];\n          }\n        }\n        /*\n        known bug: events that are force to be list-item but span multiple days still take up space in later columns\n        todo: in print view, for multi-day events, don't display title within non-start/end segs\n        */\n\n\n        nodes.push(createElement(\"div\", {\n          className: 'fc-daygrid-event-harness' + (isAbsolute ? ' fc-daygrid-event-harness-abs' : ''),\n          key: generateSegKey(seg),\n          ref: isMirror ? null : this.segHarnessRefs.createRef(generateSegUid(seg)),\n          style: {\n            visibility: isVisible ? '' : 'hidden',\n            marginTop: isAbsolute ? '' : placement.marginTop,\n            top: isAbsolute ? placement.absoluteTop : '',\n            left,\n            right\n          }\n        }, hasListItemDisplay(seg) ? createElement(TableListItemEvent, Object.assign({\n          seg: seg,\n          isDragging: isDragging,\n          isSelected: instanceId === eventSelection,\n          defaultDisplayEventEnd: defaultDisplayEventEnd\n        }, getSegMeta(seg, todayRange))) : createElement(TableBlockEvent, Object.assign({\n          seg: seg,\n          isDragging: isDragging,\n          isResizing: isResizing,\n          isDateSelecting: isDateSelecting,\n          isSelected: instanceId === eventSelection,\n          defaultDisplayEventEnd: defaultDisplayEventEnd\n        }, getSegMeta(seg, todayRange)))));\n      }\n    }\n\n    return nodes;\n  }\n\n  renderFillSegs(segs, fillType) {\n    let {\n      isRtl\n    } = this.context;\n    let {\n      todayRange\n    } = this.props;\n    let {\n      framePositions\n    } = this.state;\n    let nodes = [];\n\n    if (framePositions) {\n      for (let seg of segs) {\n        let leftRightCss = isRtl ? {\n          right: 0,\n          left: framePositions.lefts[seg.lastCol] - framePositions.lefts[seg.firstCol]\n        } : {\n          left: 0,\n          right: framePositions.rights[seg.firstCol] - framePositions.rights[seg.lastCol]\n        };\n        nodes.push(createElement(\"div\", {\n          key: buildEventRangeKey(seg.eventRange),\n          className: \"fc-daygrid-bg-harness\",\n          style: leftRightCss\n        }, fillType === 'bg-event' ? createElement(BgEvent, Object.assign({\n          seg: seg\n        }, getSegMeta(seg, todayRange))) : renderFill(fillType)));\n      }\n    }\n\n    return createElement(Fragment, {}, ...nodes);\n  }\n\n  updateSizing(isExternalSizingChange) {\n    let {\n      props,\n      state,\n      frameElRefs\n    } = this;\n\n    if (!props.forPrint && props.clientWidth !== null // positioning ready?\n    ) {\n      if (isExternalSizingChange) {\n        let frameEls = props.cells.map(cell => frameElRefs.currentMap[cell.key]);\n\n        if (frameEls.length) {\n          let originEl = this.rootElRef.current;\n          let newPositionCache = new PositionCache(originEl, frameEls, true, // isHorizontal\n          false);\n\n          if (!state.framePositions || !state.framePositions.similarTo(newPositionCache)) {\n            this.setState({\n              framePositions: new PositionCache(originEl, frameEls, true, // isHorizontal\n              false)\n            });\n          }\n        }\n      }\n\n      const oldSegHeights = this.state.segHeights;\n      const newSegHeights = this.querySegHeights();\n      const limitByContentHeight = props.dayMaxEvents === true || props.dayMaxEventRows === true;\n      this.safeSetState({\n        // HACK to prevent oscillations of events being shown/hidden from max-event-rows\n        // Essentially, once you compute an element's height, never null-out.\n        // TODO: always display all events, as visibility:hidden?\n        segHeights: Object.assign(Object.assign({}, oldSegHeights), newSegHeights),\n        maxContentHeight: limitByContentHeight ? this.computeMaxContentHeight() : null\n      });\n    }\n  }\n\n  querySegHeights() {\n    let segElMap = this.segHarnessRefs.currentMap;\n    let segHeights = {}; // get the max height amongst instance segs\n\n    for (let segUid in segElMap) {\n      let height = Math.round(segElMap[segUid].getBoundingClientRect().height);\n      segHeights[segUid] = Math.max(segHeights[segUid] || 0, height);\n    }\n\n    return segHeights;\n  }\n\n  computeMaxContentHeight() {\n    let firstKey = this.props.cells[0].key;\n    let cellEl = this.cellElRefs.currentMap[firstKey];\n    let fcContainerEl = this.fgElRefs.currentMap[firstKey];\n    return cellEl.getBoundingClientRect().bottom - fcContainerEl.getBoundingClientRect().top;\n  }\n\n  getCellEls() {\n    let elMap = this.cellElRefs.currentMap;\n    return this.props.cells.map(cell => elMap[cell.key]);\n  }\n\n}\n\nTableRow.addStateEquality({\n  segHeights: isPropsEqual\n});\n\nfunction buildMirrorPlacements(mirrorSegs, colPlacements) {\n  if (!mirrorSegs.length) {\n    return [];\n  }\n\n  let topsByInstanceId = buildAbsoluteTopHash(colPlacements); // TODO: cache this at first render?\n\n  return mirrorSegs.map(seg => ({\n    seg,\n    isVisible: true,\n    isAbsolute: true,\n    absoluteTop: topsByInstanceId[seg.eventRange.instance.instanceId],\n    marginTop: 0\n  }));\n}\n\nfunction buildAbsoluteTopHash(colPlacements) {\n  let topsByInstanceId = {};\n\n  for (let placements of colPlacements) {\n    for (let placement of placements) {\n      topsByInstanceId[placement.seg.eventRange.instance.instanceId] = placement.absoluteTop;\n    }\n  }\n\n  return topsByInstanceId;\n}\n\nclass TableRows extends DateComponent {\n  constructor() {\n    super(...arguments);\n    this.splitBusinessHourSegs = memoize(splitSegsByRow);\n    this.splitBgEventSegs = memoize(splitSegsByRow);\n    this.splitFgEventSegs = memoize(splitSegsByRow);\n    this.splitDateSelectionSegs = memoize(splitSegsByRow);\n    this.splitEventDrag = memoize(splitInteractionByRow);\n    this.splitEventResize = memoize(splitInteractionByRow);\n    this.rowRefs = new RefMap();\n  }\n\n  render() {\n    let {\n      props,\n      context\n    } = this;\n    let rowCnt = props.cells.length;\n    let businessHourSegsByRow = this.splitBusinessHourSegs(props.businessHourSegs, rowCnt);\n    let bgEventSegsByRow = this.splitBgEventSegs(props.bgEventSegs, rowCnt);\n    let fgEventSegsByRow = this.splitFgEventSegs(props.fgEventSegs, rowCnt);\n    let dateSelectionSegsByRow = this.splitDateSelectionSegs(props.dateSelectionSegs, rowCnt);\n    let eventDragByRow = this.splitEventDrag(props.eventDrag, rowCnt);\n    let eventResizeByRow = this.splitEventResize(props.eventResize, rowCnt); // for DayGrid view with many rows, force a min-height on cells so doesn't appear squished\n    // choose 7 because a month view will have max 6 rows\n\n    let cellMinHeight = rowCnt >= 7 && props.clientWidth ? props.clientWidth / context.options.aspectRatio / 6 : null;\n    return createElement(NowTimer, {\n      unit: \"day\"\n    }, (nowDate, todayRange) => createElement(Fragment, null, props.cells.map((cells, row) => createElement(TableRow, {\n      ref: this.rowRefs.createRef(row),\n      key: cells.length ? cells[0].date.toISOString()\n      /* best? or put key on cell? or use diff formatter? */\n      : row // in case there are no cells (like when resource view is loading)\n      ,\n      showDayNumbers: rowCnt > 1,\n      showWeekNumbers: props.showWeekNumbers,\n      todayRange: todayRange,\n      dateProfile: props.dateProfile,\n      cells: cells,\n      renderIntro: props.renderRowIntro,\n      businessHourSegs: businessHourSegsByRow[row],\n      eventSelection: props.eventSelection,\n      bgEventSegs: bgEventSegsByRow[row].filter(isSegAllDay)\n      /* hack */\n      ,\n      fgEventSegs: fgEventSegsByRow[row],\n      dateSelectionSegs: dateSelectionSegsByRow[row],\n      eventDrag: eventDragByRow[row],\n      eventResize: eventResizeByRow[row],\n      dayMaxEvents: props.dayMaxEvents,\n      dayMaxEventRows: props.dayMaxEventRows,\n      clientWidth: props.clientWidth,\n      clientHeight: props.clientHeight,\n      cellMinHeight: cellMinHeight,\n      forPrint: props.forPrint\n    }))));\n  }\n\n  componentDidMount() {\n    this.registerInteractiveComponent();\n  }\n\n  componentDidUpdate() {\n    // for if started with zero cells\n    this.registerInteractiveComponent();\n  }\n\n  registerInteractiveComponent() {\n    if (!this.rootEl) {\n      // HACK: need a daygrid wrapper parent to do positioning\n      // NOTE: a daygrid resource view w/o resources can have zero cells\n      const firstCellEl = this.rowRefs.currentMap[0].getCellEls()[0];\n      const rootEl = firstCellEl ? firstCellEl.closest('.fc-daygrid-body') : null;\n\n      if (rootEl) {\n        this.rootEl = rootEl;\n        this.context.registerInteractiveComponent(this, {\n          el: rootEl,\n          isHitComboAllowed: this.props.isHitComboAllowed\n        });\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.rootEl) {\n      this.context.unregisterInteractiveComponent(this);\n      this.rootEl = null;\n    }\n  } // Hit System\n  // ----------------------------------------------------------------------------------------------------\n\n\n  prepareHits() {\n    this.rowPositions = new PositionCache(this.rootEl, this.rowRefs.collect().map(rowObj => rowObj.getCellEls()[0]), // first cell el in each row. TODO: not optimal\n    false, true);\n    this.colPositions = new PositionCache(this.rootEl, this.rowRefs.currentMap[0].getCellEls(), // cell els in first row\n    true, // horizontal\n    false);\n  }\n\n  queryHit(positionLeft, positionTop) {\n    let {\n      colPositions,\n      rowPositions\n    } = this;\n    let col = colPositions.leftToIndex(positionLeft);\n    let row = rowPositions.topToIndex(positionTop);\n\n    if (row != null && col != null) {\n      let cell = this.props.cells[row][col];\n      return {\n        dateProfile: this.props.dateProfile,\n        dateSpan: Object.assign({\n          range: this.getCellRange(row, col),\n          allDay: true\n        }, cell.extraDateSpan),\n        dayEl: this.getCellEl(row, col),\n        rect: {\n          left: colPositions.lefts[col],\n          right: colPositions.rights[col],\n          top: rowPositions.tops[row],\n          bottom: rowPositions.bottoms[row]\n        },\n        layer: 0\n      };\n    }\n\n    return null;\n  }\n\n  getCellEl(row, col) {\n    return this.rowRefs.currentMap[row].getCellEls()[col]; // TODO: not optimal\n  }\n\n  getCellRange(row, col) {\n    let start = this.props.cells[row][col].date;\n    let end = addDays(start, 1);\n    return {\n      start,\n      end\n    };\n  }\n\n}\n\nfunction isSegAllDay(seg) {\n  return seg.eventRange.def.allDay;\n}\n\nclass Table extends DateComponent {\n  constructor() {\n    super(...arguments);\n    this.elRef = createRef();\n    this.needsScrollReset = false;\n  }\n\n  render() {\n    let {\n      props\n    } = this;\n    let {\n      dayMaxEventRows,\n      dayMaxEvents,\n      expandRows\n    } = props;\n    let limitViaBalanced = dayMaxEvents === true || dayMaxEventRows === true; // if rows can't expand to fill fixed height, can't do balanced-height event limit\n    // TODO: best place to normalize these options?\n\n    if (limitViaBalanced && !expandRows) {\n      limitViaBalanced = false;\n      dayMaxEventRows = null;\n      dayMaxEvents = null;\n    }\n\n    let classNames = ['fc-daygrid-body', limitViaBalanced ? 'fc-daygrid-body-balanced' : 'fc-daygrid-body-unbalanced', expandRows ? '' : 'fc-daygrid-body-natural' // will height of one row depend on the others?\n    ];\n    return createElement(\"div\", {\n      ref: this.elRef,\n      className: classNames.join(' '),\n      style: {\n        // these props are important to give this wrapper correct dimensions for interactions\n        // TODO: if we set it here, can we avoid giving to inner tables?\n        width: props.clientWidth,\n        minWidth: props.tableMinWidth\n      }\n    }, createElement(\"table\", {\n      role: \"presentation\",\n      className: \"fc-scrollgrid-sync-table\",\n      style: {\n        width: props.clientWidth,\n        minWidth: props.tableMinWidth,\n        height: expandRows ? props.clientHeight : ''\n      }\n    }, props.colGroupNode, createElement(\"tbody\", {\n      role: \"presentation\"\n    }, createElement(TableRows, {\n      dateProfile: props.dateProfile,\n      cells: props.cells,\n      renderRowIntro: props.renderRowIntro,\n      showWeekNumbers: props.showWeekNumbers,\n      clientWidth: props.clientWidth,\n      clientHeight: props.clientHeight,\n      businessHourSegs: props.businessHourSegs,\n      bgEventSegs: props.bgEventSegs,\n      fgEventSegs: props.fgEventSegs,\n      dateSelectionSegs: props.dateSelectionSegs,\n      eventSelection: props.eventSelection,\n      eventDrag: props.eventDrag,\n      eventResize: props.eventResize,\n      dayMaxEvents: dayMaxEvents,\n      dayMaxEventRows: dayMaxEventRows,\n      forPrint: props.forPrint,\n      isHitComboAllowed: props.isHitComboAllowed\n    }))));\n  }\n\n  componentDidMount() {\n    this.requestScrollReset();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.dateProfile !== this.props.dateProfile) {\n      this.requestScrollReset();\n    } else {\n      this.flushScrollReset();\n    }\n  }\n\n  requestScrollReset() {\n    this.needsScrollReset = true;\n    this.flushScrollReset();\n  }\n\n  flushScrollReset() {\n    if (this.needsScrollReset && this.props.clientWidth // sizes computed?\n    ) {\n      const subjectEl = getScrollSubjectEl(this.elRef.current, this.props.dateProfile);\n\n      if (subjectEl) {\n        const originEl = subjectEl.closest('.fc-daygrid-body');\n        const scrollEl = originEl.closest('.fc-scroller');\n        const scrollTop = subjectEl.getBoundingClientRect().top - originEl.getBoundingClientRect().top;\n        scrollEl.scrollTop = scrollTop ? scrollTop + 1 : 0; // overcome border\n      }\n\n      this.needsScrollReset = false;\n    }\n  }\n\n}\n\nfunction getScrollSubjectEl(containerEl, dateProfile) {\n  let el;\n\n  if (dateProfile.currentRangeUnit.match(/year|month/)) {\n    el = containerEl.querySelector(`[data-date=\"${formatIsoMonthStr(dateProfile.currentDate)}-01\"]`); // even if view is month-based, first-of-month might be hidden...\n  }\n\n  if (!el) {\n    el = containerEl.querySelector(`[data-date=\"${formatDayString(dateProfile.currentDate)}\"]`); // could still be hidden if an interior-view hidden day\n  }\n\n  return el;\n}\n\nclass DayTableSlicer extends Slicer {\n  constructor() {\n    super(...arguments);\n    this.forceDayIfListItem = true;\n  }\n\n  sliceRange(dateRange, dayTableModel) {\n    return dayTableModel.sliceRange(dateRange);\n  }\n\n}\n\nclass DayTable extends DateComponent {\n  constructor() {\n    super(...arguments);\n    this.slicer = new DayTableSlicer();\n    this.tableRef = createRef();\n  }\n\n  render() {\n    let {\n      props,\n      context\n    } = this;\n    return createElement(Table, Object.assign({\n      ref: this.tableRef\n    }, this.slicer.sliceProps(props, props.dateProfile, props.nextDayThreshold, context, props.dayTableModel), {\n      dateProfile: props.dateProfile,\n      cells: props.dayTableModel.cells,\n      colGroupNode: props.colGroupNode,\n      tableMinWidth: props.tableMinWidth,\n      renderRowIntro: props.renderRowIntro,\n      dayMaxEvents: props.dayMaxEvents,\n      dayMaxEventRows: props.dayMaxEventRows,\n      showWeekNumbers: props.showWeekNumbers,\n      expandRows: props.expandRows,\n      headerAlignElRef: props.headerAlignElRef,\n      clientWidth: props.clientWidth,\n      clientHeight: props.clientHeight,\n      forPrint: props.forPrint\n    }));\n  }\n\n}\n\nclass TableDateProfileGenerator extends DateProfileGenerator {\n  // Computes the date range that will be rendered\n  buildRenderRange(currentRange, currentRangeUnit, isRangeAllDay) {\n    let renderRange = super.buildRenderRange(currentRange, currentRangeUnit, isRangeAllDay);\n    let {\n      props\n    } = this;\n    return buildDayTableRenderRange({\n      currentRange: renderRange,\n      snapToWeek: /^(year|month)$/.test(currentRangeUnit),\n      fixedWeekCount: props.fixedWeekCount,\n      dateEnv: props.dateEnv\n    });\n  }\n\n}\n\nfunction buildDayTableRenderRange(props) {\n  let {\n    dateEnv,\n    currentRange\n  } = props;\n  let {\n    start,\n    end\n  } = currentRange;\n  let endOfWeek; // year and month views should be aligned with weeks. this is already done for week\n\n  if (props.snapToWeek) {\n    start = dateEnv.startOfWeek(start); // make end-of-week if not already\n\n    endOfWeek = dateEnv.startOfWeek(end);\n\n    if (endOfWeek.valueOf() !== end.valueOf()) {\n      end = addWeeks(endOfWeek, 1);\n    }\n  } // ensure 6 weeks\n\n\n  if (props.fixedWeekCount) {\n    // TODO: instead of these date-math gymnastics (for multimonth view),\n    // compute dateprofiles of all months, then use start of first and end of last.\n    let lastMonthRenderStart = dateEnv.startOfWeek(dateEnv.startOfMonth(addDays(currentRange.end, -1)));\n    let rowCnt = Math.ceil( // could be partial weeks due to hiddenDays\n    diffWeeks(lastMonthRenderStart, end));\n    end = addWeeks(end, 6 - rowCnt);\n  }\n\n  return {\n    start,\n    end\n  };\n}\n/* An abstract class for the daygrid views, as well as month view. Renders one or more rows of day cells.\n----------------------------------------------------------------------------------------------------------------------*/\n// It is a manager for a Table subcomponent, which does most of the heavy lifting.\n// It is responsible for managing width/height.\n\n\nclass TableView extends DateComponent {\n  constructor() {\n    super(...arguments);\n    this.headerElRef = createRef();\n  }\n\n  renderSimpleLayout(headerRowContent, bodyContent) {\n    let {\n      props,\n      context\n    } = this;\n    let sections = [];\n    let stickyHeaderDates = getStickyHeaderDates(context.options);\n\n    if (headerRowContent) {\n      sections.push({\n        type: 'header',\n        key: 'header',\n        isSticky: stickyHeaderDates,\n        chunk: {\n          elRef: this.headerElRef,\n          tableClassName: 'fc-col-header',\n          rowContent: headerRowContent\n        }\n      });\n    }\n\n    sections.push({\n      type: 'body',\n      key: 'body',\n      liquid: true,\n      chunk: {\n        content: bodyContent\n      }\n    });\n    return createElement(ViewContainer, {\n      elClasses: ['fc-daygrid'],\n      viewSpec: context.viewSpec\n    }, createElement(SimpleScrollGrid, {\n      liquid: !props.isHeightAuto && !props.forPrint,\n      collapsibleWidth: props.forPrint,\n      cols: []\n      /* TODO: make optional? */\n      ,\n      sections: sections\n    }));\n  }\n\n  renderHScrollLayout(headerRowContent, bodyContent, colCnt, dayMinWidth) {\n    let ScrollGrid = this.context.pluginHooks.scrollGridImpl;\n\n    if (!ScrollGrid) {\n      throw new Error('No ScrollGrid implementation');\n    }\n\n    let {\n      props,\n      context\n    } = this;\n    let stickyHeaderDates = !props.forPrint && getStickyHeaderDates(context.options);\n    let stickyFooterScrollbar = !props.forPrint && getStickyFooterScrollbar(context.options);\n    let sections = [];\n\n    if (headerRowContent) {\n      sections.push({\n        type: 'header',\n        key: 'header',\n        isSticky: stickyHeaderDates,\n        chunks: [{\n          key: 'main',\n          elRef: this.headerElRef,\n          tableClassName: 'fc-col-header',\n          rowContent: headerRowContent\n        }]\n      });\n    }\n\n    sections.push({\n      type: 'body',\n      key: 'body',\n      liquid: true,\n      chunks: [{\n        key: 'main',\n        content: bodyContent\n      }]\n    });\n\n    if (stickyFooterScrollbar) {\n      sections.push({\n        type: 'footer',\n        key: 'footer',\n        isSticky: true,\n        chunks: [{\n          key: 'main',\n          content: renderScrollShim\n        }]\n      });\n    }\n\n    return createElement(ViewContainer, {\n      elClasses: ['fc-daygrid'],\n      viewSpec: context.viewSpec\n    }, createElement(ScrollGrid, {\n      liquid: !props.isHeightAuto && !props.forPrint,\n      forPrint: props.forPrint,\n      collapsibleWidth: props.forPrint,\n      colGroups: [{\n        cols: [{\n          span: colCnt,\n          minWidth: dayMinWidth\n        }]\n      }],\n      sections: sections\n    }));\n  }\n\n}\n\nclass DayTableView extends TableView {\n  constructor() {\n    super(...arguments);\n    this.buildDayTableModel = memoize(buildDayTableModel);\n    this.headerRef = createRef();\n    this.tableRef = createRef(); // can't override any lifecycle methods from parent\n  }\n\n  render() {\n    let {\n      options,\n      dateProfileGenerator\n    } = this.context;\n    let {\n      props\n    } = this;\n    let dayTableModel = this.buildDayTableModel(props.dateProfile, dateProfileGenerator);\n    let headerContent = options.dayHeaders && createElement(DayHeader, {\n      ref: this.headerRef,\n      dateProfile: props.dateProfile,\n      dates: dayTableModel.headerDates,\n      datesRepDistinctDays: dayTableModel.rowCnt === 1\n    });\n\n    let bodyContent = contentArg => createElement(DayTable, {\n      ref: this.tableRef,\n      dateProfile: props.dateProfile,\n      dayTableModel: dayTableModel,\n      businessHours: props.businessHours,\n      dateSelection: props.dateSelection,\n      eventStore: props.eventStore,\n      eventUiBases: props.eventUiBases,\n      eventSelection: props.eventSelection,\n      eventDrag: props.eventDrag,\n      eventResize: props.eventResize,\n      nextDayThreshold: options.nextDayThreshold,\n      colGroupNode: contentArg.tableColGroupNode,\n      tableMinWidth: contentArg.tableMinWidth,\n      dayMaxEvents: options.dayMaxEvents,\n      dayMaxEventRows: options.dayMaxEventRows,\n      showWeekNumbers: options.weekNumbers,\n      expandRows: !props.isHeightAuto,\n      headerAlignElRef: this.headerElRef,\n      clientWidth: contentArg.clientWidth,\n      clientHeight: contentArg.clientHeight,\n      forPrint: props.forPrint\n    });\n\n    return options.dayMinWidth ? this.renderHScrollLayout(headerContent, bodyContent, dayTableModel.colCnt, options.dayMinWidth) : this.renderSimpleLayout(headerContent, bodyContent);\n  }\n\n}\n\nfunction buildDayTableModel(dateProfile, dateProfileGenerator) {\n  let daySeries = new DaySeriesModel(dateProfile.renderRange, dateProfileGenerator);\n  return new DayTableModel(daySeries, /year|month|week/.test(dateProfile.currentRangeUnit));\n}\n\nexport { DayTableView as DayGridView, DayTable, DayTableSlicer, Table, TableDateProfileGenerator, TableRows, TableView, buildDayTableModel, buildDayTableRenderRange };","map":{"version":3,"names":["injectStyles","createFormatter","BaseComponent","StandardEvent","buildSegTimeText","EventContainer","getSegAnchorAttrs","memoize","MoreLinkContainer","getSegMeta","DateComponent","getUniqueDomId","setRef","DayCellContainer","WeekNumberContainer","buildNavLinkAttrs","hasCustomDayCellContent","addMs","intersectRanges","addDays","SegHierarchy","buildEntryKey","intersectSpans","RefMap","sortEventSegs","isPropsEqual","buildEventRangeKey","BgEvent","renderFill","PositionCache","NowTimer","formatIsoMonthStr","formatDayString","Slicer","DateProfileGenerator","addWeeks","diffWeeks","getStickyHeaderDates","ViewContainer","SimpleScrollGrid","getStickyFooterScrollbar","renderScrollShim","DayHeader","DaySeriesModel","DayTableModel","createElement","Fragment","createRef","css_248z","splitSegsByRow","segs","rowCnt","byRow","i","seg","row","push","splitSegsByFirstCol","colCnt","byCol","firstCol","splitInteractionByRow","ui","affectedInstances","isEvent","DEFAULT_TABLE_EVENT_TIME_FORMAT","hour","minute","omitZeroMinute","meridiem","hasListItemDisplay","display","eventRange","def","allDay","lastCol","isStart","isEnd","TableBlockEvent","render","props","Object","assign","elClasses","defaultTimeFormat","defaultDisplayEventEnd","disableResizing","TableListItemEvent","context","options","timeFormat","eventTimeFormat","timeText","elTag","elAttrs","defaultGenerator","renderInnerContent","isResizing","isDateSelecting","renderProps","className","style","borderColor","backgroundColor","event","title","TableCellMoreLink","constructor","arguments","compileSegs","allSegs","invisibleSegs","singlePlacements","dateProfile","todayRange","allDayDate","moreCnt","hiddenSegs","alignmentElRef","alignGridTop","extraDateSpan","popoverContent","isForcedInvisible","eventDrag","eventResize","map","instanceId","instance","key","visibility","isDragging","isSelected","eventSelection","placement","isVisible","DEFAULT_WEEK_NUM_FORMAT","week","TableCell","rootElRef","state","dayNumberId","handleRootEl","el","elRef","dateEnv","date","isMonthStart","showDayNumber","shouldDisplayMonthStart","currentRange","extraClassNames","extraDataAttrs","role","renderTopInner","extraRenderProps","InnerContent","ref","innerElRef","minHeight","showWeekNumber","defaultFormat","isDisabled","forceDayTop","id","undefined","fgContentElRef","fgContent","marginTop","moreMarginTop","bgContent","dayNumberText","start","currentStart","end","currentEnd","currentEndIncl","currentFirstYear","getYear","currentFirstMonth","getMonth","currentLastYear","currentLastMonth","Boolean","valueOf","getDay","generateSegKey","generateSegUid","computeFgSegPlacement","dayMaxEvents","dayMaxEventRows","strictOrder","segHeights","maxContentHeight","cells","hierarchy","DayGridSegHierarchy","segEntry","segUid","index","span","allowReslicing","maxCoord","hiddenConsumes","maxStackCnt","segInputs","unknownHeightSegs","length","eventHeight","hiddenEntries","addSegs","segRects","toRects","singleColPlacements","multiColPlacements","leftoverMargins","placeRects","moreCnts","moreMarginTops","isAbsolute","absoluteTop","col","resliceSeg","hiddenEntry","hiddenSpan","allRects","rectsByEachCol","groupRectsByEachCol","rects","currentHeight","currentMarginTop","rect","levelCoord","thickness","multiPlacements","isFirstCol","spanStart","spanEnd","origRange","range","slicedRange","durationEditable","forceHidden","entriesByLevel","excludeHidden","entry","level","filter","handleInvalidInsertion","insertion","touchingEntry","touchingLevel","touchingLateral","touchingEntryId","placeholderEntry","placeholderEntryId","splitEntry","TableRow","cellElRefs","frameElRefs","fgElRefs","segHarnessRefs","framePositions","handleResize","isForced","updateSizing","businessHoursByCol","businessHourSegs","bgEventSegsByCol","bgEventSegs","highlightSegsByCol","getHighlightSegs","mirrorSegsByCol","getMirrorSegs","fgEventSegs","eventOrder","eventOrderStrict","renderIntro","cell","normalFgNodes","renderFgSegs","forPrint","mirrorFgNodes","buildMirrorPlacements","showDayNumbers","showWeekNumbers","renderFillSegs","cellMinHeight","componentDidMount","addResizeHandler","componentDidUpdate","prevProps","prevState","currentProps","componentWillUnmount","removeResizeHandler","dateSelectionSegs","segPlacements","isMirror","nodes","left","right","isRtl","lefts","rights","top","fillType","leftRightCss","isExternalSizingChange","clientWidth","frameEls","currentMap","originEl","current","newPositionCache","similarTo","setState","oldSegHeights","newSegHeights","querySegHeights","limitByContentHeight","safeSetState","computeMaxContentHeight","segElMap","height","Math","round","getBoundingClientRect","max","firstKey","cellEl","fcContainerEl","bottom","getCellEls","elMap","addStateEquality","mirrorSegs","colPlacements","topsByInstanceId","buildAbsoluteTopHash","placements","TableRows","splitBusinessHourSegs","splitBgEventSegs","splitFgEventSegs","splitDateSelectionSegs","splitEventDrag","splitEventResize","rowRefs","businessHourSegsByRow","bgEventSegsByRow","fgEventSegsByRow","dateSelectionSegsByRow","eventDragByRow","eventResizeByRow","aspectRatio","unit","nowDate","toISOString","renderRowIntro","isSegAllDay","clientHeight","registerInteractiveComponent","rootEl","firstCellEl","closest","isHitComboAllowed","unregisterInteractiveComponent","prepareHits","rowPositions","collect","rowObj","colPositions","queryHit","positionLeft","positionTop","leftToIndex","topToIndex","dateSpan","getCellRange","dayEl","getCellEl","tops","bottoms","layer","Table","needsScrollReset","expandRows","limitViaBalanced","classNames","join","width","minWidth","tableMinWidth","colGroupNode","requestScrollReset","flushScrollReset","subjectEl","getScrollSubjectEl","scrollEl","scrollTop","containerEl","currentRangeUnit","match","querySelector","currentDate","DayTableSlicer","forceDayIfListItem","sliceRange","dateRange","dayTableModel","DayTable","slicer","tableRef","sliceProps","nextDayThreshold","headerAlignElRef","TableDateProfileGenerator","buildRenderRange","isRangeAllDay","renderRange","buildDayTableRenderRange","snapToWeek","test","fixedWeekCount","endOfWeek","startOfWeek","lastMonthRenderStart","startOfMonth","ceil","TableView","headerElRef","renderSimpleLayout","headerRowContent","bodyContent","sections","stickyHeaderDates","type","isSticky","chunk","tableClassName","rowContent","liquid","content","viewSpec","isHeightAuto","collapsibleWidth","cols","renderHScrollLayout","dayMinWidth","ScrollGrid","pluginHooks","scrollGridImpl","Error","stickyFooterScrollbar","chunks","colGroups","DayTableView","buildDayTableModel","headerRef","dateProfileGenerator","headerContent","dayHeaders","dates","headerDates","datesRepDistinctDays","contentArg","businessHours","dateSelection","eventStore","eventUiBases","tableColGroupNode","weekNumbers","daySeries","DayGridView"],"sources":["C:/Users/Admin/Desktop/react_complete_information/react-redux/node_modules/@fullcalendar/daygrid/internal.js"],"sourcesContent":["import { injectStyles, createFormatter, BaseComponent, StandardEvent, buildSegTimeText, EventContainer, getSegAnchorAttrs, memoize, MoreLinkContainer, getSegMeta, DateComponent, getUniqueDomId, setRef, DayCellContainer, WeekNumberContainer, buildNavLinkAttrs, hasCustomDayCellContent, addMs, intersectRanges, addDays, SegHierarchy, buildEntryKey, intersectSpans, RefMap, sortEventSegs, isPropsEqual, buildEventRangeKey, BgEvent, renderFill, PositionCache, NowTimer, formatIsoMonthStr, formatDayString, Slicer, DateProfileGenerator, addWeeks, diffWeeks, getStickyHeaderDates, ViewContainer, SimpleScrollGrid, getStickyFooterScrollbar, renderScrollShim, DayHeader, DaySeriesModel, DayTableModel } from '@fullcalendar/core/internal.js';\nimport { createElement, Fragment, createRef } from '@fullcalendar/core/preact.js';\n\nvar css_248z = \":root{--fc-daygrid-event-dot-width:8px}.fc-daygrid-day-events:after,.fc-daygrid-day-events:before,.fc-daygrid-day-frame:after,.fc-daygrid-day-frame:before,.fc-daygrid-event-harness:after,.fc-daygrid-event-harness:before{clear:both;content:\\\"\\\";display:table}.fc .fc-daygrid-body{position:relative;z-index:1}.fc .fc-daygrid-day.fc-day-today{background-color:var(--fc-today-bg-color)}.fc .fc-daygrid-day-frame{min-height:100%;position:relative}.fc .fc-daygrid-day-top{display:flex;flex-direction:row-reverse}.fc .fc-day-other .fc-daygrid-day-top{opacity:.3}.fc .fc-daygrid-day-number{padding:4px;position:relative;z-index:4}.fc .fc-daygrid-month-start{font-size:1.1em;font-weight:700}.fc .fc-daygrid-day-events{margin-top:1px}.fc .fc-daygrid-body-balanced .fc-daygrid-day-events{left:0;position:absolute;right:0}.fc .fc-daygrid-body-unbalanced .fc-daygrid-day-events{min-height:2em;position:relative}.fc .fc-daygrid-body-natural .fc-daygrid-day-events{margin-bottom:1em}.fc .fc-daygrid-event-harness{position:relative}.fc .fc-daygrid-event-harness-abs{left:0;position:absolute;right:0;top:0}.fc .fc-daygrid-bg-harness{bottom:0;position:absolute;top:0}.fc .fc-daygrid-day-bg .fc-non-business{z-index:1}.fc .fc-daygrid-day-bg .fc-bg-event{z-index:2}.fc .fc-daygrid-day-bg .fc-highlight{z-index:3}.fc .fc-daygrid-event{margin-top:1px;z-index:6}.fc .fc-daygrid-event.fc-event-mirror{z-index:7}.fc .fc-daygrid-day-bottom{font-size:.85em;margin:0 2px}.fc .fc-daygrid-day-bottom:after,.fc .fc-daygrid-day-bottom:before{clear:both;content:\\\"\\\";display:table}.fc .fc-daygrid-more-link{border-radius:3px;cursor:pointer;line-height:1;margin-top:1px;max-width:100%;overflow:hidden;padding:2px;position:relative;white-space:nowrap;z-index:4}.fc .fc-daygrid-more-link:hover{background-color:rgba(0,0,0,.1)}.fc .fc-daygrid-week-number{background-color:var(--fc-neutral-bg-color);color:var(--fc-neutral-text-color);min-width:1.5em;padding:2px;position:absolute;text-align:center;top:0;z-index:5}.fc .fc-more-popover .fc-popover-body{min-width:220px;padding:10px}.fc-direction-ltr .fc-daygrid-event.fc-event-start,.fc-direction-rtl .fc-daygrid-event.fc-event-end{margin-left:2px}.fc-direction-ltr .fc-daygrid-event.fc-event-end,.fc-direction-rtl .fc-daygrid-event.fc-event-start{margin-right:2px}.fc-direction-ltr .fc-daygrid-more-link{float:left}.fc-direction-ltr .fc-daygrid-week-number{border-radius:0 0 3px 0;left:0}.fc-direction-rtl .fc-daygrid-more-link{float:right}.fc-direction-rtl .fc-daygrid-week-number{border-radius:0 0 0 3px;right:0}.fc-liquid-hack .fc-daygrid-day-frame{position:static}.fc-daygrid-event{border-radius:3px;font-size:var(--fc-small-font-size);position:relative;white-space:nowrap}.fc-daygrid-block-event .fc-event-time{font-weight:700}.fc-daygrid-block-event .fc-event-time,.fc-daygrid-block-event .fc-event-title{padding:1px}.fc-daygrid-dot-event{align-items:center;display:flex;padding:2px 0}.fc-daygrid-dot-event .fc-event-title{flex-grow:1;flex-shrink:1;font-weight:700;min-width:0;overflow:hidden}.fc-daygrid-dot-event.fc-event-mirror,.fc-daygrid-dot-event:hover{background:rgba(0,0,0,.1)}.fc-daygrid-dot-event.fc-event-selected:before{bottom:-10px;top:-10px}.fc-daygrid-event-dot{border:calc(var(--fc-daygrid-event-dot-width)/2) solid var(--fc-event-border-color);border-radius:calc(var(--fc-daygrid-event-dot-width)/2);box-sizing:content-box;height:0;margin:0 4px;width:0}.fc-direction-ltr .fc-daygrid-event .fc-event-time{margin-right:3px}.fc-direction-rtl .fc-daygrid-event .fc-event-time{margin-left:3px}\";\ninjectStyles(css_248z);\n\nfunction splitSegsByRow(segs, rowCnt) {\n    let byRow = [];\n    for (let i = 0; i < rowCnt; i += 1) {\n        byRow[i] = [];\n    }\n    for (let seg of segs) {\n        byRow[seg.row].push(seg);\n    }\n    return byRow;\n}\nfunction splitSegsByFirstCol(segs, colCnt) {\n    let byCol = [];\n    for (let i = 0; i < colCnt; i += 1) {\n        byCol[i] = [];\n    }\n    for (let seg of segs) {\n        byCol[seg.firstCol].push(seg);\n    }\n    return byCol;\n}\nfunction splitInteractionByRow(ui, rowCnt) {\n    let byRow = [];\n    if (!ui) {\n        for (let i = 0; i < rowCnt; i += 1) {\n            byRow[i] = null;\n        }\n    }\n    else {\n        for (let i = 0; i < rowCnt; i += 1) {\n            byRow[i] = {\n                affectedInstances: ui.affectedInstances,\n                isEvent: ui.isEvent,\n                segs: [],\n            };\n        }\n        for (let seg of ui.segs) {\n            byRow[seg.row].segs.push(seg);\n        }\n    }\n    return byRow;\n}\n\nconst DEFAULT_TABLE_EVENT_TIME_FORMAT = createFormatter({\n    hour: 'numeric',\n    minute: '2-digit',\n    omitZeroMinute: true,\n    meridiem: 'narrow',\n});\nfunction hasListItemDisplay(seg) {\n    let { display } = seg.eventRange.ui;\n    return display === 'list-item' || (display === 'auto' &&\n        !seg.eventRange.def.allDay &&\n        seg.firstCol === seg.lastCol && // can't be multi-day\n        seg.isStart && // \"\n        seg.isEnd // \"\n    );\n}\n\nclass TableBlockEvent extends BaseComponent {\n    render() {\n        let { props } = this;\n        return (createElement(StandardEvent, Object.assign({}, props, { elClasses: ['fc-daygrid-event', 'fc-daygrid-block-event', 'fc-h-event'], defaultTimeFormat: DEFAULT_TABLE_EVENT_TIME_FORMAT, defaultDisplayEventEnd: props.defaultDisplayEventEnd, disableResizing: !props.seg.eventRange.def.allDay })));\n    }\n}\n\nclass TableListItemEvent extends BaseComponent {\n    render() {\n        let { props, context } = this;\n        let { options } = context;\n        let { seg } = props;\n        let timeFormat = options.eventTimeFormat || DEFAULT_TABLE_EVENT_TIME_FORMAT;\n        let timeText = buildSegTimeText(seg, timeFormat, context, true, props.defaultDisplayEventEnd);\n        return (createElement(EventContainer, Object.assign({}, props, { elTag: \"a\", elClasses: ['fc-daygrid-event', 'fc-daygrid-dot-event'], elAttrs: getSegAnchorAttrs(props.seg, context), defaultGenerator: renderInnerContent, timeText: timeText, isResizing: false, isDateSelecting: false })));\n    }\n}\nfunction renderInnerContent(renderProps) {\n    return (createElement(Fragment, null,\n        createElement(\"div\", { className: \"fc-daygrid-event-dot\", style: { borderColor: renderProps.borderColor || renderProps.backgroundColor } }),\n        renderProps.timeText && (createElement(\"div\", { className: \"fc-event-time\" }, renderProps.timeText)),\n        createElement(\"div\", { className: \"fc-event-title\" }, renderProps.event.title || createElement(Fragment, null, \"\\u00A0\"))));\n}\n\nclass TableCellMoreLink extends BaseComponent {\n    constructor() {\n        super(...arguments);\n        this.compileSegs = memoize(compileSegs);\n    }\n    render() {\n        let { props } = this;\n        let { allSegs, invisibleSegs } = this.compileSegs(props.singlePlacements);\n        return (createElement(MoreLinkContainer, { elClasses: ['fc-daygrid-more-link'], dateProfile: props.dateProfile, todayRange: props.todayRange, allDayDate: props.allDayDate, moreCnt: props.moreCnt, allSegs: allSegs, hiddenSegs: invisibleSegs, alignmentElRef: props.alignmentElRef, alignGridTop: props.alignGridTop, extraDateSpan: props.extraDateSpan, popoverContent: () => {\n                let isForcedInvisible = (props.eventDrag ? props.eventDrag.affectedInstances : null) ||\n                    (props.eventResize ? props.eventResize.affectedInstances : null) ||\n                    {};\n                return (createElement(Fragment, null, allSegs.map((seg) => {\n                    let instanceId = seg.eventRange.instance.instanceId;\n                    return (createElement(\"div\", { className: \"fc-daygrid-event-harness\", key: instanceId, style: {\n                            visibility: isForcedInvisible[instanceId] ? 'hidden' : '',\n                        } }, hasListItemDisplay(seg) ? (createElement(TableListItemEvent, Object.assign({ seg: seg, isDragging: false, isSelected: instanceId === props.eventSelection, defaultDisplayEventEnd: false }, getSegMeta(seg, props.todayRange)))) : (createElement(TableBlockEvent, Object.assign({ seg: seg, isDragging: false, isResizing: false, isDateSelecting: false, isSelected: instanceId === props.eventSelection, defaultDisplayEventEnd: false }, getSegMeta(seg, props.todayRange))))));\n                })));\n            } }));\n    }\n}\nfunction compileSegs(singlePlacements) {\n    let allSegs = [];\n    let invisibleSegs = [];\n    for (let placement of singlePlacements) {\n        allSegs.push(placement.seg);\n        if (!placement.isVisible) {\n            invisibleSegs.push(placement.seg);\n        }\n    }\n    return { allSegs, invisibleSegs };\n}\n\nconst DEFAULT_WEEK_NUM_FORMAT = createFormatter({ week: 'narrow' });\nclass TableCell extends DateComponent {\n    constructor() {\n        super(...arguments);\n        this.rootElRef = createRef();\n        this.state = {\n            dayNumberId: getUniqueDomId(),\n        };\n        this.handleRootEl = (el) => {\n            setRef(this.rootElRef, el);\n            setRef(this.props.elRef, el);\n        };\n    }\n    render() {\n        let { context, props, state, rootElRef } = this;\n        let { options, dateEnv } = context;\n        let { date, dateProfile } = props;\n        // TODO: memoize this?\n        const isMonthStart = props.showDayNumber &&\n            shouldDisplayMonthStart(date, dateProfile.currentRange, dateEnv);\n        return (createElement(DayCellContainer, { elTag: \"td\", elRef: this.handleRootEl, elClasses: [\n                'fc-daygrid-day',\n                ...(props.extraClassNames || []),\n            ], elAttrs: Object.assign(Object.assign(Object.assign({}, props.extraDataAttrs), (props.showDayNumber ? { 'aria-labelledby': state.dayNumberId } : {})), { role: 'gridcell' }), defaultGenerator: renderTopInner, date: date, dateProfile: dateProfile, todayRange: props.todayRange, showDayNumber: props.showDayNumber, isMonthStart: isMonthStart, extraRenderProps: props.extraRenderProps }, (InnerContent, renderProps) => (createElement(\"div\", { ref: props.innerElRef, className: \"fc-daygrid-day-frame fc-scrollgrid-sync-inner\", style: { minHeight: props.minHeight } },\n            props.showWeekNumber && (createElement(WeekNumberContainer, { elTag: \"a\", elClasses: ['fc-daygrid-week-number'], elAttrs: buildNavLinkAttrs(context, date, 'week'), date: date, defaultFormat: DEFAULT_WEEK_NUM_FORMAT })),\n            !renderProps.isDisabled &&\n                (props.showDayNumber || hasCustomDayCellContent(options) || props.forceDayTop) ? (createElement(\"div\", { className: \"fc-daygrid-day-top\" },\n                createElement(InnerContent, { elTag: \"a\", elClasses: [\n                        'fc-daygrid-day-number',\n                        isMonthStart && 'fc-daygrid-month-start',\n                    ], elAttrs: Object.assign(Object.assign({}, buildNavLinkAttrs(context, date)), { id: state.dayNumberId }) }))) : props.showDayNumber ? (\n            // for creating correct amount of space (see issue #7162)\n            createElement(\"div\", { className: \"fc-daygrid-day-top\", style: { visibility: 'hidden' } },\n                createElement(\"a\", { className: \"fc-daygrid-day-number\" }, \"\\u00A0\"))) : undefined,\n            createElement(\"div\", { className: \"fc-daygrid-day-events\", ref: props.fgContentElRef },\n                props.fgContent,\n                createElement(\"div\", { className: \"fc-daygrid-day-bottom\", style: { marginTop: props.moreMarginTop } },\n                    createElement(TableCellMoreLink, { allDayDate: date, singlePlacements: props.singlePlacements, moreCnt: props.moreCnt, alignmentElRef: rootElRef, alignGridTop: !props.showDayNumber, extraDateSpan: props.extraDateSpan, dateProfile: props.dateProfile, eventSelection: props.eventSelection, eventDrag: props.eventDrag, eventResize: props.eventResize, todayRange: props.todayRange }))),\n            createElement(\"div\", { className: \"fc-daygrid-day-bg\" }, props.bgContent)))));\n    }\n}\nfunction renderTopInner(props) {\n    return props.dayNumberText || createElement(Fragment, null, \"\\u00A0\");\n}\nfunction shouldDisplayMonthStart(date, currentRange, dateEnv) {\n    const { start: currentStart, end: currentEnd } = currentRange;\n    const currentEndIncl = addMs(currentEnd, -1);\n    const currentFirstYear = dateEnv.getYear(currentStart);\n    const currentFirstMonth = dateEnv.getMonth(currentStart);\n    const currentLastYear = dateEnv.getYear(currentEndIncl);\n    const currentLastMonth = dateEnv.getMonth(currentEndIncl);\n    // spans more than one month?\n    return !(currentFirstYear === currentLastYear && currentFirstMonth === currentLastMonth) &&\n        Boolean(\n        // first date in current view?\n        date.valueOf() === currentStart.valueOf() ||\n            // a month-start that's within the current range?\n            (dateEnv.getDay(date) === 1 && date.valueOf() < currentEnd.valueOf()));\n}\n\nfunction generateSegKey(seg) {\n    return seg.eventRange.instance.instanceId + ':' + seg.firstCol;\n}\nfunction generateSegUid(seg) {\n    return generateSegKey(seg) + ':' + seg.lastCol;\n}\nfunction computeFgSegPlacement(segs, // assumed already sorted\ndayMaxEvents, dayMaxEventRows, strictOrder, segHeights, maxContentHeight, cells) {\n    let hierarchy = new DayGridSegHierarchy((segEntry) => {\n        // TODO: more DRY with generateSegUid\n        let segUid = segs[segEntry.index].eventRange.instance.instanceId +\n            ':' + segEntry.span.start +\n            ':' + (segEntry.span.end - 1);\n        return segHeights[segUid];\n    });\n    hierarchy.allowReslicing = true;\n    hierarchy.strictOrder = strictOrder;\n    if (dayMaxEvents === true || dayMaxEventRows === true) {\n        hierarchy.maxCoord = maxContentHeight;\n        hierarchy.hiddenConsumes = true;\n    }\n    else if (typeof dayMaxEvents === 'number') {\n        hierarchy.maxStackCnt = dayMaxEvents;\n    }\n    else if (typeof dayMaxEventRows === 'number') {\n        hierarchy.maxStackCnt = dayMaxEventRows;\n        hierarchy.hiddenConsumes = true;\n    }\n    // create segInputs only for segs with known heights\n    let segInputs = [];\n    let unknownHeightSegs = [];\n    for (let i = 0; i < segs.length; i += 1) {\n        let seg = segs[i];\n        let segUid = generateSegUid(seg);\n        let eventHeight = segHeights[segUid];\n        if (eventHeight != null) {\n            segInputs.push({\n                index: i,\n                span: {\n                    start: seg.firstCol,\n                    end: seg.lastCol + 1,\n                },\n            });\n        }\n        else {\n            unknownHeightSegs.push(seg);\n        }\n    }\n    let hiddenEntries = hierarchy.addSegs(segInputs);\n    let segRects = hierarchy.toRects();\n    let { singleColPlacements, multiColPlacements, leftoverMargins } = placeRects(segRects, segs, cells);\n    let moreCnts = [];\n    let moreMarginTops = [];\n    // add segs with unknown heights\n    for (let seg of unknownHeightSegs) {\n        multiColPlacements[seg.firstCol].push({\n            seg,\n            isVisible: false,\n            isAbsolute: true,\n            absoluteTop: 0,\n            marginTop: 0,\n        });\n        for (let col = seg.firstCol; col <= seg.lastCol; col += 1) {\n            singleColPlacements[col].push({\n                seg: resliceSeg(seg, col, col + 1, cells),\n                isVisible: false,\n                isAbsolute: false,\n                absoluteTop: 0,\n                marginTop: 0,\n            });\n        }\n    }\n    // add the hidden entries\n    for (let col = 0; col < cells.length; col += 1) {\n        moreCnts.push(0);\n    }\n    for (let hiddenEntry of hiddenEntries) {\n        let seg = segs[hiddenEntry.index];\n        let hiddenSpan = hiddenEntry.span;\n        multiColPlacements[hiddenSpan.start].push({\n            seg: resliceSeg(seg, hiddenSpan.start, hiddenSpan.end, cells),\n            isVisible: false,\n            isAbsolute: true,\n            absoluteTop: 0,\n            marginTop: 0,\n        });\n        for (let col = hiddenSpan.start; col < hiddenSpan.end; col += 1) {\n            moreCnts[col] += 1;\n            singleColPlacements[col].push({\n                seg: resliceSeg(seg, col, col + 1, cells),\n                isVisible: false,\n                isAbsolute: false,\n                absoluteTop: 0,\n                marginTop: 0,\n            });\n        }\n    }\n    // deal with leftover margins\n    for (let col = 0; col < cells.length; col += 1) {\n        moreMarginTops.push(leftoverMargins[col]);\n    }\n    return { singleColPlacements, multiColPlacements, moreCnts, moreMarginTops };\n}\n// rects ordered by top coord, then left\nfunction placeRects(allRects, segs, cells) {\n    let rectsByEachCol = groupRectsByEachCol(allRects, cells.length);\n    let singleColPlacements = [];\n    let multiColPlacements = [];\n    let leftoverMargins = [];\n    for (let col = 0; col < cells.length; col += 1) {\n        let rects = rectsByEachCol[col];\n        // compute all static segs in singlePlacements\n        let singlePlacements = [];\n        let currentHeight = 0;\n        let currentMarginTop = 0;\n        for (let rect of rects) {\n            let seg = segs[rect.index];\n            singlePlacements.push({\n                seg: resliceSeg(seg, col, col + 1, cells),\n                isVisible: true,\n                isAbsolute: false,\n                absoluteTop: rect.levelCoord,\n                marginTop: rect.levelCoord - currentHeight,\n            });\n            currentHeight = rect.levelCoord + rect.thickness;\n        }\n        // compute mixed static/absolute segs in multiPlacements\n        let multiPlacements = [];\n        currentHeight = 0;\n        currentMarginTop = 0;\n        for (let rect of rects) {\n            let seg = segs[rect.index];\n            let isAbsolute = rect.span.end - rect.span.start > 1; // multi-column?\n            let isFirstCol = rect.span.start === col;\n            currentMarginTop += rect.levelCoord - currentHeight; // amount of space since bottom of previous seg\n            currentHeight = rect.levelCoord + rect.thickness; // height will now be bottom of current seg\n            if (isAbsolute) {\n                currentMarginTop += rect.thickness;\n                if (isFirstCol) {\n                    multiPlacements.push({\n                        seg: resliceSeg(seg, rect.span.start, rect.span.end, cells),\n                        isVisible: true,\n                        isAbsolute: true,\n                        absoluteTop: rect.levelCoord,\n                        marginTop: 0,\n                    });\n                }\n            }\n            else if (isFirstCol) {\n                multiPlacements.push({\n                    seg: resliceSeg(seg, rect.span.start, rect.span.end, cells),\n                    isVisible: true,\n                    isAbsolute: false,\n                    absoluteTop: rect.levelCoord,\n                    marginTop: currentMarginTop, // claim the margin\n                });\n                currentMarginTop = 0;\n            }\n        }\n        singleColPlacements.push(singlePlacements);\n        multiColPlacements.push(multiPlacements);\n        leftoverMargins.push(currentMarginTop);\n    }\n    return { singleColPlacements, multiColPlacements, leftoverMargins };\n}\nfunction groupRectsByEachCol(rects, colCnt) {\n    let rectsByEachCol = [];\n    for (let col = 0; col < colCnt; col += 1) {\n        rectsByEachCol.push([]);\n    }\n    for (let rect of rects) {\n        for (let col = rect.span.start; col < rect.span.end; col += 1) {\n            rectsByEachCol[col].push(rect);\n        }\n    }\n    return rectsByEachCol;\n}\nfunction resliceSeg(seg, spanStart, spanEnd, cells) {\n    if (seg.firstCol === spanStart && seg.lastCol === spanEnd - 1) {\n        return seg;\n    }\n    let eventRange = seg.eventRange;\n    let origRange = eventRange.range;\n    let slicedRange = intersectRanges(origRange, {\n        start: cells[spanStart].date,\n        end: addDays(cells[spanEnd - 1].date, 1),\n    });\n    return Object.assign(Object.assign({}, seg), { firstCol: spanStart, lastCol: spanEnd - 1, eventRange: {\n            def: eventRange.def,\n            ui: Object.assign(Object.assign({}, eventRange.ui), { durationEditable: false }),\n            instance: eventRange.instance,\n            range: slicedRange,\n        }, isStart: seg.isStart && slicedRange.start.valueOf() === origRange.start.valueOf(), isEnd: seg.isEnd && slicedRange.end.valueOf() === origRange.end.valueOf() });\n}\nclass DayGridSegHierarchy extends SegHierarchy {\n    constructor() {\n        super(...arguments);\n        // config\n        this.hiddenConsumes = false;\n        // allows us to keep hidden entries in the hierarchy so they take up space\n        this.forceHidden = {};\n    }\n    addSegs(segInputs) {\n        const hiddenSegs = super.addSegs(segInputs);\n        const { entriesByLevel } = this;\n        const excludeHidden = (entry) => !this.forceHidden[buildEntryKey(entry)];\n        // remove the forced-hidden segs\n        for (let level = 0; level < entriesByLevel.length; level += 1) {\n            entriesByLevel[level] = entriesByLevel[level].filter(excludeHidden);\n        }\n        return hiddenSegs;\n    }\n    handleInvalidInsertion(insertion, entry, hiddenEntries) {\n        const { entriesByLevel, forceHidden } = this;\n        const { touchingEntry, touchingLevel, touchingLateral } = insertion;\n        if (this.hiddenConsumes && touchingEntry) {\n            const touchingEntryId = buildEntryKey(touchingEntry);\n            // if not already hidden\n            if (!forceHidden[touchingEntryId]) {\n                if (this.allowReslicing) {\n                    const placeholderEntry = Object.assign(Object.assign({}, touchingEntry), { span: intersectSpans(touchingEntry.span, entry.span) });\n                    const placeholderEntryId = buildEntryKey(placeholderEntry);\n                    forceHidden[placeholderEntryId] = true;\n                    entriesByLevel[touchingLevel][touchingLateral] = placeholderEntry; // replace touchingEntry with our placeholder\n                    this.splitEntry(touchingEntry, entry, hiddenEntries); // split up the touchingEntry, reinsert it\n                }\n                else {\n                    forceHidden[touchingEntryId] = true;\n                    hiddenEntries.push(touchingEntry);\n                }\n            }\n        }\n        return super.handleInvalidInsertion(insertion, entry, hiddenEntries);\n    }\n}\n\nclass TableRow extends DateComponent {\n    constructor() {\n        super(...arguments);\n        this.cellElRefs = new RefMap(); // the <td>\n        this.frameElRefs = new RefMap(); // the fc-daygrid-day-frame\n        this.fgElRefs = new RefMap(); // the fc-daygrid-day-events\n        this.segHarnessRefs = new RefMap(); // indexed by \"instanceId:firstCol\"\n        this.rootElRef = createRef();\n        this.state = {\n            framePositions: null,\n            maxContentHeight: null,\n            segHeights: {},\n        };\n        this.handleResize = (isForced) => {\n            if (isForced) {\n                this.updateSizing(true); // isExternal=true\n            }\n        };\n    }\n    render() {\n        let { props, state, context } = this;\n        let { options } = context;\n        let colCnt = props.cells.length;\n        let businessHoursByCol = splitSegsByFirstCol(props.businessHourSegs, colCnt);\n        let bgEventSegsByCol = splitSegsByFirstCol(props.bgEventSegs, colCnt);\n        let highlightSegsByCol = splitSegsByFirstCol(this.getHighlightSegs(), colCnt);\n        let mirrorSegsByCol = splitSegsByFirstCol(this.getMirrorSegs(), colCnt);\n        let { singleColPlacements, multiColPlacements, moreCnts, moreMarginTops } = computeFgSegPlacement(sortEventSegs(props.fgEventSegs, options.eventOrder), props.dayMaxEvents, props.dayMaxEventRows, options.eventOrderStrict, state.segHeights, state.maxContentHeight, props.cells);\n        let isForcedInvisible = // TODO: messy way to compute this\n         (props.eventDrag && props.eventDrag.affectedInstances) ||\n            (props.eventResize && props.eventResize.affectedInstances) ||\n            {};\n        return (createElement(\"tr\", { ref: this.rootElRef, role: \"row\" },\n            props.renderIntro && props.renderIntro(),\n            props.cells.map((cell, col) => {\n                let normalFgNodes = this.renderFgSegs(col, props.forPrint ? singleColPlacements[col] : multiColPlacements[col], props.todayRange, isForcedInvisible);\n                let mirrorFgNodes = this.renderFgSegs(col, buildMirrorPlacements(mirrorSegsByCol[col], multiColPlacements), props.todayRange, {}, Boolean(props.eventDrag), Boolean(props.eventResize), false);\n                return (createElement(TableCell, { key: cell.key, elRef: this.cellElRefs.createRef(cell.key), innerElRef: this.frameElRefs.createRef(cell.key) /* FF <td> problem, but okay to use for left/right. TODO: rename prop */, dateProfile: props.dateProfile, date: cell.date, showDayNumber: props.showDayNumbers, showWeekNumber: props.showWeekNumbers && col === 0, forceDayTop: props.showWeekNumbers /* even displaying weeknum for row, not necessarily day */, todayRange: props.todayRange, eventSelection: props.eventSelection, eventDrag: props.eventDrag, eventResize: props.eventResize, extraRenderProps: cell.extraRenderProps, extraDataAttrs: cell.extraDataAttrs, extraClassNames: cell.extraClassNames, extraDateSpan: cell.extraDateSpan, moreCnt: moreCnts[col], moreMarginTop: moreMarginTops[col], singlePlacements: singleColPlacements[col], fgContentElRef: this.fgElRefs.createRef(cell.key), fgContent: ( // Fragment scopes the keys\n                    createElement(Fragment, null,\n                        createElement(Fragment, null, normalFgNodes),\n                        createElement(Fragment, null, mirrorFgNodes))), bgContent: ( // Fragment scopes the keys\n                    createElement(Fragment, null,\n                        this.renderFillSegs(highlightSegsByCol[col], 'highlight'),\n                        this.renderFillSegs(businessHoursByCol[col], 'non-business'),\n                        this.renderFillSegs(bgEventSegsByCol[col], 'bg-event'))), minHeight: props.cellMinHeight }));\n            })));\n    }\n    componentDidMount() {\n        this.updateSizing(true);\n        this.context.addResizeHandler(this.handleResize);\n    }\n    componentDidUpdate(prevProps, prevState) {\n        let currentProps = this.props;\n        this.updateSizing(!isPropsEqual(prevProps, currentProps));\n    }\n    componentWillUnmount() {\n        this.context.removeResizeHandler(this.handleResize);\n    }\n    getHighlightSegs() {\n        let { props } = this;\n        if (props.eventDrag && props.eventDrag.segs.length) { // messy check\n            return props.eventDrag.segs;\n        }\n        if (props.eventResize && props.eventResize.segs.length) { // messy check\n            return props.eventResize.segs;\n        }\n        return props.dateSelectionSegs;\n    }\n    getMirrorSegs() {\n        let { props } = this;\n        if (props.eventResize && props.eventResize.segs.length) { // messy check\n            return props.eventResize.segs;\n        }\n        return [];\n    }\n    renderFgSegs(col, segPlacements, todayRange, isForcedInvisible, isDragging, isResizing, isDateSelecting) {\n        let { context } = this;\n        let { eventSelection } = this.props;\n        let { framePositions } = this.state;\n        let defaultDisplayEventEnd = this.props.cells.length === 1; // colCnt === 1\n        let isMirror = isDragging || isResizing || isDateSelecting;\n        let nodes = [];\n        if (framePositions) {\n            for (let placement of segPlacements) {\n                let { seg } = placement;\n                let { instanceId } = seg.eventRange.instance;\n                let isVisible = placement.isVisible && !isForcedInvisible[instanceId];\n                let isAbsolute = placement.isAbsolute;\n                let left = '';\n                let right = '';\n                if (isAbsolute) {\n                    if (context.isRtl) {\n                        right = 0;\n                        left = framePositions.lefts[seg.lastCol] - framePositions.lefts[seg.firstCol];\n                    }\n                    else {\n                        left = 0;\n                        right = framePositions.rights[seg.firstCol] - framePositions.rights[seg.lastCol];\n                    }\n                }\n                /*\n                known bug: events that are force to be list-item but span multiple days still take up space in later columns\n                todo: in print view, for multi-day events, don't display title within non-start/end segs\n                */\n                nodes.push(createElement(\"div\", { className: 'fc-daygrid-event-harness' + (isAbsolute ? ' fc-daygrid-event-harness-abs' : ''), key: generateSegKey(seg), ref: isMirror ? null : this.segHarnessRefs.createRef(generateSegUid(seg)), style: {\n                        visibility: isVisible ? '' : 'hidden',\n                        marginTop: isAbsolute ? '' : placement.marginTop,\n                        top: isAbsolute ? placement.absoluteTop : '',\n                        left,\n                        right,\n                    } }, hasListItemDisplay(seg) ? (createElement(TableListItemEvent, Object.assign({ seg: seg, isDragging: isDragging, isSelected: instanceId === eventSelection, defaultDisplayEventEnd: defaultDisplayEventEnd }, getSegMeta(seg, todayRange)))) : (createElement(TableBlockEvent, Object.assign({ seg: seg, isDragging: isDragging, isResizing: isResizing, isDateSelecting: isDateSelecting, isSelected: instanceId === eventSelection, defaultDisplayEventEnd: defaultDisplayEventEnd }, getSegMeta(seg, todayRange))))));\n            }\n        }\n        return nodes;\n    }\n    renderFillSegs(segs, fillType) {\n        let { isRtl } = this.context;\n        let { todayRange } = this.props;\n        let { framePositions } = this.state;\n        let nodes = [];\n        if (framePositions) {\n            for (let seg of segs) {\n                let leftRightCss = isRtl ? {\n                    right: 0,\n                    left: framePositions.lefts[seg.lastCol] - framePositions.lefts[seg.firstCol],\n                } : {\n                    left: 0,\n                    right: framePositions.rights[seg.firstCol] - framePositions.rights[seg.lastCol],\n                };\n                nodes.push(createElement(\"div\", { key: buildEventRangeKey(seg.eventRange), className: \"fc-daygrid-bg-harness\", style: leftRightCss }, fillType === 'bg-event' ?\n                    createElement(BgEvent, Object.assign({ seg: seg }, getSegMeta(seg, todayRange))) :\n                    renderFill(fillType)));\n            }\n        }\n        return createElement(Fragment, {}, ...nodes);\n    }\n    updateSizing(isExternalSizingChange) {\n        let { props, state, frameElRefs } = this;\n        if (!props.forPrint &&\n            props.clientWidth !== null // positioning ready?\n        ) {\n            if (isExternalSizingChange) {\n                let frameEls = props.cells.map((cell) => frameElRefs.currentMap[cell.key]);\n                if (frameEls.length) {\n                    let originEl = this.rootElRef.current;\n                    let newPositionCache = new PositionCache(originEl, frameEls, true, // isHorizontal\n                    false);\n                    if (!state.framePositions || !state.framePositions.similarTo(newPositionCache)) {\n                        this.setState({\n                            framePositions: new PositionCache(originEl, frameEls, true, // isHorizontal\n                            false),\n                        });\n                    }\n                }\n            }\n            const oldSegHeights = this.state.segHeights;\n            const newSegHeights = this.querySegHeights();\n            const limitByContentHeight = props.dayMaxEvents === true || props.dayMaxEventRows === true;\n            this.safeSetState({\n                // HACK to prevent oscillations of events being shown/hidden from max-event-rows\n                // Essentially, once you compute an element's height, never null-out.\n                // TODO: always display all events, as visibility:hidden?\n                segHeights: Object.assign(Object.assign({}, oldSegHeights), newSegHeights),\n                maxContentHeight: limitByContentHeight ? this.computeMaxContentHeight() : null,\n            });\n        }\n    }\n    querySegHeights() {\n        let segElMap = this.segHarnessRefs.currentMap;\n        let segHeights = {};\n        // get the max height amongst instance segs\n        for (let segUid in segElMap) {\n            let height = Math.round(segElMap[segUid].getBoundingClientRect().height);\n            segHeights[segUid] = Math.max(segHeights[segUid] || 0, height);\n        }\n        return segHeights;\n    }\n    computeMaxContentHeight() {\n        let firstKey = this.props.cells[0].key;\n        let cellEl = this.cellElRefs.currentMap[firstKey];\n        let fcContainerEl = this.fgElRefs.currentMap[firstKey];\n        return cellEl.getBoundingClientRect().bottom - fcContainerEl.getBoundingClientRect().top;\n    }\n    getCellEls() {\n        let elMap = this.cellElRefs.currentMap;\n        return this.props.cells.map((cell) => elMap[cell.key]);\n    }\n}\nTableRow.addStateEquality({\n    segHeights: isPropsEqual,\n});\nfunction buildMirrorPlacements(mirrorSegs, colPlacements) {\n    if (!mirrorSegs.length) {\n        return [];\n    }\n    let topsByInstanceId = buildAbsoluteTopHash(colPlacements); // TODO: cache this at first render?\n    return mirrorSegs.map((seg) => ({\n        seg,\n        isVisible: true,\n        isAbsolute: true,\n        absoluteTop: topsByInstanceId[seg.eventRange.instance.instanceId],\n        marginTop: 0,\n    }));\n}\nfunction buildAbsoluteTopHash(colPlacements) {\n    let topsByInstanceId = {};\n    for (let placements of colPlacements) {\n        for (let placement of placements) {\n            topsByInstanceId[placement.seg.eventRange.instance.instanceId] = placement.absoluteTop;\n        }\n    }\n    return topsByInstanceId;\n}\n\nclass TableRows extends DateComponent {\n    constructor() {\n        super(...arguments);\n        this.splitBusinessHourSegs = memoize(splitSegsByRow);\n        this.splitBgEventSegs = memoize(splitSegsByRow);\n        this.splitFgEventSegs = memoize(splitSegsByRow);\n        this.splitDateSelectionSegs = memoize(splitSegsByRow);\n        this.splitEventDrag = memoize(splitInteractionByRow);\n        this.splitEventResize = memoize(splitInteractionByRow);\n        this.rowRefs = new RefMap();\n    }\n    render() {\n        let { props, context } = this;\n        let rowCnt = props.cells.length;\n        let businessHourSegsByRow = this.splitBusinessHourSegs(props.businessHourSegs, rowCnt);\n        let bgEventSegsByRow = this.splitBgEventSegs(props.bgEventSegs, rowCnt);\n        let fgEventSegsByRow = this.splitFgEventSegs(props.fgEventSegs, rowCnt);\n        let dateSelectionSegsByRow = this.splitDateSelectionSegs(props.dateSelectionSegs, rowCnt);\n        let eventDragByRow = this.splitEventDrag(props.eventDrag, rowCnt);\n        let eventResizeByRow = this.splitEventResize(props.eventResize, rowCnt);\n        // for DayGrid view with many rows, force a min-height on cells so doesn't appear squished\n        // choose 7 because a month view will have max 6 rows\n        let cellMinHeight = (rowCnt >= 7 && props.clientWidth) ?\n            props.clientWidth / context.options.aspectRatio / 6 :\n            null;\n        return (createElement(NowTimer, { unit: \"day\" }, (nowDate, todayRange) => (createElement(Fragment, null, props.cells.map((cells, row) => (createElement(TableRow, { ref: this.rowRefs.createRef(row), key: cells.length\n                ? cells[0].date.toISOString() /* best? or put key on cell? or use diff formatter? */\n                : row // in case there are no cells (like when resource view is loading)\n            , showDayNumbers: rowCnt > 1, showWeekNumbers: props.showWeekNumbers, todayRange: todayRange, dateProfile: props.dateProfile, cells: cells, renderIntro: props.renderRowIntro, businessHourSegs: businessHourSegsByRow[row], eventSelection: props.eventSelection, bgEventSegs: bgEventSegsByRow[row].filter(isSegAllDay) /* hack */, fgEventSegs: fgEventSegsByRow[row], dateSelectionSegs: dateSelectionSegsByRow[row], eventDrag: eventDragByRow[row], eventResize: eventResizeByRow[row], dayMaxEvents: props.dayMaxEvents, dayMaxEventRows: props.dayMaxEventRows, clientWidth: props.clientWidth, clientHeight: props.clientHeight, cellMinHeight: cellMinHeight, forPrint: props.forPrint })))))));\n    }\n    componentDidMount() {\n        this.registerInteractiveComponent();\n    }\n    componentDidUpdate() {\n        // for if started with zero cells\n        this.registerInteractiveComponent();\n    }\n    registerInteractiveComponent() {\n        if (!this.rootEl) {\n            // HACK: need a daygrid wrapper parent to do positioning\n            // NOTE: a daygrid resource view w/o resources can have zero cells\n            const firstCellEl = this.rowRefs.currentMap[0].getCellEls()[0];\n            const rootEl = firstCellEl ? firstCellEl.closest('.fc-daygrid-body') : null;\n            if (rootEl) {\n                this.rootEl = rootEl;\n                this.context.registerInteractiveComponent(this, {\n                    el: rootEl,\n                    isHitComboAllowed: this.props.isHitComboAllowed,\n                });\n            }\n        }\n    }\n    componentWillUnmount() {\n        if (this.rootEl) {\n            this.context.unregisterInteractiveComponent(this);\n            this.rootEl = null;\n        }\n    }\n    // Hit System\n    // ----------------------------------------------------------------------------------------------------\n    prepareHits() {\n        this.rowPositions = new PositionCache(this.rootEl, this.rowRefs.collect().map((rowObj) => rowObj.getCellEls()[0]), // first cell el in each row. TODO: not optimal\n        false, true);\n        this.colPositions = new PositionCache(this.rootEl, this.rowRefs.currentMap[0].getCellEls(), // cell els in first row\n        true, // horizontal\n        false);\n    }\n    queryHit(positionLeft, positionTop) {\n        let { colPositions, rowPositions } = this;\n        let col = colPositions.leftToIndex(positionLeft);\n        let row = rowPositions.topToIndex(positionTop);\n        if (row != null && col != null) {\n            let cell = this.props.cells[row][col];\n            return {\n                dateProfile: this.props.dateProfile,\n                dateSpan: Object.assign({ range: this.getCellRange(row, col), allDay: true }, cell.extraDateSpan),\n                dayEl: this.getCellEl(row, col),\n                rect: {\n                    left: colPositions.lefts[col],\n                    right: colPositions.rights[col],\n                    top: rowPositions.tops[row],\n                    bottom: rowPositions.bottoms[row],\n                },\n                layer: 0,\n            };\n        }\n        return null;\n    }\n    getCellEl(row, col) {\n        return this.rowRefs.currentMap[row].getCellEls()[col]; // TODO: not optimal\n    }\n    getCellRange(row, col) {\n        let start = this.props.cells[row][col].date;\n        let end = addDays(start, 1);\n        return { start, end };\n    }\n}\nfunction isSegAllDay(seg) {\n    return seg.eventRange.def.allDay;\n}\n\nclass Table extends DateComponent {\n    constructor() {\n        super(...arguments);\n        this.elRef = createRef();\n        this.needsScrollReset = false;\n    }\n    render() {\n        let { props } = this;\n        let { dayMaxEventRows, dayMaxEvents, expandRows } = props;\n        let limitViaBalanced = dayMaxEvents === true || dayMaxEventRows === true;\n        // if rows can't expand to fill fixed height, can't do balanced-height event limit\n        // TODO: best place to normalize these options?\n        if (limitViaBalanced && !expandRows) {\n            limitViaBalanced = false;\n            dayMaxEventRows = null;\n            dayMaxEvents = null;\n        }\n        let classNames = [\n            'fc-daygrid-body',\n            limitViaBalanced ? 'fc-daygrid-body-balanced' : 'fc-daygrid-body-unbalanced',\n            expandRows ? '' : 'fc-daygrid-body-natural', // will height of one row depend on the others?\n        ];\n        return (createElement(\"div\", { ref: this.elRef, className: classNames.join(' '), style: {\n                // these props are important to give this wrapper correct dimensions for interactions\n                // TODO: if we set it here, can we avoid giving to inner tables?\n                width: props.clientWidth,\n                minWidth: props.tableMinWidth,\n            } },\n            createElement(\"table\", { role: \"presentation\", className: \"fc-scrollgrid-sync-table\", style: {\n                    width: props.clientWidth,\n                    minWidth: props.tableMinWidth,\n                    height: expandRows ? props.clientHeight : '',\n                } },\n                props.colGroupNode,\n                createElement(\"tbody\", { role: \"presentation\" },\n                    createElement(TableRows, { dateProfile: props.dateProfile, cells: props.cells, renderRowIntro: props.renderRowIntro, showWeekNumbers: props.showWeekNumbers, clientWidth: props.clientWidth, clientHeight: props.clientHeight, businessHourSegs: props.businessHourSegs, bgEventSegs: props.bgEventSegs, fgEventSegs: props.fgEventSegs, dateSelectionSegs: props.dateSelectionSegs, eventSelection: props.eventSelection, eventDrag: props.eventDrag, eventResize: props.eventResize, dayMaxEvents: dayMaxEvents, dayMaxEventRows: dayMaxEventRows, forPrint: props.forPrint, isHitComboAllowed: props.isHitComboAllowed })))));\n    }\n    componentDidMount() {\n        this.requestScrollReset();\n    }\n    componentDidUpdate(prevProps) {\n        if (prevProps.dateProfile !== this.props.dateProfile) {\n            this.requestScrollReset();\n        }\n        else {\n            this.flushScrollReset();\n        }\n    }\n    requestScrollReset() {\n        this.needsScrollReset = true;\n        this.flushScrollReset();\n    }\n    flushScrollReset() {\n        if (this.needsScrollReset &&\n            this.props.clientWidth // sizes computed?\n        ) {\n            const subjectEl = getScrollSubjectEl(this.elRef.current, this.props.dateProfile);\n            if (subjectEl) {\n                const originEl = subjectEl.closest('.fc-daygrid-body');\n                const scrollEl = originEl.closest('.fc-scroller');\n                const scrollTop = subjectEl.getBoundingClientRect().top -\n                    originEl.getBoundingClientRect().top;\n                scrollEl.scrollTop = scrollTop ? (scrollTop + 1) : 0; // overcome border\n            }\n            this.needsScrollReset = false;\n        }\n    }\n}\nfunction getScrollSubjectEl(containerEl, dateProfile) {\n    let el;\n    if (dateProfile.currentRangeUnit.match(/year|month/)) {\n        el = containerEl.querySelector(`[data-date=\"${formatIsoMonthStr(dateProfile.currentDate)}-01\"]`);\n        // even if view is month-based, first-of-month might be hidden...\n    }\n    if (!el) {\n        el = containerEl.querySelector(`[data-date=\"${formatDayString(dateProfile.currentDate)}\"]`);\n        // could still be hidden if an interior-view hidden day\n    }\n    return el;\n}\n\nclass DayTableSlicer extends Slicer {\n    constructor() {\n        super(...arguments);\n        this.forceDayIfListItem = true;\n    }\n    sliceRange(dateRange, dayTableModel) {\n        return dayTableModel.sliceRange(dateRange);\n    }\n}\n\nclass DayTable extends DateComponent {\n    constructor() {\n        super(...arguments);\n        this.slicer = new DayTableSlicer();\n        this.tableRef = createRef();\n    }\n    render() {\n        let { props, context } = this;\n        return (createElement(Table, Object.assign({ ref: this.tableRef }, this.slicer.sliceProps(props, props.dateProfile, props.nextDayThreshold, context, props.dayTableModel), { dateProfile: props.dateProfile, cells: props.dayTableModel.cells, colGroupNode: props.colGroupNode, tableMinWidth: props.tableMinWidth, renderRowIntro: props.renderRowIntro, dayMaxEvents: props.dayMaxEvents, dayMaxEventRows: props.dayMaxEventRows, showWeekNumbers: props.showWeekNumbers, expandRows: props.expandRows, headerAlignElRef: props.headerAlignElRef, clientWidth: props.clientWidth, clientHeight: props.clientHeight, forPrint: props.forPrint })));\n    }\n}\n\nclass TableDateProfileGenerator extends DateProfileGenerator {\n    // Computes the date range that will be rendered\n    buildRenderRange(currentRange, currentRangeUnit, isRangeAllDay) {\n        let renderRange = super.buildRenderRange(currentRange, currentRangeUnit, isRangeAllDay);\n        let { props } = this;\n        return buildDayTableRenderRange({\n            currentRange: renderRange,\n            snapToWeek: /^(year|month)$/.test(currentRangeUnit),\n            fixedWeekCount: props.fixedWeekCount,\n            dateEnv: props.dateEnv,\n        });\n    }\n}\nfunction buildDayTableRenderRange(props) {\n    let { dateEnv, currentRange } = props;\n    let { start, end } = currentRange;\n    let endOfWeek;\n    // year and month views should be aligned with weeks. this is already done for week\n    if (props.snapToWeek) {\n        start = dateEnv.startOfWeek(start);\n        // make end-of-week if not already\n        endOfWeek = dateEnv.startOfWeek(end);\n        if (endOfWeek.valueOf() !== end.valueOf()) {\n            end = addWeeks(endOfWeek, 1);\n        }\n    }\n    // ensure 6 weeks\n    if (props.fixedWeekCount) {\n        // TODO: instead of these date-math gymnastics (for multimonth view),\n        // compute dateprofiles of all months, then use start of first and end of last.\n        let lastMonthRenderStart = dateEnv.startOfWeek(dateEnv.startOfMonth(addDays(currentRange.end, -1)));\n        let rowCnt = Math.ceil(// could be partial weeks due to hiddenDays\n        diffWeeks(lastMonthRenderStart, end));\n        end = addWeeks(end, 6 - rowCnt);\n    }\n    return { start, end };\n}\n\n/* An abstract class for the daygrid views, as well as month view. Renders one or more rows of day cells.\n----------------------------------------------------------------------------------------------------------------------*/\n// It is a manager for a Table subcomponent, which does most of the heavy lifting.\n// It is responsible for managing width/height.\nclass TableView extends DateComponent {\n    constructor() {\n        super(...arguments);\n        this.headerElRef = createRef();\n    }\n    renderSimpleLayout(headerRowContent, bodyContent) {\n        let { props, context } = this;\n        let sections = [];\n        let stickyHeaderDates = getStickyHeaderDates(context.options);\n        if (headerRowContent) {\n            sections.push({\n                type: 'header',\n                key: 'header',\n                isSticky: stickyHeaderDates,\n                chunk: {\n                    elRef: this.headerElRef,\n                    tableClassName: 'fc-col-header',\n                    rowContent: headerRowContent,\n                },\n            });\n        }\n        sections.push({\n            type: 'body',\n            key: 'body',\n            liquid: true,\n            chunk: { content: bodyContent },\n        });\n        return (createElement(ViewContainer, { elClasses: ['fc-daygrid'], viewSpec: context.viewSpec },\n            createElement(SimpleScrollGrid, { liquid: !props.isHeightAuto && !props.forPrint, collapsibleWidth: props.forPrint, cols: [] /* TODO: make optional? */, sections: sections })));\n    }\n    renderHScrollLayout(headerRowContent, bodyContent, colCnt, dayMinWidth) {\n        let ScrollGrid = this.context.pluginHooks.scrollGridImpl;\n        if (!ScrollGrid) {\n            throw new Error('No ScrollGrid implementation');\n        }\n        let { props, context } = this;\n        let stickyHeaderDates = !props.forPrint && getStickyHeaderDates(context.options);\n        let stickyFooterScrollbar = !props.forPrint && getStickyFooterScrollbar(context.options);\n        let sections = [];\n        if (headerRowContent) {\n            sections.push({\n                type: 'header',\n                key: 'header',\n                isSticky: stickyHeaderDates,\n                chunks: [{\n                        key: 'main',\n                        elRef: this.headerElRef,\n                        tableClassName: 'fc-col-header',\n                        rowContent: headerRowContent,\n                    }],\n            });\n        }\n        sections.push({\n            type: 'body',\n            key: 'body',\n            liquid: true,\n            chunks: [{\n                    key: 'main',\n                    content: bodyContent,\n                }],\n        });\n        if (stickyFooterScrollbar) {\n            sections.push({\n                type: 'footer',\n                key: 'footer',\n                isSticky: true,\n                chunks: [{\n                        key: 'main',\n                        content: renderScrollShim,\n                    }],\n            });\n        }\n        return (createElement(ViewContainer, { elClasses: ['fc-daygrid'], viewSpec: context.viewSpec },\n            createElement(ScrollGrid, { liquid: !props.isHeightAuto && !props.forPrint, forPrint: props.forPrint, collapsibleWidth: props.forPrint, colGroups: [{ cols: [{ span: colCnt, minWidth: dayMinWidth }] }], sections: sections })));\n    }\n}\n\nclass DayTableView extends TableView {\n    constructor() {\n        super(...arguments);\n        this.buildDayTableModel = memoize(buildDayTableModel);\n        this.headerRef = createRef();\n        this.tableRef = createRef();\n        // can't override any lifecycle methods from parent\n    }\n    render() {\n        let { options, dateProfileGenerator } = this.context;\n        let { props } = this;\n        let dayTableModel = this.buildDayTableModel(props.dateProfile, dateProfileGenerator);\n        let headerContent = options.dayHeaders && (createElement(DayHeader, { ref: this.headerRef, dateProfile: props.dateProfile, dates: dayTableModel.headerDates, datesRepDistinctDays: dayTableModel.rowCnt === 1 }));\n        let bodyContent = (contentArg) => (createElement(DayTable, { ref: this.tableRef, dateProfile: props.dateProfile, dayTableModel: dayTableModel, businessHours: props.businessHours, dateSelection: props.dateSelection, eventStore: props.eventStore, eventUiBases: props.eventUiBases, eventSelection: props.eventSelection, eventDrag: props.eventDrag, eventResize: props.eventResize, nextDayThreshold: options.nextDayThreshold, colGroupNode: contentArg.tableColGroupNode, tableMinWidth: contentArg.tableMinWidth, dayMaxEvents: options.dayMaxEvents, dayMaxEventRows: options.dayMaxEventRows, showWeekNumbers: options.weekNumbers, expandRows: !props.isHeightAuto, headerAlignElRef: this.headerElRef, clientWidth: contentArg.clientWidth, clientHeight: contentArg.clientHeight, forPrint: props.forPrint }));\n        return options.dayMinWidth\n            ? this.renderHScrollLayout(headerContent, bodyContent, dayTableModel.colCnt, options.dayMinWidth)\n            : this.renderSimpleLayout(headerContent, bodyContent);\n    }\n}\nfunction buildDayTableModel(dateProfile, dateProfileGenerator) {\n    let daySeries = new DaySeriesModel(dateProfile.renderRange, dateProfileGenerator);\n    return new DayTableModel(daySeries, /year|month|week/.test(dateProfile.currentRangeUnit));\n}\n\nexport { DayTableView as DayGridView, DayTable, DayTableSlicer, Table, TableDateProfileGenerator, TableRows, TableView, buildDayTableModel, buildDayTableRenderRange };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}