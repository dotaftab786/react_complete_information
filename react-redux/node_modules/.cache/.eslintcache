[{"C:\\Users\\Admin\\Desktop\\react_complete_information\\react-redux\\src\\index.js":"1","C:\\Users\\Admin\\Desktop\\react_complete_information\\react-redux\\src\\App.js":"2","C:\\Users\\Admin\\Desktop\\react_complete_information\\react-redux\\src\\reportWebVitals.js":"3","C:\\Users\\Admin\\Desktop\\react_complete_information\\react-redux\\src\\cmp\\Admin\\Admin.jsx":"4","C:\\Users\\Admin\\Desktop\\react_complete_information\\react-redux\\src\\cmp\\Signup\\Signup.jsx":"5","C:\\Users\\Admin\\Desktop\\react_complete_information\\react-redux\\src\\cmp\\Login\\Login.jsx":"6","C:\\Users\\Admin\\Desktop\\react_complete_information\\react-redux\\src\\cmp\\NotFound\\NotFound.jsx":"7","C:\\Users\\Admin\\Desktop\\react_complete_information\\react-redux\\src\\cmp\\Admin\\Dashboard\\Dashboard.jsx":"8","C:\\Users\\Admin\\Desktop\\react_complete_information\\react-redux\\src\\cmp\\Hooks\\useHttp.jsx":"9","C:\\Users\\Admin\\Desktop\\react_complete_information\\react-redux\\src\\cmp\\Signup\\Signup.action.js":"10","C:\\Users\\Admin\\Desktop\\react_complete_information\\react-redux\\src\\cmp\\Signup\\Signup.state.js":"11","C:\\Users\\Admin\\Desktop\\react_complete_information\\react-redux\\src\\cmp\\Signup\\Signup.reducer.js":"12","C:\\Users\\Admin\\Desktop\\react_complete_information\\react-redux\\src\\Storage.js":"13","C:\\Users\\Admin\\Desktop\\react_complete_information\\react-redux\\src\\cmp\\guard\\AuthGuard.jsx":"14"},{"size":552,"mtime":1691066438268,"results":"15","hashOfConfig":"16"},{"size":1716,"mtime":1692277724505,"results":"17","hashOfConfig":"16"},{"size":375,"mtime":1691066438270,"results":"18","hashOfConfig":"16"},{"size":9571,"mtime":1691066438261,"results":"19","hashOfConfig":"16"},{"size":9777,"mtime":1692277102489,"results":"20","hashOfConfig":"16"},{"size":1410,"mtime":1691066438263,"results":"21","hashOfConfig":"16"},{"size":147,"mtime":1691066438266,"results":"22","hashOfConfig":"16"},{"size":144,"mtime":1691066438262,"results":"23","hashOfConfig":"16"},{"size":717,"mtime":1692123176984,"results":"24","hashOfConfig":"16"},{"size":744,"mtime":1692273830465,"results":"25","hashOfConfig":"16"},{"size":191,"mtime":1692199054138,"results":"26","hashOfConfig":"16"},{"size":671,"mtime":1692273824764,"results":"27","hashOfConfig":"16"},{"size":301,"mtime":1692211334935,"results":"28","hashOfConfig":"16"},{"size":808,"mtime":1692278137232,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},"get4kk",{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"33"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"33"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"33"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"33"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"33"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Admin\\Desktop\\react_complete_information\\react-redux\\src\\index.js",[],[],[],"C:\\Users\\Admin\\Desktop\\react_complete_information\\react-redux\\src\\App.js",["78"],[],"import Storage from \"./Storage\";\r\n\r\nimport {\r\n  Provider\r\n} from \"react-redux\";\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Routes,\r\n  Route\r\n} from 'react-router-dom';\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"font-awesome/css/font-awesome.min.css\";\r\nimport \"animate.css/animate.min.css\";\r\nimport Signup from \"./cmp/Signup/Signup\";\r\nimport Admin from \"./cmp/Admin/Admin\";\r\nimport Dashboard from \"./cmp/Admin/Dashboard/Dashboard\";\r\nimport AuthGuard from \"./cmp/guard/AuthGuard\";\r\nimport Login from \"./cmp/Login/Login\";\r\nimport NotFound from \"./cmp/NotFound/NotFound\";\r\nimport \"material-icons/iconfont/material-icons.css\";\r\nimport {\r\n   red,\r\n   deepPurple,\r\n   teal,\r\n   lime\r\n } from '@mui/material/colors';\r\nimport \"@fontsource/poppins\";\r\nimport {\r\n  ThemeProvider,\r\n  createTheme\r\n} from \"@mui/material\";\r\n\r\nconst App = ()=>{\r\n\r\n  const Theme = createTheme({\r\n    palette:{\r\n      primary: deepPurple,\r\n      warning: teal,\r\n      error: red\r\n    },\r\n    typography:{\r\n      fontFamily: \"Poppins\"\r\n    }\r\n  });\r\n\r\n  const design = (\r\n    <>\r\n    <Provider store={Storage}>\r\n      <ThemeProvider theme={Theme}>\r\n      <Router>\r\n        <Routes>\r\n          <Route path=\"/\" element={<Signup />} />\r\n          <Route path=\"login\" element={<Login />} />\r\n          <Route element={<AuthGuard />}>\r\n          <Route path=\"admin-panel\" element={<Admin />}>\r\n            <Route path=\"dashboard\" element={<Dashboard />} />\r\n            <Route path=\"*\" element={<NotFound />} />\r\n          </Route>\r\n          </Route>\r\n          <Route path=\"*\" element={<NotFound />} />\r\n        </Routes>\r\n      </Router>\r\n      </ThemeProvider>\r\n    </Provider>\r\n    </>\r\n  );\r\n  return design;\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\Admin\\Desktop\\react_complete_information\\react-redux\\src\\reportWebVitals.js",[],[],"C:\\Users\\Admin\\Desktop\\react_complete_information\\react-redux\\src\\cmp\\Admin\\Admin.jsx",["79"],[],"import {\r\n  Stack,\r\n  Drawer,\r\n  AppBar,\r\n  Toolbar,\r\n  IconButton,\r\n  ListItemText,\r\n  ListItemIcon,\r\n  ListItemButton,\r\n  ListItem,\r\n  List,\r\n  ListSubheader,\r\n  Collapse,\r\n  Avatar,\r\n  Divider,\r\n  Menu,\r\n  MenuItem,\r\n  Breadcrumbs,\r\n  Typography\r\n} from \"@mui/material\";\r\n\r\nimport { deepOrange } from '@mui/material/colors';\r\nimport MediaQuery from \"react-responsive\";\r\nimport {\r\n   useState\r\n } from 'react';\r\n import {\r\n   Link,\r\n   Outlet,\r\n   useResolvedPath,\r\n   useMatch,\r\n   useLocation\r\n } from 'react-router-dom'\r\n import AdminMenu from \"../../Json-api/AdminMenus\";\r\n\r\nconst Admin = ()=>{\r\n\r\n  const[active,setActive] = useState(true)\r\n  const[activeOnMobile,setActiveOnMobile] = useState(false);\r\n  const[width,setWidth] = useState(250);\r\n  const[collapsible,setCollapsible] = useState(false);\r\n\r\n  const location  = useLocation();\r\n  let routing = location.pathname.split(\"/\");\r\n\r\n  const[parent,setParent] = useState(null);\r\n  const open = Boolean(parent);\r\n  const openProfileMenu = (e)=>{\r\n    const el = e.currentTarget;\r\n    setParent(el);\r\n  }\r\n\r\n  const closeProfileMenu = ()=>{\r\n    return setParent(null);\r\n  }\r\n\r\n  const controlDrawerOnDesktop = ()=>{\r\n    return (\r\n      setActive(!active),\r\n      active ? setWidth(0) : setWidth(250)\r\n    )\r\n  }\r\n\r\n  const controlDrawerOnMobile = ()=>{\r\n    return (\r\n      setActiveOnMobile(!activeOnMobile),\r\n      activeOnMobile ? setWidth(0) : setWidth(250)\r\n    )\r\n  }\r\n  const DesktopDrawer = ()=>{\r\n    const temp = (\r\n      <>\r\n      <Drawer open={active} variant=\"persistent\"\r\n      sx={{\r\n        width:width,\r\n        \"& .MuiDrawer-paper\":{\r\n          width: width\r\n        }\r\n      }}\r\n      >\r\n      {\r\n        AdminMenu.map((admin)=>{\r\n          return <MenuList adminMenu={admin} key={admin.id}/>\r\n        })\r\n      }\r\n      </Drawer>\r\n      </>\r\n    );\r\n    return temp;\r\n  }\r\n\r\n  const MobileDrawer = ()=>{\r\n    const temp = (\r\n      <>\r\n      <Drawer open={activeOnMobile} variant=\"temporary\"\r\n      onClose= {controlDrawerOnMobile}\r\n      onClick= {controlDrawerOnMobile}\r\n      sx={{\r\n        width:width,\r\n        \"& .MuiDrawer-paper\":{\r\n          width: width\r\n        }\r\n      }}\r\n      >\r\n      {\r\n        AdminMenu.map((admin)=>{\r\n          return <MenuList adminMenu={admin} key={admin.id}/>\r\n        })\r\n      }\r\n      </Drawer>\r\n      </>\r\n    );\r\n    return temp;\r\n  }\r\n\r\n  const BreadLink = ({data})=>{\r\n    return <Typography\r\n      style={{\r\n        textTransform: \"capitalize\",\r\n        color: data.index === data.length-1 ? deepOrange[500] : null\r\n      }}\r\n      >\r\n      {data.item}\r\n      </Typography>  }\r\n\r\n  const Dropdown = ({data})=>{\r\n    const dropdownDesign = (\r\n      <>\r\n        <Collapse in={collapsible} sx={{ml:4}}>\r\n          {\r\n            data.dropdownMenu.map((item)=>{\r\n              return <Nav data={item}key={item.id} />\r\n            })\r\n          }\r\n        </Collapse>\r\n      </>\r\n    );\r\n    return dropdownDesign;\r\n  }\r\n\r\n  const Nav = ({data})=>{\r\n      const path = useResolvedPath(data.link);\r\n      const activeLink = useMatch({path:path.pathname, end:true});\r\n      const navDesign = (\r\n        <>\r\n        <ListItem sx={{ py: 0 }}>\r\n          <ListItemButton\r\n            component= {Link}\r\n            to= {data.link ? data.link : false}\r\n            style = {{\r\n              backgroundColor: activeLink && data.link ? deepOrange[500] : null,\r\n              color: activeLink && data.link ? \"white\" : null\r\n            }}\r\n            onClick={data.isDropdown ? ()=>setCollapsible(!collapsible) : null}>\r\n            <ListItemIcon>\r\n              <span className=\"material-icons-outlined\"\r\n              style = {{\r\n                color: activeLink && data.link ? \"white\" : null\r\n                }}\r\n              >\r\n              {data.icon}\r\n              </span>\r\n            </ListItemIcon>\r\n            <ListItemText primary={data.label} />\r\n            {\r\n              data.isDropdown ? <span className=\"material-icons-outlined\">expand_circle_down</span> : null\r\n            }\r\n          </ListItemButton>\r\n\r\n        </ListItem>\r\n        {\r\n          data.isDropdown ? <Dropdown data={data}/> : null\r\n        }\r\n        </>\r\n      );\r\n      return navDesign;\r\n  }\r\n\r\n  const MenuList = ({adminMenu})=>{\r\n    const menuDesign = (\r\n      <>\r\n        <List subheader={<ListSubheader>{adminMenu.cat}</ListSubheader>}>\r\n          {\r\n            adminMenu.menus.map((menu)=>{\r\n              return <Nav data={menu} key={menu.id} />\r\n            })\r\n          }\r\n        </List>\r\n      </>\r\n    );\r\n    return menuDesign;\r\n  }\r\n\r\n  const design = (\r\n    <>\r\n      <Stack>\r\n        <MediaQuery minWidth={1224}>\r\n          <DesktopDrawer />\r\n        </MediaQuery>\r\n        <MediaQuery maxWidth={1224}>\r\n          <MobileDrawer />\r\n        </MediaQuery>\r\n        <AppBar position=\"fixed\"\r\n          elevation= {0}\r\n          sx={{\r\n            width:{\r\n              xs: '100%',\r\n              md: `calc(100% - ${width}px)`\r\n            },\r\n            transition: \"0.5s\",\r\n            background: \"inherit\",\r\n            color: \"inherit\"\r\n          }}\r\n        >\r\n        <Stack direction=\"row\" justifyContent=\"space-between\">\r\n          <MediaQuery minWidth={1224}>\r\n          <Toolbar>\r\n            <IconButton sx={{color:\"inherit\"}} onClick={controlDrawerOnDesktop}>\r\n            <span className=\"material-icons-outlined\">menu</span>\r\n            </IconButton>\r\n          </Toolbar>\r\n          </MediaQuery>\r\n          <MediaQuery maxWidth={1224}>\r\n          <Toolbar>\r\n            <IconButton sx={{color:\"inherit\"}} onClick={controlDrawerOnMobile}>\r\n            <span className=\"material-icons-outlined\">menu</span>\r\n            </IconButton>\r\n          </Toolbar>\r\n          </MediaQuery>\r\n          <Toolbar>\r\n          <Stack direction=\"row\" justifyContent='center' alignItems=\"center\" spacing=\"5px\" sx={{pr: 3}}>\r\n            <IconButton sx={{color:\"inherit\"}}>\r\n            <span className=\"material-icons-outlined\">shopping_bag</span>\r\n            </IconButton>\r\n            <IconButton sx={{color:\"inherit\"}}>\r\n            <span className=\"material-icons-outlined\">shopping_cart</span>\r\n            </IconButton>\r\n            <IconButton sx={{color:\"inherit\"}}>\r\n            <span className=\"material-icons-outlined\">shopping_bag</span>\r\n            </IconButton>\r\n            <IconButton sx={{color:\"inherit\"}} onClick={openProfileMenu}>\r\n            <Avatar src=\"https://mui.com/static/images/avatar/2.jpg\" />\r\n            </IconButton>\r\n            <Menu\r\n              anchorEl={parent}\r\n              open={open}\r\n              onClick={closeProfileMenu}\r\n              onClose={closeProfileMenu}\r\n              PaperProps={{\r\n                   elevation: 0,\r\n                   sx: {\r\n                     overflow: 'visible',\r\n                     filter: 'drop-shadow(0px 2px 8px rgba(0,0,0,0.32))',\r\n                     mt: 1.5,\r\n                     '& .MuiAvatar-root': {\r\n                       width: 32,\r\n                       height: 32,\r\n                       ml: -0.5,\r\n                       mr: 1,\r\n                     },\r\n                     '&:before': {\r\n                       content: '\"\"',\r\n                       display: 'block',\r\n                       position: 'absolute',\r\n                       top: 0,\r\n                       right: 14,\r\n                       width: 10,\r\n                       height: 10,\r\n                       bgcolor: 'background.paper',\r\n                       transform: 'translateY(-50%) rotate(45deg)',\r\n                       zIndex: 0,\r\n                     },\r\n                   },\r\n                 }}\r\n                 transformOrigin={{ horizontal: 'right', vertical: 'top' }}\r\n                 anchorOrigin={{ horizontal: 'right', vertical: 'bottom' }}\r\n              >\r\n              <MenuItem>\r\n                <Avatar /> Profile\r\n              </MenuItem>\r\n              <MenuItem>\r\n                <Avatar /> Add account\r\n              </MenuItem>\r\n              <Divider />\r\n\r\n              <MenuItem>\r\n                <ListItemIcon>\r\n                <span className=\"material-icons-outlined\">person_add</span>\r\n                 Add Another Account\r\n                </ListItemIcon>\r\n              </MenuItem>\r\n              <MenuItem>\r\n                <ListItemIcon>\r\n                <span className=\"material-icons-outlined\">settings</span>\r\n                 Setting\r\n                </ListItemIcon>\r\n              </MenuItem>\r\n              <MenuItem>\r\n                <ListItemIcon>\r\n                <span className=\"material-icons-outlined\">logout</span>\r\n                 Logout\r\n                </ListItemIcon>\r\n              </MenuItem>\r\n            </Menu>\r\n          </Stack>\r\n          </Toolbar>\r\n        </Stack>\r\n       </AppBar>\r\n       <Divider />\r\n       <Stack sx={{\r\n         ml: {\r\n           xs: 0,\r\n           md: `${width}px`\r\n         },\r\n         mt: 8,\r\n         p: 2,\r\n         background: \"#f1f1f1\",\r\n         height: \"100vh\"\r\n       }}>\r\n       <Breadcrumbs aria-label=\"breadcrumb\" sx={{my:5}}>\r\n        {\r\n              routing.map((item,index)=>{\r\n                 if(index > 0)\r\n                 {\r\n                  return <BreadLink key={index} data={\r\n                    {\r\n                     index: index,\r\n                     item: item,\r\n                     length: routing.length\r\n                    }\r\n                } />\r\n                 }\r\n              })\r\n        }\r\n       </Breadcrumbs>\r\n        <Outlet />\r\n       </Stack>\r\n    </Stack>\r\n    </>\r\n  );\r\n  return design;\r\n}\r\nexport default Admin;\r\n","C:\\Users\\Admin\\Desktop\\react_complete_information\\react-redux\\src\\cmp\\Signup\\Signup.jsx",["80","81","82"],[],"import {\r\n  Button,\r\n  Typography,\r\n  Grid,\r\n  Stack,\r\n  TextField,\r\n  FormControlLabel,\r\n  FormGroup,\r\n  Checkbox\r\n} from \"@mui/material\";\r\n\r\nimport {\r\n  useDispatch,\r\n  useSelector\r\n} from \"react-redux\";\r\nimport {\r\n  LoadingButton\r\n} from \"@mui/lab\";\r\nimport {\r\n  useState,\r\n  useEffect\r\n} from \"react\";\r\nimport MediaQuery from \"react-responsive\";\r\nimport {\r\n  Link\r\n} from \"react-router-dom\";\r\nimport SweetAlert from 'react-bootstrap-sweetalert'\r\nimport useHttp from \"../Hooks/useHttp\";\r\nimport {\r\n  signupRequest\r\n} from \"./Signup.action\";\r\n\r\nimport Cookies from \"universal-cookie\";\r\n\r\nconst Signup = ()=>{\r\n  const cookie = new Cookies();\r\n  const dispatch = useDispatch();\r\n  const response = useSelector(response=>response);\r\n  const signupForm = {\r\n    fullname: \"aftab\",\r\n    mobile: \"999999999\",\r\n    email: \"a@gmail.com\",\r\n    password: \"Hello@2367\"\r\n  }\r\n\r\n  const signupFormError = {\r\n    fullname:{\r\n      state:false,\r\n      message:\"\"\r\n    },\r\n    mobile:{\r\n      state:false,\r\n      message:\"\"\r\n    },\r\n    email:{\r\n      state:false,\r\n      message:\"\"\r\n    },\r\n    password:{\r\n      state:false,\r\n      message:\"\"\r\n    }\r\n  }\r\n  const[input,setInput] = useState(signupForm);\r\n  const[error,setError] = useState(signupFormError);\r\n  const[checked,setChecked] = useState(false);\r\n\r\n  const[sweetAlert,setSweetAlert]=useState({\r\n    state:false,\r\n    title:\"\",\r\n    message:\"\",\r\n    icon:\"default\"\r\n  });\r\n\r\n  useEffect(()=>{\r\n    if(response && response.error){\r\n      setSweetAlert({\r\n        state:true,\r\n        title:\"Signup Failed\",\r\n        message:response.error.message,\r\n        icon:\"error\"\r\n      })\r\n    }\r\n\r\n    if(response && response.data){\r\n      cookie.set(\"authToken\",response.data.token);\r\n      setSweetAlert({\r\n        state:true,\r\n        title:\"Signup Success\",\r\n        message:\"Signup is completed please try to login!\",\r\n        icon:\"success\"\r\n      })\r\n    }\r\n  },[response]);\r\n  const Alert = ()=>{\r\n    const design = (\r\n      <>\r\n        <SweetAlert\r\n          show={sweetAlert.state}\r\n          title={sweetAlert.title}\r\n          type={sweetAlert.icon}\r\n          customButtons={\r\n            <>\r\n              <Button variant=\"outlined\" color=\"warning\" sx={{mr:2}} onClick={()=>setSweetAlert({state:false})}>Cancel</Button>\r\n              <Button variant=\"outlined\" color=\"primary\" component={Link} to=\"admin-panel\">Login</Button>\r\n            </>\r\n          }\r\n        >\r\n        {sweetAlert.message}\r\n        </SweetAlert>\r\n      </>\r\n    );\r\n    return design;\r\n  }\r\n  const updateValue = (e)=>{\r\n    const input = e.target;\r\n    const key = input.name;\r\n    const value = input.value;\r\n    return setInput((oldData)=>{\r\n      return {\r\n        ...oldData,\r\n        [key]:value\r\n      }\r\n    })\r\n  }\r\n\r\n  const fullnameValidation = (e)=>{\r\n    const input = e.target;\r\n    const key = input.name;\r\n    const isRequired = required(input);\r\n    return setError((oldData)=>{\r\n      return {\r\n        ...oldData,\r\n        [key]:isRequired\r\n      }\r\n    })\r\n  }\r\n\r\n  const mobileValidation = (e)=>{\r\n    const input = e.target;\r\n    const key = input.name;\r\n    const isRequired = required(input);\r\n    const isMinLength = minLength(input,8);\r\n    const isMaxLength = maxLength(input,13)\r\n    return setError((oldData)=>{\r\n      return {\r\n        ...oldData,\r\n        [key]:(isRequired.state && isRequired) ||\r\n        (isMinLength.state && isMinLength) ||\r\n        isMaxLength\r\n\r\n      }\r\n    })\r\n  }\r\n\r\n  const emailValidation = (e)=>{\r\n    const input = e.target;\r\n    const key = input.name;\r\n    const isRequired = required(input);\r\n    const isEmailValid = emailSyntax(input);\r\n    return setError((oldData)=>{\r\n      return {\r\n        ...oldData,\r\n        [key]:(isRequired.state && isRequired) ||\r\n          isEmailValid\r\n      }\r\n    })\r\n  }\r\n\r\n  const passwordValidation = (e)=>{\r\n    const input = e.target;\r\n    const key = input.name;\r\n    const isRequired = required(input);\r\n    const isMinLength = minLength(input,8);\r\n    const isMaxLength = maxLength(input,16);\r\n    const isPasswordValid = strongPassword(input);\r\n    return setError((oldData)=>{\r\n      return {\r\n        ...oldData,\r\n        [key]:(isRequired.state && isRequired) ||\r\n          (isMinLength.state && isMinLength) ||\r\n          (isMaxLength.state && isMaxLength) ||\r\n          isPasswordValid\r\n      }\r\n    })\r\n  }\r\n\r\n  const required = (input)=>{\r\n    const value = input.value.trim();\r\n    if(value.length === 0){\r\n      return {\r\n        state: true,\r\n        message: \"This Field is required!\"\r\n      }\r\n    }else{\r\n      return {\r\n        state: false,\r\n        message: \"\"\r\n      }\r\n    }\r\n  }\r\n\r\n  const  minLength = (input,requiredLength)=>{\r\n    const value = input.value.trim();\r\n    if(value.length >= requiredLength){\r\n      return {\r\n        state: false,\r\n        message: \"\"\r\n      }\r\n    }else{\r\n      return {\r\n        state: true,\r\n        message: `Minimum ${requiredLength} length is required `\r\n      }\r\n    }\r\n  }\r\n\r\n  const  maxLength = (input,requiredLength)=>{\r\n    const value = input.value.trim();\r\n    if(value.length <= requiredLength){\r\n      return {\r\n        state: false,\r\n        message: \"\"\r\n      }\r\n    }else{\r\n      return {\r\n        state: true,\r\n        message: `Maximum ${requiredLength} length is required `\r\n      }\r\n    }\r\n  }\r\n\r\n  const emailSyntax = (input)=>{\r\n    const value = input.value.trim();\r\n    const regex= /^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/g;\r\n    if(regex.test(value)){\r\n      return {\r\n        state: false,\r\n        message: \"\"\r\n      }\r\n    }else{\r\n      return {\r\n        state: true,\r\n        message: \"Email is not valid\"\r\n      }\r\n    }\r\n  }\r\n\r\n  const strongPassword = (input)=>{\r\n    const value = input.value.trim();\r\n    const regex = /(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[^A-Za-z0-9])(?=)/g;\r\n    if(regex.test(value)){\r\n      return {\r\n        state: false,\r\n        message: \"\"\r\n      }\r\n    }else{\r\n      return {\r\n        state: true,\r\n        message: \"Password required uppercase,lowercase,number and special characters\"\r\n      }\r\n    }\r\n}\r\n\r\n  const register = (e)=>{\r\n    e.preventDefault();\r\n    const isValid = validateOnSubmit();\r\n    if(isValid){\r\n      dispatch(signupRequest(input));\r\n    }\r\n  }\r\n\r\n  const validateOnSubmit = ()=>{\r\n    let valid = true;\r\n    for(let key in input){\r\n      if(input[key].length === 0){\r\n        valid = false;\r\n        setError((oldData)=>{\r\n          return {\r\n            ...oldData,\r\n            [key]:{\r\n              state: true,\r\n              message: \"This Field is required\"\r\n            }\r\n          }\r\n        })\r\n      }\r\n    }\r\n    return valid;\r\n  }\r\n\r\n  const design = (\r\n    <>\r\n    <Grid container>\r\n      <Grid item>\r\n        <MediaQuery minWidth={1224}>\r\n        <img src=\"images/auth.svg\" alt=\"auth\" width=\"100%\"/>\r\n        </MediaQuery>\r\n        <MediaQuery maxWidth={1224}>\r\n        <img src=\"images/mobile-auth.png\" alt=\"mobile-auth\" width=\"100%\"/>\r\n        </MediaQuery>\r\n      </Grid>\r\n      <Grid item sx={{p:2}}>\r\n      <Typography variant=\"h2\" sx={{mb:5}}>\r\n        Register\r\n      </Typography>\r\n      <form onSubmit={register}>\r\n        <Stack direction=\"column\" spacing={3}>\r\n          <TextField\r\n              error={error.fullname.state}\r\n              helperText={error.fullname.message}\r\n              label=\"Fullname\"\r\n              name=\"fullname\"\r\n              value={input.fullname}\r\n              variant=\"outlined\"\r\n              onChange={updateValue}\r\n              onBlur={fullnameValidation}\r\n              onInput={fullnameValidation}\r\n          />\r\n          <TextField\r\n              error={error.mobile.state}\r\n              helperText={error.mobile.message}\r\n              type=\"number\"\r\n              label=\"Mobile\"\r\n              name=\"mobile\"\r\n              value={input.mobile}\r\n              variant=\"outlined\"\r\n              onChange={updateValue}\r\n              onBlur={mobileValidation}\r\n              onInput={mobileValidation}\r\n          />\r\n          <TextField\r\n              error={error.email.state}\r\n              helperText={error.email.message}\r\n              type=\"email\"\r\n              label=\"Email\"\r\n              name=\"email\"\r\n              value={input.email}\r\n              variant=\"outlined\"\r\n              onChange={updateValue}\r\n              onBlur={emailValidation}\r\n              onInput={emailValidation}\r\n          />\r\n          <TextField\r\n              error={error.password.state}\r\n              helperText={error.password.message}\r\n              type=\"password\"\r\n              label=\"password\"\r\n              name=\"password\"\r\n              value={input.password}\r\n              variant=\"outlined\"\r\n              onChange={updateValue}\r\n              onBlur={passwordValidation}\r\n              onInput={passwordValidation}\r\n          />\r\n          <Stack direction=\"row\" justifyContent=\"space-between\">\r\n            <FormGroup>\r\n              <FormControlLabel\r\n                label=\"I accept terms and conditions\"\r\n                control={<Checkbox checked={checked} onChange={()=>setChecked(!checked)} />}\r\n                />\r\n            </FormGroup>\r\n            <Button component={Link} to=\"login\">ALREADY HAVE AN ACCOUNT ?</Button>\r\n          </Stack>\r\n          <div>\r\n          <LoadingButton loading={response && response.isLoading}\r\n            disabled={\r\n              error.fullname.state ||\r\n              error.mobile.state ||\r\n              error.email.state ||\r\n              error.password.state ||\r\n              !checked\r\n            }\r\n            type=\"submit\"\r\n            variant=\"contained\"\r\n          >\r\n          SIGNUP\r\n          </LoadingButton>\r\n          </div>\r\n        </Stack>\r\n      </form>\r\n      <Alert />\r\n      </Grid>\r\n    </Grid>\r\n\r\n    </>\r\n  );\r\n  return design;\r\n}\r\nexport default Signup;\r\n","C:\\Users\\Admin\\Desktop\\react_complete_information\\react-redux\\src\\cmp\\Login\\Login.jsx",["83"],[],"import {\r\n  Grid,\r\n  Button,\r\n  Container,\r\n  TextField,\r\n  Stack,\r\n  FormGroup,\r\n  FormControlLabel,\r\n  Checkbox\r\n} from \"@mui/material\";\r\n\r\nimport {\r\n  Link,\r\n  useNavigate\r\n} from \"react-router-dom\";\r\n\r\nconst Login = ()=>{\r\n  const navigate = useNavigate();\r\n  \r\n  const login = (e)=>{\r\n    e.preventDefault();\r\n    navigate(\"/admin-panel\");\r\n  }\r\n  const design = (\r\n    <>\r\n    <Container sx={{m:4}}>\r\n      <Grid container>\r\n        <Grid item xs={12} sm={6}>One</Grid>\r\n        <Grid item xs={12} sm={6}>\r\n         <h1>Label</h1>\r\n          <form onSubmit = {login}>\r\n            <Stack direction=\"column\" spacing={3}>\r\n            <TextField label=\"Username\" variant=\"outlined\" />\r\n            <TextField label=\"Password\" variant=\"outlined\" />\r\n            <Stack direction='row' justifyContent=\"end\">\r\n            <a href=\"#\">Forgot password ?</a>\r\n            </Stack>\r\n            <Stack direction=\"row\" justifyContent=\"space-between\" alignItems=\"center\">\r\n            <FormGroup>\r\n              <FormControlLabel control={<Checkbox />} label=\"Remember Me\" />\r\n            </FormGroup>\r\n            <Button type=\"submit\" variant=\"contained\" color=\"secondary\">Login</Button>\r\n            </Stack>\r\n            </Stack>\r\n            <Link to='/'> Create an Account</Link>\r\n          </form>\r\n        </Grid>\r\n      </Grid>\r\n    </Container>\r\n    </>\r\n  );\r\n  return design;\r\n}\r\nexport default Login;\r\n","C:\\Users\\Admin\\Desktop\\react_complete_information\\react-redux\\src\\cmp\\NotFound\\NotFound.jsx",[],[],"C:\\Users\\Admin\\Desktop\\react_complete_information\\react-redux\\src\\cmp\\Admin\\Dashboard\\Dashboard.jsx",[],[],"C:\\Users\\Admin\\Desktop\\react_complete_information\\react-redux\\src\\cmp\\Hooks\\useHttp.jsx",["84"],[],"import {\r\n  useState,\r\n  useEffect\r\n} from \"react\";\r\n\r\nimport axios from \"axios\";\r\n\r\naxios.defaults.baseURL= \"http://localhost:3434\";\r\nconst useHttp = (request)=>{\r\n  const[httpResponse,setHttpResponse] = useState(null);\r\n  const[httpError,setHttpError] = useState(null);\r\n  const[httpLoader,setHttpLoader] = useState(true);\r\n\r\n  const ajax = ()=>{\r\n    axios(request)\r\n    .then((response)=>{\r\n      setHttpResponse(response.data)\r\n    })\r\n    .catch((err)=>{\r\n      setHttpError(err.response)\r\n    }).finally(()=>{\r\n      setHttpLoader(false)\r\n    });\r\n  }\r\n\r\n  useEffect(()=>{\r\n    if(request){\r\n    ajax();\r\n    }\r\n  },[request]);\r\n\r\n    return [httpResponse,httpError,httpLoader];\r\n}\r\n\r\nexport default useHttp;\r\n","C:\\Users\\Admin\\Desktop\\react_complete_information\\react-redux\\src\\cmp\\Signup\\Signup.action.js",[],[],"C:\\Users\\Admin\\Desktop\\react_complete_information\\react-redux\\src\\cmp\\Signup\\Signup.state.js",[],[],"C:\\Users\\Admin\\Desktop\\react_complete_information\\react-redux\\src\\cmp\\Signup\\Signup.reducer.js",[],[],"C:\\Users\\Admin\\Desktop\\react_complete_information\\react-redux\\src\\Storage.js",[],[],"C:\\Users\\Admin\\Desktop\\react_complete_information\\react-redux\\src\\cmp\\guard\\AuthGuard.jsx",[],[],{"ruleId":"85","severity":1,"message":"86","line":26,"column":4,"nodeType":"87","messageId":"88","endLine":26,"endColumn":8},{"ruleId":"89","severity":1,"message":"90","line":322,"column":39,"nodeType":"91","messageId":"92","endLine":322,"endColumn":41},{"ruleId":"85","severity":1,"message":"93","line":28,"column":8,"nodeType":"87","messageId":"88","endLine":28,"endColumn":15},{"ruleId":"94","severity":1,"message":"95","line":94,"column":5,"nodeType":"96","endLine":94,"endColumn":15,"suggestions":"97"},{"ruleId":"98","severity":1,"message":"99","line":235,"column":24,"nodeType":"100","messageId":"101","endLine":235,"endColumn":25,"suggestions":"102"},{"ruleId":"103","severity":1,"message":"104","line":36,"column":13,"nodeType":"105","endLine":36,"endColumn":25},{"ruleId":"94","severity":1,"message":"106","line":30,"column":5,"nodeType":"96","endLine":30,"endColumn":14,"suggestions":"107"},"no-unused-vars","'lime' is defined but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'useHttp' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'cookie'. Either include it or remove the dependency array.","ArrayExpression",["108"],"no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["109","110"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","React Hook useEffect has a missing dependency: 'ajax'. Either include it or remove the dependency array.",["111"],{"desc":"112","fix":"113"},{"messageId":"114","fix":"115","desc":"116"},{"messageId":"117","fix":"118","desc":"119"},{"desc":"120","fix":"121"},"Update the dependencies array to be: [cookie, response]",{"range":"122","text":"123"},"removeEscape",{"range":"124","text":"125"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"126","text":"127"},"Replace the `\\` with `\\\\` to include the actual backslash character.","Update the dependencies array to be: [ajax, request]",{"range":"128","text":"129"},[1908,1918],"[cookie, response]",[5405,5406],"",[5405,5405],"\\",[623,632],"[ajax, request]"]